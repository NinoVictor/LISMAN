//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lisman.LismanService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Account", Namespace="http://schemas.datacontract.org/2004/07/LismanService")]
    [System.SerializableAttribute()]
    public partial class Account : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Key_confirmationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Lisman.LismanService.Player PlayerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Lisman.LismanService.Record RecordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Registration_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Key_confirmation {
            get {
                return this.Key_confirmationField;
            }
            set {
                if ((object.ReferenceEquals(this.Key_confirmationField, value) != true)) {
                    this.Key_confirmationField = value;
                    this.RaisePropertyChanged("Key_confirmation");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Lisman.LismanService.Player Player {
            get {
                return this.PlayerField;
            }
            set {
                if ((object.ReferenceEquals(this.PlayerField, value) != true)) {
                    this.PlayerField = value;
                    this.RaisePropertyChanged("Player");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Lisman.LismanService.Record Record {
            get {
                return this.RecordField;
            }
            set {
                if ((object.ReferenceEquals(this.RecordField, value) != true)) {
                    this.RecordField = value;
                    this.RaisePropertyChanged("Record");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Registration_date {
            get {
                return this.Registration_dateField;
            }
            set {
                if ((object.ReferenceEquals(this.Registration_dateField, value) != true)) {
                    this.Registration_dateField = value;
                    this.RaisePropertyChanged("Registration_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Player", Namespace="http://schemas.datacontract.org/2004/07/LismanService")]
    [System.SerializableAttribute()]
    public partial class Player : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Lisman.LismanService.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string First_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Last_nameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Lisman.LismanService.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string First_name {
            get {
                return this.First_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.First_nameField, value) != true)) {
                    this.First_nameField = value;
                    this.RaisePropertyChanged("First_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Last_name {
            get {
                return this.Last_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.Last_nameField, value) != true)) {
                    this.Last_nameField = value;
                    this.RaisePropertyChanged("Last_name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Record", Namespace="http://schemas.datacontract.org/2004/07/LismanService")]
    [System.SerializableAttribute()]
    public partial class Record : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Lisman.LismanService.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Mult_best_scoreField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Mult_games_playedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Mult_games_wonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> Story_best_scoreField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Lisman.LismanService.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Mult_best_score {
            get {
                return this.Mult_best_scoreField;
            }
            set {
                if ((this.Mult_best_scoreField.Equals(value) != true)) {
                    this.Mult_best_scoreField = value;
                    this.RaisePropertyChanged("Mult_best_score");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Mult_games_played {
            get {
                return this.Mult_games_playedField;
            }
            set {
                if ((this.Mult_games_playedField.Equals(value) != true)) {
                    this.Mult_games_playedField = value;
                    this.RaisePropertyChanged("Mult_games_played");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Mult_games_won {
            get {
                return this.Mult_games_wonField;
            }
            set {
                if ((this.Mult_games_wonField.Equals(value) != true)) {
                    this.Mult_games_wonField = value;
                    this.RaisePropertyChanged("Mult_games_won");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Story_best_score {
            get {
                return this.Story_best_scoreField;
            }
            set {
                if ((this.Story_best_scoreField.Equals(value) != true)) {
                    this.Story_best_scoreField = value;
                    this.RaisePropertyChanged("Story_best_score");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Message", Namespace="http://schemas.datacontract.org/2004/07/LismanService")]
    [System.SerializableAttribute()]
    public partial class Message : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Lisman.LismanService.Account AccountField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime Creation_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Lisman.LismanService.Account Account {
            get {
                return this.AccountField;
            }
            set {
                if ((object.ReferenceEquals(this.AccountField, value) != true)) {
                    this.AccountField = value;
                    this.RaisePropertyChanged("Account");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Creation_date {
            get {
                return this.Creation_dateField;
            }
            set {
                if ((this.Creation_dateField.Equals(value) != true)) {
                    this.Creation_dateField = value;
                    this.RaisePropertyChanged("Creation_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InformationPlayer", Namespace="http://schemas.datacontract.org/2004/07/LismanService")]
    [System.SerializableAttribute()]
    public partial class InformationPlayer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int colorLismanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool hasPowerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int lifesLismanField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int scoreLismanField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int colorLisman {
            get {
                return this.colorLismanField;
            }
            set {
                if ((this.colorLismanField.Equals(value) != true)) {
                    this.colorLismanField = value;
                    this.RaisePropertyChanged("colorLisman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool hasPower {
            get {
                return this.hasPowerField;
            }
            set {
                if ((this.hasPowerField.Equals(value) != true)) {
                    this.hasPowerField = value;
                    this.RaisePropertyChanged("hasPower");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int lifesLisman {
            get {
                return this.lifesLismanField;
            }
            set {
                if ((this.lifesLismanField.Equals(value) != true)) {
                    this.lifesLismanField = value;
                    this.RaisePropertyChanged("lifesLisman");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int scoreLisman {
            get {
                return this.scoreLismanField;
            }
            set {
                if ((this.scoreLismanField.Equals(value) != true)) {
                    this.scoreLismanField = value;
                    this.RaisePropertyChanged("scoreLisman");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LismanService.IAccountManager")]
    public interface IAccountManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManager/AddAccount", ReplyAction="http://tempuri.org/IAccountManager/AddAccountResponse")]
        int AddAccount(Lisman.LismanService.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManager/AddAccount", ReplyAction="http://tempuri.org/IAccountManager/AddAccountResponse")]
        System.Threading.Tasks.Task<int> AddAccountAsync(Lisman.LismanService.Account account);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManager/GetAccounts", ReplyAction="http://tempuri.org/IAccountManager/GetAccountsResponse")]
        Lisman.LismanService.Account[] GetAccounts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManager/GetAccounts", ReplyAction="http://tempuri.org/IAccountManager/GetAccountsResponse")]
        System.Threading.Tasks.Task<Lisman.LismanService.Account[]> GetAccountsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManager/GetAccountById", ReplyAction="http://tempuri.org/IAccountManager/GetAccountByIdResponse")]
        Lisman.LismanService.Account GetAccountById(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManager/GetAccountById", ReplyAction="http://tempuri.org/IAccountManager/GetAccountByIdResponse")]
        System.Threading.Tasks.Task<Lisman.LismanService.Account> GetAccountByIdAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManager/GetRecords", ReplyAction="http://tempuri.org/IAccountManager/GetRecordsResponse")]
        Lisman.LismanService.Record[] GetRecords();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAccountManager/GetRecords", ReplyAction="http://tempuri.org/IAccountManager/GetRecordsResponse")]
        System.Threading.Tasks.Task<Lisman.LismanService.Record[]> GetRecordsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAccountManagerChannel : Lisman.LismanService.IAccountManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccountManagerClient : System.ServiceModel.ClientBase<Lisman.LismanService.IAccountManager>, Lisman.LismanService.IAccountManager {
        
        public AccountManagerClient() {
        }
        
        public AccountManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AccountManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AccountManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddAccount(Lisman.LismanService.Account account) {
            return base.Channel.AddAccount(account);
        }
        
        public System.Threading.Tasks.Task<int> AddAccountAsync(Lisman.LismanService.Account account) {
            return base.Channel.AddAccountAsync(account);
        }
        
        public Lisman.LismanService.Account[] GetAccounts() {
            return base.Channel.GetAccounts();
        }
        
        public System.Threading.Tasks.Task<Lisman.LismanService.Account[]> GetAccountsAsync() {
            return base.Channel.GetAccountsAsync();
        }
        
        public Lisman.LismanService.Account GetAccountById(int id) {
            return base.Channel.GetAccountById(id);
        }
        
        public System.Threading.Tasks.Task<Lisman.LismanService.Account> GetAccountByIdAsync(int id) {
            return base.Channel.GetAccountByIdAsync(id);
        }
        
        public Lisman.LismanService.Record[] GetRecords() {
            return base.Channel.GetRecords();
        }
        
        public System.Threading.Tasks.Task<Lisman.LismanService.Record[]> GetRecordsAsync() {
            return base.Channel.GetRecordsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LismanService.IGameManager")]
    public interface IGameManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/CreateGame", ReplyAction="http://tempuri.org/IGameManager/CreateGameResponse")]
        int CreateGame(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/CreateGame", ReplyAction="http://tempuri.org/IGameManager/CreateGameResponse")]
        System.Threading.Tasks.Task<int> CreateGameAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/JoinGame", ReplyAction="http://tempuri.org/IGameManager/JoinGameResponse")]
        int JoinGame(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/JoinGame", ReplyAction="http://tempuri.org/IGameManager/JoinGameResponse")]
        System.Threading.Tasks.Task<int> JoinGameAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/LeaveGame", ReplyAction="http://tempuri.org/IGameManager/LeaveGameResponse")]
        int LeaveGame(string user, int game);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IGameManager/LeaveGame", ReplyAction="http://tempuri.org/IGameManager/LeaveGameResponse")]
        System.Threading.Tasks.Task<int> LeaveGameAsync(string user, int game);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IGameManagerChannel : Lisman.LismanService.IGameManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GameManagerClient : System.ServiceModel.ClientBase<Lisman.LismanService.IGameManager>, Lisman.LismanService.IGameManager {
        
        public GameManagerClient() {
        }
        
        public GameManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public GameManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public GameManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int CreateGame(string user) {
            return base.Channel.CreateGame(user);
        }
        
        public System.Threading.Tasks.Task<int> CreateGameAsync(string user) {
            return base.Channel.CreateGameAsync(user);
        }
        
        public int JoinGame(string user) {
            return base.Channel.JoinGame(user);
        }
        
        public System.Threading.Tasks.Task<int> JoinGameAsync(string user) {
            return base.Channel.JoinGameAsync(user);
        }
        
        public int LeaveGame(string user, int game) {
            return base.Channel.LeaveGame(user, game);
        }
        
        public System.Threading.Tasks.Task<int> LeaveGameAsync(string user, int game) {
            return base.Channel.LeaveGameAsync(user, game);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LismanService.IChatManager", CallbackContract=typeof(Lisman.LismanService.IChatManagerCallback))]
    public interface IChatManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessage")]
        void SendMessage(Lisman.LismanService.Message message, int Game);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/SendMessage")]
        System.Threading.Tasks.Task SendMessageAsync(Lisman.LismanService.Message message, int Game);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/JoinChat")]
        void JoinChat(string user, int idgame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/JoinChat")]
        System.Threading.Tasks.Task JoinChatAsync(string user, int idgame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/LeaveChat")]
        void LeaveChat(string user, int idgame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/LeaveChat")]
        System.Threading.Tasks.Task LeaveChatAsync(string user, int idgame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/StartGame")]
        void StartGame(string user, int idgame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/StartGame")]
        System.Threading.Tasks.Task StartGameAsync(string user, int idgame);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/NotifyMessage")]
        void NotifyMessage(Lisman.LismanService.Message message);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/NotifyJoinedPlayer")]
        void NotifyJoinedPlayer(string user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/NotifyNumberPlayers")]
        void NotifyNumberPlayers(int numberPlayers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/NotifyLeftPlayer")]
        void NotifyLeftPlayer(string user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChatManager/InitGame")]
        void InitGame();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatManagerChannel : Lisman.LismanService.IChatManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatManagerClient : System.ServiceModel.DuplexClientBase<Lisman.LismanService.IChatManager>, Lisman.LismanService.IChatManager {
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void SendMessage(Lisman.LismanService.Message message, int Game) {
            base.Channel.SendMessage(message, Game);
        }
        
        public System.Threading.Tasks.Task SendMessageAsync(Lisman.LismanService.Message message, int Game) {
            return base.Channel.SendMessageAsync(message, Game);
        }
        
        public void JoinChat(string user, int idgame) {
            base.Channel.JoinChat(user, idgame);
        }
        
        public System.Threading.Tasks.Task JoinChatAsync(string user, int idgame) {
            return base.Channel.JoinChatAsync(user, idgame);
        }
        
        public void LeaveChat(string user, int idgame) {
            base.Channel.LeaveChat(user, idgame);
        }
        
        public System.Threading.Tasks.Task LeaveChatAsync(string user, int idgame) {
            return base.Channel.LeaveChatAsync(user, idgame);
        }
        
        public void StartGame(string user, int idgame) {
            base.Channel.StartGame(user, idgame);
        }
        
        public System.Threading.Tasks.Task StartGameAsync(string user, int idgame) {
            return base.Channel.StartGameAsync(user, idgame);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LismanService.ILoginManager")]
    public interface ILoginManager {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginManager/LoginAccount", ReplyAction="http://tempuri.org/ILoginManager/LoginAccountResponse")]
        Lisman.LismanService.Account LoginAccount(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginManager/LoginAccount", ReplyAction="http://tempuri.org/ILoginManager/LoginAccountResponse")]
        System.Threading.Tasks.Task<Lisman.LismanService.Account> LoginAccountAsync(string user, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginManager/LogoutAccount", ReplyAction="http://tempuri.org/ILoginManager/LogoutAccountResponse")]
        int LogoutAccount(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginManager/LogoutAccount", ReplyAction="http://tempuri.org/ILoginManager/LogoutAccountResponse")]
        System.Threading.Tasks.Task<int> LogoutAccountAsync(string user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginManager/UserNameExists", ReplyAction="http://tempuri.org/ILoginManager/UserNameExistsResponse")]
        bool UserNameExists(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginManager/UserNameExists", ReplyAction="http://tempuri.org/ILoginManager/UserNameExistsResponse")]
        System.Threading.Tasks.Task<bool> UserNameExistsAsync(string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginManager/EmailExists", ReplyAction="http://tempuri.org/ILoginManager/EmailExistsResponse")]
        bool EmailExists(string emailAdress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILoginManager/EmailExists", ReplyAction="http://tempuri.org/ILoginManager/EmailExistsResponse")]
        System.Threading.Tasks.Task<bool> EmailExistsAsync(string emailAdress);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoginManagerChannel : Lisman.LismanService.ILoginManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoginManagerClient : System.ServiceModel.ClientBase<Lisman.LismanService.ILoginManager>, Lisman.LismanService.ILoginManager {
        
        public LoginManagerClient() {
        }
        
        public LoginManagerClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoginManagerClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginManagerClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoginManagerClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Lisman.LismanService.Account LoginAccount(string user, string password) {
            return base.Channel.LoginAccount(user, password);
        }
        
        public System.Threading.Tasks.Task<Lisman.LismanService.Account> LoginAccountAsync(string user, string password) {
            return base.Channel.LoginAccountAsync(user, password);
        }
        
        public int LogoutAccount(string user) {
            return base.Channel.LogoutAccount(user);
        }
        
        public System.Threading.Tasks.Task<int> LogoutAccountAsync(string user) {
            return base.Channel.LogoutAccountAsync(user);
        }
        
        public bool UserNameExists(string username) {
            return base.Channel.UserNameExists(username);
        }
        
        public System.Threading.Tasks.Task<bool> UserNameExistsAsync(string username) {
            return base.Channel.UserNameExistsAsync(username);
        }
        
        public bool EmailExists(string emailAdress) {
            return base.Channel.EmailExists(emailAdress);
        }
        
        public System.Threading.Tasks.Task<bool> EmailExistsAsync(string emailAdress) {
            return base.Channel.EmailExistsAsync(emailAdress);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LismanService.IMultiplayerManager", CallbackContract=typeof(Lisman.LismanService.IMultiplayerManagerCallback))]
    public interface IMultiplayerManager {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMultiplayerManager/JoinMultiplayerGame")]
        void JoinMultiplayerGame(string user, int idgame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMultiplayerManager/JoinMultiplayerGame")]
        System.Threading.Tasks.Task JoinMultiplayerGameAsync(string user, int idgame);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMultiplayerManager/MoveLisman")]
        void MoveLisman(int idGame, string user, int initialPositionX, int initialPositionY, int finalPositionX, int finalPositionY);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMultiplayerManager/MoveLisman")]
        System.Threading.Tasks.Task MoveLismanAsync(int idGame, string user, int initialPositionX, int initialPositionY, int finalPositionX, int finalPositionY);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMultiplayerManagerCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMultiplayerManager/PrintInformationPlayers")]
        void PrintInformationPlayers(System.Collections.Generic.Dictionary<string, Lisman.LismanService.InformationPlayer> listPlayers);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMultiplayerManager/NotifyColorPlayer")]
        void NotifyColorPlayer(int colorPlayer, string user);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IMultiplayerManager/NotifyLismanMoved")]
        void NotifyLismanMoved(int colorPlayer, int positionX, int positionY);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMultiplayerManagerChannel : Lisman.LismanService.IMultiplayerManager, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MultiplayerManagerClient : System.ServiceModel.DuplexClientBase<Lisman.LismanService.IMultiplayerManager>, Lisman.LismanService.IMultiplayerManager {
        
        public MultiplayerManagerClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public MultiplayerManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public MultiplayerManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplayerManagerClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public MultiplayerManagerClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public void JoinMultiplayerGame(string user, int idgame) {
            base.Channel.JoinMultiplayerGame(user, idgame);
        }
        
        public System.Threading.Tasks.Task JoinMultiplayerGameAsync(string user, int idgame) {
            return base.Channel.JoinMultiplayerGameAsync(user, idgame);
        }
        
        public void MoveLisman(int idGame, string user, int initialPositionX, int initialPositionY, int finalPositionX, int finalPositionY) {
            base.Channel.MoveLisman(idGame, user, initialPositionX, initialPositionY, finalPositionX, finalPositionY);
        }
        
        public System.Threading.Tasks.Task MoveLismanAsync(int idGame, string user, int initialPositionX, int initialPositionY, int finalPositionX, int finalPositionY) {
            return base.Channel.MoveLismanAsync(idGame, user, initialPositionX, initialPositionY, finalPositionX, finalPositionY);
        }
    }
}
