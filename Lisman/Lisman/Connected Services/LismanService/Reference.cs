//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Lisman.LismanService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Acceso", Namespace="http://schemas.datacontract.org/2004/07/LismanService")]
    [System.SerializableAttribute()]
    public partial class Acceso : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ConstraseniaField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string Tipo_accesoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsuarioField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string key_confirmationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Constrasenia {
            get {
                return this.ConstraseniaField;
            }
            set {
                if ((object.ReferenceEquals(this.ConstraseniaField, value) != true)) {
                    this.ConstraseniaField = value;
                    this.RaisePropertyChanged("Constrasenia");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Tipo_acceso {
            get {
                return this.Tipo_accesoField;
            }
            set {
                if ((object.ReferenceEquals(this.Tipo_accesoField, value) != true)) {
                    this.Tipo_accesoField = value;
                    this.RaisePropertyChanged("Tipo_acceso");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Usuario {
            get {
                return this.UsuarioField;
            }
            set {
                if ((object.ReferenceEquals(this.UsuarioField, value) != true)) {
                    this.UsuarioField = value;
                    this.RaisePropertyChanged("Usuario");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string key_confirmation {
            get {
                return this.key_confirmationField;
            }
            set {
                if ((object.ReferenceEquals(this.key_confirmationField, value) != true)) {
                    this.key_confirmationField = value;
                    this.RaisePropertyChanged("key_confirmation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="LismanService.IUser")]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddAcceso", ReplyAction="http://tempuri.org/IUser/AddAccesoResponse")]
        int AddAcceso(Lisman.LismanService.Acceso cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/AddAcceso", ReplyAction="http://tempuri.org/IUser/AddAccesoResponse")]
        System.Threading.Tasks.Task<int> AddAccesoAsync(Lisman.LismanService.Acceso cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UpdateAcceso", ReplyAction="http://tempuri.org/IUser/UpdateAccesoResponse")]
        int UpdateAcceso(Lisman.LismanService.Acceso cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/UpdateAcceso", ReplyAction="http://tempuri.org/IUser/UpdateAccesoResponse")]
        System.Threading.Tasks.Task<int> UpdateAccesoAsync(Lisman.LismanService.Acceso cuenta);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Login", ReplyAction="http://tempuri.org/IUser/LoginResponse")]
        Lisman.LismanService.Acceso Login(string usuario, string contrasenia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/Login", ReplyAction="http://tempuri.org/IUser/LoginResponse")]
        System.Threading.Tasks.Task<Lisman.LismanService.Acceso> LoginAsync(string usuario, string contrasenia);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAccesoById", ReplyAction="http://tempuri.org/IUser/GetAccesoByIdResponse")]
        Lisman.LismanService.Acceso GetAccesoById(string cuentaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetAccesoById", ReplyAction="http://tempuri.org/IUser/GetAccesoByIdResponse")]
        System.Threading.Tasks.Task<Lisman.LismanService.Acceso> GetAccesoByIdAsync(string cuentaId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/getConexion", ReplyAction="http://tempuri.org/IUser/getConexionResponse")]
        int getConexion();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/getConexion", ReplyAction="http://tempuri.org/IUser/getConexionResponse")]
        System.Threading.Tasks.Task<int> getConexionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : Lisman.LismanService.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.ClientBase<Lisman.LismanService.IUser>, Lisman.LismanService.IUser {
        
        public UserClient() {
        }
        
        public UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public int AddAcceso(Lisman.LismanService.Acceso cuenta) {
            return base.Channel.AddAcceso(cuenta);
        }
        
        public System.Threading.Tasks.Task<int> AddAccesoAsync(Lisman.LismanService.Acceso cuenta) {
            return base.Channel.AddAccesoAsync(cuenta);
        }
        
        public int UpdateAcceso(Lisman.LismanService.Acceso cuenta) {
            return base.Channel.UpdateAcceso(cuenta);
        }
        
        public System.Threading.Tasks.Task<int> UpdateAccesoAsync(Lisman.LismanService.Acceso cuenta) {
            return base.Channel.UpdateAccesoAsync(cuenta);
        }
        
        public Lisman.LismanService.Acceso Login(string usuario, string contrasenia) {
            return base.Channel.Login(usuario, contrasenia);
        }
        
        public System.Threading.Tasks.Task<Lisman.LismanService.Acceso> LoginAsync(string usuario, string contrasenia) {
            return base.Channel.LoginAsync(usuario, contrasenia);
        }
        
        public Lisman.LismanService.Acceso GetAccesoById(string cuentaId) {
            return base.Channel.GetAccesoById(cuentaId);
        }
        
        public System.Threading.Tasks.Task<Lisman.LismanService.Acceso> GetAccesoByIdAsync(string cuentaId) {
            return base.Channel.GetAccesoByIdAsync(cuentaId);
        }
        
        public int getConexion() {
            return base.Channel.getConexion();
        }
        
        public System.Threading.Tasks.Task<int> getConexionAsync() {
            return base.Channel.getConexionAsync();
        }
    }
}
