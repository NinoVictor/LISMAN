„4
àC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\Encrypter.cs
	namespace 	
Lisman
 
{ 
static 

class 
	Encrypter 
{		 
static

 
String

 
parentDirectory

 %
=

& '
	Directory

( 1
.

1 2
	GetParent

2 ;
(

; <
	Directory

< E
.

E F
GetCurrentDirectory

F Y
(

Y Z
)

Z [
)

[ \
.

\ ]
Parent

] c
.

c d
FullName

d l
;

l m
static 
readonly 
string 
PasswordHash +
=, -
GetHashPassword. =
(= >
)> ?
;? @
static 
readonly 
string 
SaltKey &
=' (
$str) 3
;3 4
static 
readonly 
string 
VIKey $
=% &
$str' 9
;9 :
public 
static 
string 
Decrypt $
($ %
string% +
encryptedText, 9
)9 :
{ 	
byte 
[ 
] 
cipherTextBytes "
=# $
Convert% ,
., -
FromBase64String- =
(= >
encryptedText> K
)K L
;L M
byte 
[ 
] 
keyBytes 
= 
new !
Rfc2898DeriveBytes" 4
(4 5
PasswordHash5 A
,A B
EncodingC K
.K L
ASCIIL Q
.Q R
GetBytesR Z
(Z [
SaltKey[ b
)b c
)c d
.d e
GetBytese m
(m n
$numn q
/r s
$numt u
)u v
;v w
var 
symmetricKey 
= 
new "
RijndaelManaged# 2
(2 3
)3 4
{5 6
Mode7 ;
=< =

CipherMode> H
.H I
CBCI L
,L M
PaddingN U
=V W
PaddingModeX c
.c d
Noned h
}i j
;j k
var 
	decryptor 
= 
symmetricKey (
.( )
CreateDecryptor) 8
(8 9
keyBytes9 A
,A B
EncodingC K
.K L
ASCIIL Q
.Q R
GetBytesR Z
(Z [
VIKey[ `
)` a
)a b
;b c
var 
memoryStream 
= 
new "
MemoryStream# /
(/ 0
cipherTextBytes0 ?
)? @
;@ A
var 
cryptoStream 
= 
new "
CryptoStream# /
(/ 0
memoryStream0 <
,< =
	decryptor> G
,G H
CryptoStreamModeI Y
.Y Z
ReadZ ^
)^ _
;_ `
byte 
[ 
] 
plainTextBytes !
=" #
new$ '
byte( ,
[, -
cipherTextBytes- <
.< =
Length= C
]C D
;D E
int 
decryptedByteCount "
=# $
cryptoStream% 1
.1 2
Read2 6
(6 7
plainTextBytes7 E
,E F
$numG H
,H I
plainTextBytesJ X
.X Y
LengthY _
)_ `
;` a
memoryStream 
. 
Close 
( 
)  
;  !
cryptoStream 
. 
Close 
( 
)  
;  !
return 
Encoding 
. 
UTF8  
.  !
	GetString! *
(* +
plainTextBytes+ 9
,9 :
$num; <
,< =
decryptedByteCount> P
)P Q
.Q R
TrimEndR Y
(Y Z
$strZ ^
.^ _
ToCharArray_ j
(j k
)k l
)l m
;m n
} 	
public 
static 
string 
EncodePassword +
(+ ,
string, 2
originalPassword3 C
)C D
{   	
var!! 
bytes!! 
=!! 
System!! 
.!! 
Text!! #
.!!# $
Encoding!!$ ,
.!!, -
UTF8!!- 1
.!!1 2
GetBytes!!2 :
(!!: ;
originalPassword!!; K
)!!K L
;!!L M
using"" 
("" 
var"" 
hash"" 
="" 
System"" $
.""$ %
Security""% -
.""- .
Cryptography"". :
."": ;
SHA512""; A
.""A B
Create""B H
(""H I
)""I J
)""J K
{## 
var$$ 
hashedInputBytes$$ $
=$$% &
hash$$' +
.$$+ ,
ComputeHash$$, 7
($$7 8
bytes$$8 =
)$$= >
;$$> ?
var%% $
hashedInputStringBuilder%% ,
=%%- .
new%%/ 2
System%%3 9
.%%9 :
Text%%: >
.%%> ?
StringBuilder%%? L
(%%L M
$num%%M P
)%%P Q
;%%Q R
foreach&& 
(&& 
var&& 
b&& 
in&& !
hashedInputBytes&&" 2
)&&2 3$
hashedInputStringBuilder'' ,
.'', -
Append''- 3
(''3 4
b''4 5
.''5 6
ToString''6 >
(''> ?
$str''? C
)''C D
)''D E
;''E F
return(( $
hashedInputStringBuilder(( /
.((/ 0
ToString((0 8
(((8 9
)((9 :
;((: ;
})) 
}++ 	
public,, 
static,, 
string,, 
GetHashPassword,, ,
(,,, -
),,- .
{-- 	
string.. 
password.. 
;.. 
using// 
(// 
StreamReader// 
sr//  "
=//# $
new//% (
StreamReader//) 5
(//5 6
parentDirectory//6 E
+//F G
$str//H e
)//e f
)//f g
{00 
password11 
=11 
sr11 
.11 
ReadLine11 %
(11% &
)11& '
;11' (
}22 
return33 
password33 
;33 
}44 	
}55 
}66 ÙR
âC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\Lobby.xaml.cs
	namespace 	
Lisman
 
{ 
public

 

partial

 
class

 
Lobby

 
:

  
Window

! '
,

' (
LismanService

) 6
.

6 7 
IChatManagerCallback

7 K
{

L M
int 
COMPLETEPLAYERS 
= 
$num 
;  
InstanceContext 
instance  
=! "
null# '
;' (
LismanService 
. 
ChatManagerClient '
client( .
=/ 0
null1 5
;5 6
int 
idGame 
; 
public 
Lobby 
( 
int 
idGame 
)  
{ 	
InitializeComponent 
(  
)  !
;! "
instance 
= 
new 
InstanceContext *
(* +
this+ /
)/ 0
;0 1
this 
. 
idGame 
= 
idGame  
;  !
client 
= 
new 
ChatManagerClient *
(* +
instance+ 3
)3 4
;4 5
try 
{ 
client 
. 
JoinChat 
(  
SingletonAccount  0
.0 1
getSingletonAccount1 D
(D E
)E F
.F G
UserG K
,K L
idGameM S
)S T
;T U!
textBlock_name_player %
.% &
Text& *
=+ ,
SingletonAccount- =
.= >
getSingletonAccount> Q
(Q R
)R S
.S T
UserT X
;X Y
btn_startGame 
. 
	IsEnabled '
=( )
false* /
;/ 0
} 
catch 
( 
	Exception 
ex 
)  
{ 

MessageBox 
. 
Show 
(  

Properties  *
.* +
	Resources+ 4
.4 5#
server_connection_error5 L
)L M
;M N
Logger 
. 
log 
. 
Warn 
(  
$str  1
+2 3
ex4 6
.6 7
Message7 >
)> ?
;? @
} 
}"" 	
private$$ 
void$$ 
btn_exitGame_Click$$ '
($$' (
object$$( .
sender$$/ 5
,$$5 6
RoutedEventArgs$$7 F
e$$G H
)$$H I
{$$J K
MultiplayerHome%% 
homeMultiplayer%% +
=%%, -
new%%. 1
MultiplayerHome%%2 A
(%%A B
)%%B C
;%%C D
LismanService&& 
.&& 
GameManagerClient&& +

clientGame&&, 6
=&&7 8
new&&9 <
LismanService&&= J
.&&J K
GameManagerClient&&K \
(&&\ ]
)&&] ^
;&&^ _
try(( 
{)) 

clientGame** 
.** 
	LeaveGame** $
(**$ %
SingletonAccount**% 5
.**5 6
getSingletonAccount**6 I
(**I J
)**J K
.**K L
User**L P
,**P Q
idGame**R X
)**X Y
;**Y Z
client++ 
.++ 
	LeaveChat++  
(++  !
SingletonAccount++! 1
.++1 2
getSingletonAccount++2 E
(++E F
)++F G
.++G H
User++H L
,++L M
idGame++N T
)++T U
;++U V
homeMultiplayer,, 
.,,  
Show,,  $
(,,$ %
),,% &
;,,& '
this-- 
.-- 
Close-- 
(-- 
)-- 
;-- 
}.. 
catch// 
(// 
	Exception// 
ex// 
)//  
{00 

MessageBox11 
.11 
Show11 
(11  

Properties11  *
.11* +
	Resources11+ 4
.114 5#
server_connection_error115 L
)11L M
;11M N
Logger22 
.22 
log22 
.22 
Warn22 
(22  
$str22  =
+22> ?
ex22@ B
.22B C
Message22C J
)22J K
;22K L
}33 
}44 	
public66 
void66 
NotifyMessage66 !
(66! "
Message66" )
message66* 1
)661 2
{77 	
textBox_chat88 
.88 
Text88 
+=88  
$str88! %
+88& '
message88( /
.88/ 0
userName880 8
+889 :
$str88; ?
+88@ A
message88B I
.88I J
Text88J N
;88N O
}:: 	
public<< 
void<< 
NotifyJoinedPlayer<< &
(<<& '
string<<' -
user<<. 2
)<<2 3
{== 	
textBox_chat>> 
.>> 
Text>> 
+=>>  
$str>>! %
+>>& '
user>>( ,
+>>- .

Properties>>/ 9
.>>9 :
	Resources>>: C
.>>C D
joined_game>>D O
;>>O P
}?? 	
publicAA 
voidAA 
SendMessageAA 
(AA  
)AA  !
{AA" #
ifBB 
(BB 
textBox_messageBB 
.BB  
TextBB  $
!=BB% '
StringBB( .
.BB. /
EmptyBB/ 4
)BB4 5
{BB6 7
MessageDD 
messageDD 
=DD  !
newDD" %
MessageDD& -
{DD. /
TextEE 
=EE 
textBox_messageEE *
.EE* +
TextEE+ /
,EE/ 0
userNameFF 
=FF 
SingletonAccountFF /
.FF/ 0
getSingletonAccountFF0 C
(FFC D
)FFD E
.FFE F
UserFFF J
}GG 
;GG 
tryII 
{JJ 
clientKK 
.KK 
SendMessageKK &
(KK& '
messageKK' .
,KK. /
idGameKK0 6
)KK6 7
;KK7 8
textBox_messageLL #
.LL# $
TextLL$ (
=LL) *
StringLL+ 1
.LL1 2
EmptyLL2 7
;LL7 8
}MM 
catchNN 
(NN 
	ExceptionNN  
exNN! #
)NN# $
{OO 

MessageBoxPP 
.PP 
ShowPP #
(PP# $

PropertiesPP$ .
.PP. /
	ResourcesPP/ 8
.PP8 9#
server_connection_errorPP9 P
)PPP Q
;PPQ R
LoggerQQ 
.QQ 
logQQ 
.QQ 
WarnQQ #
(QQ# $
$strQQ$ :
+QQ; <
exQQ= ?
.QQ? @
MessageQQ@ G
)QQG H
;QQH I
}RR 
}VV 
}ZZ 	
private\\ 
void\\ 
button_send_Click\\ &
(\\& '
object\\' -
sender\\. 4
,\\4 5
RoutedEventArgs\\6 E
e\\F G
)\\G H
{]] 	
SendMessage^^ 
(^^ 
)^^ 
;^^ 
}__ 	
publicbb 
voidbb 
NotifyNumberPlayersbb '
(bb' (
intbb( +
numberPlayersbb, 9
)bb9 :
{cc 	
ifdd 
(dd 
numberPlayersdd 
==dd 
COMPLETEPLAYERSdd  /
)dd/ 0
{dd1 2
btn_startGameee 
.ee 
	IsEnabledee '
=ee( )
trueee* .
;ee. /
}ff $
textBlock_number_playersgg $
.gg$ %
Textgg% )
=gg* +
numberPlayersgg- :
+gg; <
$strgg= C
;ggC D
}hh 	
publickk 
voidkk 
On_key_Down_Handlerkk '
(kk' (
objectkk( .
senderkk/ 5
,kk5 6
KeyEventArgskk7 C
ekkD E
)kkE F
{kkG H
ifll 
(ll 
ell 
.ll 
Keyll 
==ll 
Keyll 
.ll 
Returnll #
)ll# $
{ll% &
SendMessagemm 
(mm 
)mm 
;mm 
}nn 
}oo 	
publicqq 
voidqq 
NotifyLeftPlayerqq $
(qq$ %
stringqq% +
userqq, 0
)qq0 1
{qq2 3
textBox_chatrr 
.rr 
Textrr 
+=rr  
userrr! %
+rr& '

Propertiesrr( 2
.rr2 3
	Resourcesrr3 <
.rr< =
	left_gamerr= F
;rrF G
}ss 	
privateuu 
voiduu 
btn_startGame_Clickuu (
(uu( )
objectuu) /
senderuu0 6
,uu6 7
RoutedEventArgsuu8 G
euuH I
)uuI J
{vv 	
tryww 
{ww 
clientxx 
.xx 
	StartGamexx  
(xx  !
SingletonAccountxx! 1
.xx1 2
getSingletonAccountxx2 E
(xxE F
)xxF G
.xxG H
UserxxH L
,xxL M
idGamexxN T
)xxT U
;xxU V
}yy 
catchzz 
(zz 
	Exceptionzz 
exzz 
)zz  
{{{ 

MessageBox|| 
.|| 
Show|| 
(||  

Properties||  *
.||* +
	Resources||+ 4
.||4 5#
server_connection_error||5 L
)||L M
;||M N
Console}} 
.}} 
	WriteLine}} !
(}}! "
$str}}" 7
+}}8 9
ex}}: <
.}}< =
Message}}= D
)}}D E
;}}E F
}~~ 
}
ÄÄ 	
public
ÇÇ 
void
ÇÇ 
InitGame
ÇÇ 
(
ÇÇ 
)
ÇÇ 
{
ÉÉ 	
MultiplayerGame
ÑÑ 
game
ÑÑ  
=
ÑÑ! "
new
ÑÑ# &
MultiplayerGame
ÑÑ' 6
(
ÑÑ6 7
idGame
ÑÑ7 =
)
ÑÑ= >
;
ÑÑ> ?
game
ÖÖ 
.
ÖÖ 
Show
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
this
ÜÜ 
.
ÜÜ 
Close
ÜÜ 
(
ÜÜ 
)
ÜÜ 
;
ÜÜ 
}
áá 	
}
àà 
}ââ ∑
ÖC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\Logger.cs
	namespace 	
Lisman
 
{ 
public 

static 
class 
Logger 
{ 
public 
static 
readonly 
log4net &
.& '
ILog' +
log, /
=0 1
log4net2 9
.9 :

LogManager: D
.D E
	GetLoggerE N
(N O
SystemO U
.U V

ReflectionV `
.` a

MethodBasea k
.k l
GetCurrentMethodl |
(| }
)} ~
.~ 
DeclaringType	 å
)
å ç
;
ç é
} 
}		 É
åC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\MainMenu.xaml.cs
	namespace 	
Lisman
 
{ 
public 

partial 
class 
MainMenu !
:" #
Window$ *
{+ ,
public 
MainMenu 
( 
) 
{		 	
InitializeComponent

 
(

  
)

  !
;

! "
} 	
private 
void 
Button_Click_Logout (
(( )
object) /
sender0 6
,6 7
RoutedEventArgs8 G
eH I
)I J
{ 	

MainWindow 
login 
= 
new "

MainWindow# -
(- .
). /
;/ 0
login 
. 
Show 
( 
) 
; 
this 
. 
Close 
( 
) 
; 
} 	
private 
void !
table_positions_Click *
(* +
object+ 1
sender2 8
,8 9
RoutedEventArgs: I
eJ K
)K L
{ 	
PositionsTable 
	positions $
=% &
new' *
PositionsTable+ 9
(9 :
): ;
;; <
	positions 
. 
Show 
( 
) 
; 
this 
. 
Close 
( 
) 
; 
} 	
private 
void (
button_multiplayerMode_Click 1
(1 2
object2 8
sender9 ?
,? @
RoutedEventArgsA P
eQ R
)R S
{ 	
MultiplayerHome 
multiplayerWindow -
=. /
new0 3
MultiplayerHome4 C
(C D
)D E
;E F
multiplayerWindow 
. 
Show "
(" #
)# $
;$ %
this 
. 
Close 
( 
) 
; 
}!! 	
}$$ 
}%% ü"
ìC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\MultiplayerHome.xaml.cs
	namespace 	
Lisman
 
{ 
public 

partial 
class 
MultiplayerHome (
:) *
Window+ 1
{2 3
public		 
MultiplayerHome		 
(		 
)		  
{

 	
InitializeComponent 
(  
)  !
;! "
} 	
private 
void 
button_goBack_Click (
(( )
object) /
sender0 6
,6 7
RoutedEventArgs8 G
eH I
)I J
{ 	
MainMenu 
menu 
= 
new 
MainMenu  (
(( )
)) *
;* +
menu 
. 
Show 
( 
) 
; 
this 
. 
Close 
( 
) 
; 
} 	
private 
void  
button_newGame_Click )
() *
object* 0
sender1 7
,7 8
RoutedEventArgs9 H
eI J
)J K
{ 	
LismanService 
. 
GameManagerClient +
client, 2
=3 4
new5 8
LismanService9 F
.F G
GameManagerClientG X
(X Y
)Y Z
;Z [
try 
{ 
int 
idGame 
= 
client #
.# $

CreateGame$ .
(. /
SingletonAccount/ ?
.? @
getSingletonAccount@ S
(S T
)T U
.U V
UserV Z
)Z [
;[ \
if 
( 
idGame 
> 
$num 
) 
{ 
Lobby 
lobby 
=  !
new" %
Lobby& +
(+ ,
idGame, 2
)2 3
;3 4
lobby 
. 
Show 
( 
)  
;  !
this   
.   
Close   
(   
)    
;    !
}!! 
}"" 
catch## 
(## 
	Exception## 
ex## 
)##  
{$$ 

MessageBox&& 
.&& 
Show&& 
(&&  
$str&&  `
)&&` a
;&&a b
Logger'' 
.'' 
log'' 
.'' 
Error''  
(''  !
$str''! 4
+''5 6
ex''7 9
.''9 :
Message'': A
)''A B
;''B C
}(( 
},, 	
private.. 
void.. !
button_joinGame_Click.. *
(..* +
object..+ 1
sender..2 8
,..8 9
RoutedEventArgs..: I
e..J K
)..K L
{// 	
LismanService00 
.00 
GameManagerClient00 +
client00, 2
=003 4
new005 8
LismanService009 F
.00F G
GameManagerClient00G X
(00X Y
)00Y Z
;00Z [
int11 
idGame11 
=11 
client11 
.11  
JoinGame11  (
(11( )
SingletonAccount11) 9
.119 :
getSingletonAccount11: M
(11M N
)11N O
.11O P
User11P T
)11T U
;11U V
if22 
(22 
idGame22 
>22 
$num22 
)22 
{22 
Lobby33 
lobby33 
=33 
new33 !
Lobby33" '
(33' (
idGame33( .
)33. /
;33/ 0
lobby44 
.44 
Show44 
(44 
)44 
;44 
this55 
.55 
Close55 
(55 
)55 
;55 
}66 
else66 
{66 

MessageBox77 
.77 
Show77 
(77  

Properties77  *
.77* +
	Resources77+ 4
.774 5!
message_nogames_found775 J
)77J K
;77K L
}88 
};; 	
}<< 
}== ƒ≠
ìC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\MultiplayerGame.xaml.cs
	namespace 	
Lisman
 
{ 
public 

partial 
class 
MultiplayerGame (
:) *
Window+ 1
,1 2'
IMultiplayerManagerCallback3 N
{N O
int 
idgame 
; 
int 
[ 
, 
] 
gameMap 
= 
new 
int  
[  !
$num! #
,# $
$num% '
]' (
;( )
Image 
[ 
, 
] 
matrixPillsImages "
=# $
new% (
Image) .
[. /
$num/ 1
,1 2
$num3 5
]5 6
;6 7
const 
int 
LISMANYELLOW 
=  
$num! "
;" #
const 
int 
	LISMANRED 
= 
$num 
;  
const 
int 

LISMANBLUE 
= 
$num  
;  !
const 
int 
LISMANGREEN 
= 
$num  !
;! "
int 
speedLisman 
= 
$num 
; 
int 
timerValidation 
= 
$num 
;  
int 
playerColor 
; 
Image   
lismanPlayerImage   
=    !
null  " &
;  & '
int"" 
X"" 
="" 
$num"" 
;"" 
int## 
Y## 
=## 
$num## 
;## 
String%% 
parentDirectory%% 
=%%  
	Directory%%! *
.%%* +
	GetParent%%+ 4
(%%4 5
	Directory%%5 >
.%%> ?
GetCurrentDirectory%%? R
(%%R S
)%%S T
)%%T U
.%%U V
Parent%%V \
.%%\ ]
FullName%%] e
;%%e f
Image'' 
pill0'' 
='' 
new'' 
Image'' 
(''  
)''  !
;''! "
Image(( 
pill1(( 
=(( 
new(( 
Image(( 
(((  
)((  !
;((! "
Image)) 
pill2)) 
=)) 
new)) 
Image)) 
())  
)))  !
;))! "
Image** 
pill3** 
=** 
new** 
Image** 
(**  
)**  !
;**! "
Image++ 
pill4++ 
=++ 
new++ 
Image++ 
(++  
)++  !
;++! "
Image,, 
pill5,, 
=,, 
new,, 
Image,, 
(,,  
),,  !
;,,! "
Image-- 
pill6-- 
=-- 
new-- 
Image-- 
(--  
)--  !
;--! "
Image.. 
pill7.. 
=.. 
new.. 
Image.. 
(..  
)..  !
;..! "
Image// 
pill8// 
=// 
new// 
Image// 
(//  
)//  !
;//! "
Image00 
pill900 
=00 
new00 
Image00 
(00  
)00  !
;00! "
Image11 
pill1011 
=11 
new11 
Image11  
(11  !
)11! "
;11" #
Image22 
pill1122 
=22 
new22 
Image22  
(22  !
)22! "
;22" #
DispatcherTimer44 
runLeft44 
=44  !
new44" %
DispatcherTimer44& 5
(445 6
)446 7
;447 8
DispatcherTimer55 
runUp55 
=55 
new55  #
DispatcherTimer55$ 3
(553 4
)554 5
;555 6
DispatcherTimer66 
runRight66  
=66! "
new66# &
DispatcherTimer66' 6
(666 7
)667 8
;668 9
DispatcherTimer77 
runDown77 
=77  !
new77" %
DispatcherTimer77& 5
(775 6
)776 7
;777 8
DispatcherTimer88 
	timePower88 !
=88" #
new88$ '
DispatcherTimer88( 7
(887 8
)888 9
;889 :
DispatcherTimer:: 
reconnectionTimer:: )
=::* +
new::, /
DispatcherTimer::0 ?
(::? @
)::@ A
;::A B
InstanceContext<< 
instace<< 
=<<  !
null<<" &
;<<& '$
MultiplayerManagerClient==  
client==! '
===( )
null==* .
;==. /
public?? 
MultiplayerGame?? 
(?? 
String?? %
test??& *
)??* +
{@@ 	
}BB 	
publicCC 
MultiplayerGameCC 
(CC 
intCC "
idgameCC# )
)CC) *
{DD 	
InitializeComponentEE 
(EE  
)EE  !
;EE! "
instaceFF 
=FF 
newFF 
InstanceContextFF )
(FF) *
thisFF* .
)FF. /
;FF/ 0
thisGG 
.GG 
idgameGG 
=GG 
idgameGG  
;GG  !
clientHH 
=HH 
newHH $
MultiplayerManagerClientHH 1
(HH1 2
instaceHH2 9
)HH9 :
;HH: ;
tryII 
{JJ 
clientKK 
.KK 
JoinMultiplayerGameKK *
(KK* +
SingletonAccountKK+ ;
.KK; <
getSingletonAccountKK< O
(KKO P
)KKP Q
.KKQ R
UserKKR V
,KKV W
idgameKKX ^
)KK^ _
;KK_ `
}LL 
catchMM 
(MM 
	ExceptionMM 
exMM 
)MM  
{NN 

MessageBoxOO 
.OO 
ShowOO 
(OO  

PropertiesOO  *
.OO* +
	ResourcesOO+ 4
.OO4 5#
server_connection_errorOO5 L
)OOL M
;OOM N
LoggerPP 
.PP 
logPP 
.PP 
ErrorPP  
(PP  !
exPP! #
)PP# $
;PP$ %
}RR 
UserConnectedSS 
.SS 
TextSS 
=SS  
SingletonAccountSS! 1
.SS1 2
getSingletonAccountSS2 E
(SSE F
)SSF G
.SSG H
UserSSH L
;SSL M
runLeftWW 
.WW 
TickWW 
+=WW 
newWW  
EventHandlerWW! -
(WW- .
RunLeftWW. 5
)WW5 6
;WW6 7
runLeftXX 
.XX 
IntervalXX 
=XX 
newXX "
TimeSpanXX# +
(XX+ ,
$numXX, -
,XX- .
$numXX/ 0
,XX0 1
$numXX2 3
,XX3 4
$numXX5 6
,XX6 7
speedLismanXX8 C
)XXC D
;XXD E
runUpYY 
.YY 
TickYY 
+=YY 
newYY 
EventHandlerYY *
(YY* +
RunUpYY+ 0
)YY0 1
;YY1 2
runUpZZ 
.ZZ 
IntervalZZ 
=ZZ 
newZZ  
TimeSpanZZ! )
(ZZ) *
$numZZ* +
,ZZ+ ,
$numZZ- .
,ZZ. /
$numZZ0 1
,ZZ1 2
$numZZ3 4
,ZZ4 5
speedLismanZZ5 @
)ZZ@ A
;ZZA B
runRight[[ 
.[[ 
Tick[[ 
+=[[ 
new[[  
EventHandler[[! -
([[- .
RunRight[[. 6
)[[6 7
;[[7 8
runRight\\ 
.\\ 
Interval\\ 
=\\ 
new\\  #
TimeSpan\\$ ,
(\\, -
$num\\- .
,\\. /
$num\\0 1
,\\1 2
$num\\3 4
,\\4 5
$num\\6 7
,\\7 8
speedLisman\\9 D
)\\D E
;\\E F
runDown]] 
.]] 
Tick]] 
+=]] 
new]] 
EventHandler]]  ,
(]], -
RunDown]]- 4
)]]4 5
;]]5 6
runDown^^ 
.^^ 
Interval^^ 
=^^ 
new^^ "
TimeSpan^^# +
(^^+ ,
$num^^, -
,^^- .
$num^^/ 0
,^^0 1
$num^^2 3
,^^3 4
$num^^5 6
,^^6 7
speedLisman^^8 C
)^^C D
;^^D E

MatrixGame`` 
(`` 
)`` 
;`` 
	DrawPillsaa 
(aa 
)aa 
;aa #
createMatrixPillsImagesbb #
(bb# $
)bb$ %
;bb% &
reconnectionTimeree 
.ee 
Tickee "
+=ee# %
newee& )
EventHandleree* 6
(ee6 7
Reconnectionee7 C
)eeC D
;eeD E
reconnectionTimerff 
.ff 
Intervalff &
=ff' (
newff) ,
TimeSpanff- 5
(ff5 6
$numff6 7
,ff7 8
$numff8 9
,ff9 :
$numff: ;
,ff; <
$numff< =
)ff= >
;ff> ?
reconnectionTimergg 
.gg 
Startgg #
(gg# $
)gg$ %
;gg% &
}jj 	
publicll 
voidll 
Reconnectionll  
(ll  !
objectll! '
senderll( .
,ll. /
	EventArgsll0 9
ell: ;
)ll; <
{mm 	
trynn 
{oo 
clientpp 
.pp 
Reconntectionpp $
(pp$ %
SingletonAccountpp% 5
.pp5 6
getSingletonAccountpp6 I
(ppI J
)ppJ K
.ppK L
UserppL P
)ppP Q
;ppQ R
ConnectionStatusqq  
.qq  !
Textqq! %
=qq& '
$strqq( 3
;qq3 4
}rr 
catchss 
(ss 
	Exceptionss 
exss 
)ss  
{tt 
ConnectionStatusuu  
.uu  !
Textuu! %
=uu& '
$struu( 5
;uu5 6
Loggervv 
.vv 
logvv 
.vv 
Errorvv  
(vv  !
exvv! #
)vv# $
;vv$ %
}xx 
}yy 	
public{{ 
void{{ 

MatrixGame{{ 
({{ 
){{  
{{{! "
using|| 
(|| 
StreamReader|| 
sr||  "
=||# $
new||% (
StreamReader||) 5
(||5 6
parentDirectory||6 E
+||F G
$str||H \
)||\ ]
)||] ^
{||_ `
for~~ 
(~~ 
int~~ 
i~~ 
=~~ 
$num~~ 
;~~ 
i~~  !
<=~~" $
$num~~% '
;~~' (
i~~) *
++~~* ,
)~~, -
{~~. /
for 
( 
int 
j 
=  
$num! "
;" #
j$ %
<=& (
$num) +
;+ ,
j- .
++. 0
)0 1
{2 3
int
ÄÄ 
caracter
ÄÄ $
=
ÄÄ% &
sr
ÄÄ' )
.
ÄÄ) *
Read
ÄÄ* .
(
ÄÄ. /
)
ÄÄ/ 0
;
ÄÄ0 1
if
ÇÇ 
(
ÇÇ 
caracter
ÇÇ $
!=
ÇÇ% '
-
ÇÇ( )
$num
ÇÇ) *
)
ÇÇ* +
{
ÇÇ, -
switch
ÉÉ "
(
ÉÉ# $
caracter
ÉÉ$ ,
)
ÉÉ, -
{
ÉÉ- .
case
ÑÑ  $
$num
ÑÑ% '
:
ÑÑ' (
gameMap
ÖÖ$ +
[
ÖÖ+ ,
i
ÖÖ, -
,
ÖÖ- .
j
ÖÖ/ 0
]
ÖÖ0 1
=
ÖÖ2 3
$num
ÖÖ4 5
;
ÖÖ5 6
break
ÜÜ$ )
;
ÜÜ) *
case
áá  $
$num
áá% '
:
áá' (
gameMap
àà$ +
[
àà+ ,
i
àà, -
,
àà- .
j
àà/ 0
]
àà0 1
=
àà2 3
$num
àà4 5
;
àà5 6
break
ââ$ )
;
ââ) *
case
ää  $
$num
ää% '
:
ää' (
gameMap
ãã$ +
[
ãã+ ,
i
ãã, -
,
ãã- .
j
ãã/ 0
]
ãã0 1
=
ãã2 3
$num
ãã4 5
;
ãã5 6
break
åå$ )
;
åå) *
case
çç  $
$num
çç% '
:
çç' (
gameMap
éé$ +
[
éé+ ,
i
éé, -
,
éé- .
j
éé/ 0
]
éé0 1
=
éé2 3
$num
éé4 5
;
éé5 6
break
èè$ )
;
èè) *
case
êê  $
$num
êê% '
:
êê' (
gameMap
ëë$ +
[
ëë+ ,
i
ëë, -
,
ëë- .
j
ëë/ 0
]
ëë0 1
=
ëë2 3
$num
ëë4 5
;
ëë5 6
break
íí$ )
;
íí) *
case
ìì  $
$num
ìì% '
:
ìì' (
gameMap
îî$ +
[
îî+ ,
i
îî, -
,
îî- .
j
îî/ 0
]
îî0 1
=
îî2 3
$num
îî4 5
;
îî5 6
break
ïï$ )
;
ïï) *
case
ññ  $
$num
ññ% '
:
ññ' (
gameMap
óó$ +
[
óó+ ,
i
óó, -
,
óó- .
j
óó/ 0
]
óó0 1
=
óó2 3
$num
óó4 5
;
óó5 6
break
òò$ )
;
òò) *
case
ôô  $
$num
ôô% '
:
ôô' (
gameMap
öö$ +
[
öö+ ,
i
öö, -
,
öö- .
j
öö/ 0
]
öö0 1
=
öö2 3
$num
öö4 5
;
öö5 6
break
õõ$ )
;
õõ) *
}
úú 
}
ùù 
}
üü 
}
†† 
}
¢¢ 
}
§§ 	
public
¶¶ 
void
¶¶ %
createMatrixPillsImages
¶¶ +
(
¶¶+ ,
)
¶¶, -
{
¶¶- .
matrixPillsImages
ßß 
[
ßß 
$num
ßß 
,
ßß  
$num
ßß! "
]
ßß" #
=
ßß$ %
pill0
ßß& +
;
ßß+ ,
matrixPillsImages
®® 
[
®® 
$num
®®  
,
®®  !
$num
®®" $
]
®®$ %
=
®®& '
pill1
®®( -
;
®®- .
matrixPillsImages
©© 
[
©© 
$num
©© 
,
©©  
$num
©©! #
]
©©# $
=
©©% &
pill2
©©' ,
;
©©, -
matrixPillsImages
™™ 
[
™™ 
$num
™™  
,
™™  !
$num
™™" $
]
™™$ %
=
™™& '
pill3
™™( -
;
™™- .
matrixPillsImages
´´ 
[
´´ 
$num
´´  
,
´´  !
$num
´´" $
]
´´$ %
=
´´& '
pill4
´´( -
;
´´- .
matrixPillsImages
¨¨ 
[
¨¨ 
$num
¨¨  
,
¨¨  !
$num
¨¨" $
]
¨¨$ %
=
¨¨& '
pill5
¨¨( -
;
¨¨- .
matrixPillsImages
≠≠ 
[
≠≠ 
$num
≠≠  
,
≠≠  !
$num
≠≠" #
]
≠≠# $
=
≠≠% &
pill6
≠≠' ,
;
≠≠, -
matrixPillsImages
ÆÆ 
[
ÆÆ 
$num
ÆÆ  
,
ÆÆ  !
$num
ÆÆ" #
]
ÆÆ# $
=
ÆÆ% &
pill7
ÆÆ' ,
;
ÆÆ, -
matrixPillsImages
ØØ 
[
ØØ 
$num
ØØ  
,
ØØ  !
$num
ØØ" $
]
ØØ$ %
=
ØØ& '
pill8
ØØ( -
;
ØØ- .
matrixPillsImages
∞∞ 
[
∞∞ 
$num
∞∞ 
,
∞∞  
$num
∞∞! #
]
∞∞# $
=
∞∞% &
pill9
∞∞' ,
;
∞∞, -
matrixPillsImages
±± 
[
±± 
$num
±±  
,
±±  !
$num
±±" #
]
±±# $
=
±±% &
pill10
±±' -
;
±±- .
matrixPillsImages
≤≤ 
[
≤≤ 
$num
≤≤  
,
≤≤  !
$num
≤≤" #
]
≤≤# $
=
≤≤% &
pill11
≤≤' -
;
≤≤- .
}
≥≥ 	
public
µµ 
void
µµ 
	DrawPills
µµ 
(
µµ 
)
µµ 
{
µµ  !
BitmapImage
∂∂ 
	imagePath
∂∂ !
=
∂∂" #
new
∂∂$ '
BitmapImage
∂∂( 3
(
∂∂3 4
)
∂∂4 5
;
∂∂5 6
	imagePath
∑∑ 
.
∑∑ 
	BeginInit
∑∑ 
(
∑∑  
)
∑∑  !
;
∑∑! "
	imagePath
∏∏ 
.
∏∏ 
	UriSource
∏∏ 
=
∏∏  !
new
∏∏" %
Uri
∏∏& )
(
∏∏) *
parentDirectory
∏∏* 9
+
∏∏: ;
$str
∏∏< U
)
∏∏U V
;
∏∏V W
	imagePath
ππ 
.
ππ 
EndInit
ππ 
(
ππ 
)
ππ 
;
ππ  
pill0
ªª 
.
ªª 
Source
ªª 
=
ªª 
	imagePath
ªª $
;
ªª$ %
pill1
ºº 
.
ºº 
Source
ºº 
=
ºº 
	imagePath
ºº $
;
ºº$ %
pill2
ΩΩ 
.
ΩΩ 
Source
ΩΩ 
=
ΩΩ 
	imagePath
ΩΩ $
;
ΩΩ$ %
pill3
ææ 
.
ææ 
Source
ææ 
=
ææ 
	imagePath
ææ $
;
ææ$ %
pill4
øø 
.
øø 
Source
øø 
=
øø 
	imagePath
øø $
;
øø$ %
pill5
¿¿ 
.
¿¿ 
Source
¿¿ 
=
¿¿ 
	imagePath
¿¿ $
;
¿¿$ %
pill6
¡¡ 
.
¡¡ 
Source
¡¡ 
=
¡¡ 
	imagePath
¡¡ $
;
¡¡$ %
pill7
¬¬ 
.
¬¬ 
Source
¬¬ 
=
¬¬ 
	imagePath
¬¬ $
;
¬¬$ %
pill8
√√ 
.
√√ 
Source
√√ 
=
√√ 
	imagePath
√√ $
;
√√$ %
pill9
ƒƒ 
.
ƒƒ 
Source
ƒƒ 
=
ƒƒ 
	imagePath
ƒƒ $
;
ƒƒ$ %
pill10
≈≈ 
.
≈≈ 
Source
≈≈ 
=
≈≈ 
	imagePath
≈≈ %
;
≈≈% &
pill11
∆∆ 
.
∆∆ 
Source
∆∆ 
=
∆∆ 
	imagePath
∆∆ %
;
∆∆% &
	panel_5_2
»» 
.
»» 
Children
»» 
.
»» 
Add
»» "
(
»»" #
pill0
»»# (
)
»»( )
;
»») *
panel_11_18
…… 
.
…… 
Children
……  
.
……  !
Add
……! $
(
……$ %
pill1
……% *
)
……* +
;
……+ ,

panel_11_5
   
.
   
Children
   
.
    
Add
    #
(
  # $
pill2
  $ )
)
  ) *
;
  * +
panel_17_12
ÀÀ 
.
ÀÀ 
Children
ÀÀ  
.
ÀÀ  !
Add
ÀÀ! $
(
ÀÀ$ %
pill3
ÀÀ% *
)
ÀÀ* +
;
ÀÀ+ ,
panel_13_12
ÃÃ 
.
ÃÃ 
Children
ÃÃ  
.
ÃÃ  !
Add
ÃÃ! $
(
ÃÃ$ %
pill4
ÃÃ% *
)
ÃÃ* +
;
ÃÃ+ ,
panel_21_12
ÕÕ 
.
ÕÕ 
Children
ÕÕ  
.
ÕÕ  !
Add
ÕÕ! $
(
ÕÕ$ %
pill5
ÕÕ% *
)
ÕÕ* +
;
ÕÕ+ ,

panel_7_18
ŒŒ 
.
ŒŒ 
Children
ŒŒ  
.
ŒŒ  !
Add
ŒŒ! $
(
ŒŒ$ %
pill6
ŒŒ% *
)
ŒŒ* +
;
ŒŒ+ ,

panel_9_11
œœ 
.
œœ 
Children
œœ 
.
œœ  
Add
œœ  #
(
œœ# $
pill7
œœ$ )
)
œœ) *
;
œœ* +
panel_15_22
–– 
.
–– 
Children
––  
.
––  !
Add
––! $
(
––$ %
pill8
––% *
)
––* +
;
––+ ,

panel_16_1
—— 
.
—— 
Children
—— 
.
——  
Add
——  #
(
——# $
pill9
——$ )
)
——) *
;
——* +

panel_4_10
““ 
.
““ 
Children
““ 
.
““  
Add
““  #
(
““# $
pill10
““$ *
)
““* +
;
““+ ,

panel_2_13
”” 
.
”” 
Children
”” 
.
””  
Add
””  #
(
””# $
pill11
””$ *
)
””* +
;
””+ ,
}
‘‘ 	
public
◊◊ 
bool
◊◊ 
canMove
◊◊ 
(
◊◊ 
int
◊◊ 
onX
◊◊  #
,
◊◊# $
int
◊◊% (
onY
◊◊) ,
)
◊◊, -
{
◊◊. /
bool
ÿÿ 
can
ÿÿ 
=
ÿÿ 
true
ÿÿ 
;
ÿÿ 
if
ŸŸ 
(
ŸŸ 
gameMap
ŸŸ 
[
ŸŸ 
onX
ŸŸ 
,
ŸŸ 
onY
ŸŸ  
]
ŸŸ  !
==
ŸŸ" $
$num
ŸŸ% &
)
ŸŸ& '
{
ŸŸ( )
can
⁄⁄ 
=
⁄⁄ 
false
⁄⁄ 
;
⁄⁄ 
}
€€ 
return
‹‹ 
can
‹‹ 
;
‹‹ 
}
›› 	
public
ﬂﬂ 
void
ﬂﬂ 

StopLisman
ﬂﬂ 
(
ﬂﬂ 
)
ﬂﬂ  
{
ﬂﬂ! "
runLeft
‡‡ 
.
‡‡ 
Stop
‡‡ 
(
‡‡ 
)
‡‡ 
;
‡‡ 
runUp
·· 
.
·· 
Stop
·· 
(
·· 
)
·· 
;
·· 
runRight
‚‚ 
.
‚‚ 
Stop
‚‚ 
(
‚‚ 
)
‚‚ 
;
‚‚ 
runDown
„„ 
.
„„ 
Stop
„„ 
(
„„ 
)
„„ 
;
„„ 
}
‰‰ 	
private
ÊÊ 
void
ÊÊ #
Button_ExitGame_Click
ÊÊ *
(
ÊÊ* +
object
ÊÊ+ 1
sender
ÊÊ2 8
,
ÊÊ8 9
RoutedEventArgs
ÊÊ: I
e
ÊÊJ K
)
ÊÊK L
{
ÊÊM N
client
ÁÁ 
.
ÁÁ 
ExitGame
ÁÁ 
(
ÁÁ 
idgame
ÁÁ "
,
ÁÁ" #
playerColor
ÁÁ# .
,
ÁÁ. /
X
ÁÁ/ 0
,
ÁÁ0 1
Y
ÁÁ1 2
)
ÁÁ2 3
;
ÁÁ3 4
}
ËË 	
private
ÍÍ 
void
ÍÍ 
RunLeft
ÍÍ 
(
ÍÍ 
object
ÍÍ #
sender
ÍÍ$ *
,
ÍÍ* +
	EventArgs
ÍÍ, 5
e
ÍÍ6 7
)
ÍÍ7 8
{
ÍÍ9 :
int
ÎÎ 
initialPositionX
ÎÎ  
=
ÎÎ! "
X
ÎÎ# $
;
ÎÎ$ %
int
ÏÏ 
initialpositionY
ÏÏ  
=
ÏÏ! "
Y
ÏÏ# $
;
ÏÏ$ %
if
ÌÌ 
(
ÌÌ 
X
ÌÌ 
==
ÌÌ 
$num
ÌÌ 
&&
ÌÌ 
Y
ÌÌ 
==
ÌÌ 
$num
ÌÌ !
)
ÌÌ! "
{
ÌÌ# $
X
ÓÓ 
=
ÓÓ 
$num
ÓÓ 
;
ÓÓ 
Y
ÔÔ 
=
ÔÔ 
$num
ÔÔ 
;
ÔÔ 
MoveLismanInMap
 
(
  
initialPositionX
  0
,
0 1
initialpositionY
2 B
,
B C
X
D E
,
E F
Y
G H
,
H I
$str
I O
)
O P
;
P Q
return
ÒÒ 
;
ÒÒ 
}
ÚÚ 
if
ÛÛ 
(
ÛÛ 
canMove
ÛÛ 
(
ÛÛ 
X
ÛÛ 
-
ÛÛ 
$num
ÛÛ 
,
ÛÛ 
Y
ÛÛ  
)
ÛÛ  !
)
ÛÛ! "
{
ÛÛ# $
X
ıı 
-=
ıı 
$num
ıı 
;
ıı 
MoveLismanInMap
ˆˆ 
(
ˆˆ  
initialPositionX
ˆˆ  0
,
ˆˆ0 1
initialpositionY
ˆˆ2 B
,
ˆˆB C
X
ˆˆD E
,
ˆˆE F
Y
ˆˆG H
,
ˆˆH I
$str
ˆˆI O
)
ˆˆO P
;
ˆˆP Q
}
¯¯ 
else
¯¯ 
{
¯¯ 

StopLisman
˘˘ 
(
˘˘ 
)
˘˘ 
;
˘˘ 
}
˙˙ 
}
˚˚ 	
private
˝˝ 
void
˝˝ 
RunUp
˝˝ 
(
˝˝ 
object
˝˝ !
sender
˝˝" (
,
˝˝( )
	EventArgs
˝˝* 3
e
˝˝4 5
)
˝˝5 6
{
˝˝7 8
int
˛˛ 
initialPositionX
˛˛  
=
˛˛! "
X
˛˛# $
;
˛˛$ %
int
ˇˇ 
initialpositionY
ˇˇ  
=
ˇˇ! "
Y
ˇˇ# $
;
ˇˇ$ %
if
ÅÅ 
(
ÅÅ 
canMove
ÅÅ 
(
ÅÅ 
X
ÅÅ 
,
ÅÅ 
Y
ÅÅ 
-
ÅÅ 
$num
ÅÅ  
)
ÅÅ  !
)
ÅÅ! "
{
ÅÅ# $
Y
ÇÇ 
-=
ÇÇ 
$num
ÇÇ 
;
ÇÇ 
MoveLismanInMap
ÉÉ 
(
ÉÉ  
initialPositionX
ÉÉ  0
,
ÉÉ0 1
initialpositionY
ÉÉ2 B
,
ÉÉB C
X
ÉÉD E
,
ÉÉE F
Y
ÉÉG H
,
ÉÉH I
$str
ÉÉI M
)
ÉÉM N
;
ÉÉN O
}
ÑÑ 
else
ÑÑ 
{
ÑÑ 

StopLisman
ÖÖ 
(
ÖÖ 
)
ÖÖ 
;
ÖÖ 
}
ÜÜ 
}
áá 	
private
àà 
void
àà 
RunRight
àà 
(
àà 
object
àà $
sender
àà% +
,
àà+ ,
	EventArgs
àà- 6
e
àà7 8
)
àà8 9
{
àà: ;
int
ââ 
initialPositionX
ââ  
=
ââ! "
X
ââ# $
;
ââ$ %
int
ää 
initialpositionY
ää  
=
ää! "
Y
ää# $
;
ää$ %
if
ãã 
(
ãã 
X
ãã 
==
ãã 
$num
ãã 
&&
ãã 
Y
ãã 
==
ãã 
$num
ãã  "
)
ãã" #
{
ãã$ %
X
åå 
=
åå 
$num
åå 
;
åå 
Y
çç 
=
çç 
$num
çç 
;
çç 
MoveLismanInMap
éé 
(
éé  
initialPositionX
éé  0
,
éé0 1
initialpositionY
éé2 B
,
ééB C
X
ééD E
,
ééE F
Y
ééG H
,
ééH I
$str
ééI P
)
ééP Q
;
ééQ R
return
èè 
;
èè 
}
êê 
if
ëë 
(
ëë 
canMove
ëë 
(
ëë 
X
ëë 
+
ëë 
$num
ëë 
,
ëë 
Y
ëë  
)
ëë  !
)
ëë! "
{
ëë# $
X
íí 
+=
íí 
$num
íí 
;
íí 
MoveLismanInMap
ìì 
(
ìì  
initialPositionX
ìì  0
,
ìì0 1
initialpositionY
ìì2 B
,
ììB C
X
ììD E
,
ììE F
Y
ììG H
,
ììH I
$str
ììI P
)
ììP Q
;
ììQ R
}
îî 
else
îî 
{
îî 

StopLisman
ïï 
(
ïï 
)
ïï 
;
ïï 
}
ññ 
}
óó 	
private
òò 
void
òò 
RunDown
òò 
(
òò 
object
òò #
sender
òò$ *
,
òò* +
	EventArgs
òò, 5
e
òò6 7
)
òò7 8
{
òò9 :
int
ôô 
initialPositionX
ôô  
=
ôô! "
X
ôô# $
;
ôô$ %
int
öö 
initialpositionY
öö  
=
öö! "
Y
öö# $
;
öö$ %
if
õõ 
(
õõ 
canMove
õõ 
(
õõ 
X
õõ 
,
õõ 
Y
õõ 
+
õõ 
$num
õõ  
)
õõ  !
)
õõ! "
{
õõ# $
Y
úú 
+=
úú 
$num
úú 
;
úú 
MoveLismanInMap
ùù 
(
ùù  
initialPositionX
ùù  0
,
ùù0 1
initialpositionY
ùù1 A
,
ùùA B
X
ùùB C
,
ùùC D
Y
ùùD E
,
ùùE F
$str
ùùF L
)
ùùL M
;
ùùM N
}
ûû 
else
ûû 
{
ûû 

StopLisman
üü 
(
üü 
)
üü 
;
üü 
}
†† 
}
°° 	
static
££ 
LismanMovement
££ 
movement
££ &
=
££' (
new
££) ,
LismanMovement
££- ;
(
££; <
)
££< =
;
££= >
public
§§ 
void
§§ 
MoveLismanInMap
§§ #
(
§§# $
int
§§$ '
initialPositionX
§§( 8
,
§§8 9
int
§§: =
initialPositionY
§§> N
,
§§N O
int
§§P S
finalPositionX
§§T b
,
§§b c
int
§§d g
finalPositionY
§§h v
,
§§v w
String
§§x ~
goTo§§ É
)§§É Ñ
{
•• 	
movement
¶¶ 
.
¶¶ 
idGame
¶¶ 
=
¶¶ 
this
¶¶ "
.
¶¶" #
idgame
¶¶# )
;
¶¶) *
movement
ßß 
.
ßß 
colorLisman
ßß  
=
ßß! "
playerColor
ßß# .
;
ßß. /
movement
®® 
.
®® 
initialPositionX
®® %
=
®®& '
initialPositionX
®®( 8
;
®®8 9
movement
©© 
.
©© 
initialPositionY
©© %
=
©©& '
initialPositionY
©©( 8
;
©©8 9
movement
™™ 
.
™™ 
finalPositionX
™™ #
=
™™$ %
finalPositionX
™™& 4
;
™™4 5
movement
´´ 
.
´´ 
finalPositionY
´´ #
=
´´$ %
finalPositionY
´´& 4
;
´´4 5
movement
¨¨ 
.
¨¨ 
goTo
¨¨ 
=
¨¨ 
goTo
¨¨  
;
¨¨  !
client
≠≠ 
.
≠≠ 

MoveLisman
≠≠ 
(
≠≠ 
movement
≠≠ &
)
≠≠& '
;
≠≠' (
}
ÆÆ 	
private
∞∞ 
void
∞∞ 
Matriz_KeyDown
∞∞ #
(
∞∞# $
object
∞∞$ *
sender
∞∞+ 1
,
∞∞1 2
KeyEventArgs
∞∞3 ?
e
∞∞@ A
)
∞∞A B
{
∞∞C D
if
±± 
(
±± 
e
±± 
.
±± 
Key
±± 
==
±± 
Key
±± 
.
±± 
Left
±± !
)
±±! "
{
±±# $
runUp
≤≤ 
.
≤≤ 
Stop
≤≤ 
(
≤≤ 
)
≤≤ 
;
≤≤ 
runRight
≥≥ 
.
≥≥ 
Stop
≥≥ 
(
≥≥ 
)
≥≥ 
;
≥≥  
runDown
¥¥ 
.
¥¥ 
Stop
¥¥ 
(
¥¥ 
)
¥¥ 
;
¥¥ 
runLeft
µµ 
.
µµ 
Start
µµ 
(
µµ 
)
µµ 
;
µµ  
}
∂∂ 
if
∑∑ 
(
∑∑ 
e
∑∑ 
.
∑∑ 
Key
∑∑ 
==
∑∑ 
Key
∑∑ 
.
∑∑ 
Up
∑∑ 
)
∑∑  
{
∑∑! "
runLeft
∏∏ 
.
∏∏ 
Stop
∏∏ 
(
∏∏ 
)
∏∏ 
;
∏∏ 
runRight
ππ 
.
ππ 
Stop
ππ 
(
ππ 
)
ππ 
;
ππ  
runDown
∫∫ 
.
∫∫ 
Stop
∫∫ 
(
∫∫ 
)
∫∫ 
;
∫∫ 
runUp
ªª 
.
ªª 
Start
ªª 
(
ªª 
)
ªª 
;
ªª 
}
ºº 
if
ΩΩ 
(
ΩΩ 
e
ΩΩ 
.
ΩΩ 
Key
ΩΩ 
==
ΩΩ 
Key
ΩΩ 
.
ΩΩ 
Right
ΩΩ "
)
ΩΩ" #
{
ΩΩ$ %
runLeft
ææ 
.
ææ 
Stop
ææ 
(
ææ 
)
ææ 
;
ææ 
runUp
øø 
.
øø 
Stop
øø 
(
øø 
)
øø 
;
øø 
runDown
¿¿ 
.
¿¿ 
Stop
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
runRight
¡¡ 
.
¡¡ 
Start
¡¡ 
(
¡¡ 
)
¡¡  
;
¡¡  !
}
¬¬ 
if
√√ 
(
√√ 
e
√√ 
.
√√ 
Key
√√ 
==
√√ 
Key
√√ 
.
√√ 
Down
√√ !
)
√√! "
{
√√# $
runLeft
ƒƒ 
.
ƒƒ 
Stop
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
runUp
≈≈ 
.
≈≈ 
Stop
≈≈ 
(
≈≈ 
)
≈≈ 
;
≈≈ 
runRight
∆∆ 
.
∆∆ 
Stop
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆  
runDown
«« 
.
«« 
Start
«« 
(
«« 
)
«« 
;
««  
}
»» 
}
…… 	
public
ÀÀ 
void
ÀÀ 
NotifyColorPlayer
ÀÀ %
(
ÀÀ% &
int
ÀÀ& )
colorPlayer
ÀÀ* 5
,
ÀÀ5 6
String
ÀÀ7 =
user
ÀÀ> B
)
ÀÀB C
{
ÃÃ 	
if
ÕÕ 
(
ÕÕ 
SingletonAccount
ÕÕ 
.
ÕÕ  !
getSingletonAccount
ÕÕ  3
(
ÕÕ3 4
)
ÕÕ4 5
.
ÕÕ5 6
User
ÕÕ6 :
==
ÕÕ; =
user
ÕÕ> B
)
ÕÕB C
{
ŒŒ 
playerColor
œœ 
=
œœ 
colorPlayer
œœ )
;
œœ) *
}
–– 
switch
““ 
(
““ 
colorPlayer
““ 
)
““  
{
”” 
case
‘‘ 
LISMANYELLOW
‘‘ !
:
‘‘! "
lismanPlayerImage
’’ %
=
’’& '
LismanYellowImage
’’( 9
;
’’9 :
X
÷÷ 
=
÷÷ 
$num
÷÷ 
;
÷÷ 
Y
◊◊ 
=
◊◊ 
$num
◊◊ 
;
◊◊ 
UserLismanYellow
ÿÿ $
.
ÿÿ$ %
Text
ÿÿ% )
=
ÿÿ* +
user
ÿÿ, 0
;
ÿÿ0 1
break
ŸŸ 
;
ŸŸ 
case
⁄⁄ 
	LISMANRED
⁄⁄ 
:
⁄⁄ 
lismanPlayerImage
€€ %
=
€€& '
LismanRedImage
€€( 6
;
€€6 7
X
‹‹ 
=
‹‹ 
$num
‹‹ 
;
‹‹ 
Y
›› 
=
›› 
$num
›› 
;
›› 
UserLismanRed
ﬁﬁ !
.
ﬁﬁ! "
Text
ﬁﬁ" &
=
ﬁﬁ' (
user
ﬁﬁ) -
;
ﬁﬁ- .
break
ﬂﬂ 
;
ﬂﬂ 
case
‡‡ 

LISMANBLUE
‡‡ 
:
‡‡  
lismanPlayerImage
·· %
=
··& '
LismanBlueImage
··( 7
;
··7 8
X
‚‚ 
=
‚‚ 
$num
‚‚ 
;
‚‚ 
Y
„„ 
=
„„ 
$num
„„ 
;
„„ 
UserLismanBlue
‰‰ "
.
‰‰" #
Text
‰‰# '
=
‰‰( )
user
‰‰* .
;
‰‰. /
break
ÂÂ 
;
ÂÂ 
case
ÊÊ 
LISMANGREEN
ÊÊ  
:
ÊÊ  !
lismanPlayerImage
ÁÁ %
=
ÁÁ& '
LismanGreenImage
ÁÁ( 8
;
ÁÁ8 9
X
ËË 
=
ËË 
$num
ËË 
;
ËË 
Y
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
;
ÈÈ 
UserLismanGreen
ÍÍ #
.
ÍÍ# $
Text
ÍÍ$ (
=
ÍÍ) *
user
ÍÍ+ /
;
ÍÍ/ 0
break
ÎÎ 
;
ÎÎ 
}
ÏÏ 
}
ÌÌ 	
public
ÔÔ 
void
ÔÔ "
MoveLismanImageRight
ÔÔ (
(
ÔÔ( )
int
ÔÔ) ,
playerColor
ÔÔ- 8
)
ÔÔ8 9
{
 	
BitmapImage
ÒÒ 
	imagePath
ÒÒ !
=
ÒÒ" #
new
ÒÒ$ '
BitmapImage
ÒÒ( 3
(
ÒÒ3 4
)
ÒÒ4 5
;
ÒÒ5 6
switch
ÚÚ 
(
ÚÚ 
playerColor
ÚÚ 
)
ÚÚ  
{
ÛÛ 
case
ÙÙ 
LISMANYELLOW
ÙÙ !
:
ÙÙ! "
	imagePath
ıı 
.
ıı 
	BeginInit
ıı '
(
ıı' (
)
ıı( )
;
ıı) *
	imagePath
ˆˆ 
.
ˆˆ 
	UriSource
ˆˆ '
=
ˆˆ( )
new
ˆˆ* -
Uri
ˆˆ. 1
(
ˆˆ1 2
parentDirectory
ˆˆ2 A
+
ˆˆB C
$str
ˆˆD e
)
ˆˆe f
;
ˆˆf g
	imagePath
˜˜ 
.
˜˜ 
EndInit
˜˜ %
(
˜˜% &
)
˜˜& '
;
˜˜' (
ImageBehavior
¯¯ !
.
¯¯! "
SetAnimatedSource
¯¯" 3
(
¯¯3 4
LismanYellowImage
¯¯4 E
,
¯¯E F
	imagePath
¯¯G P
)
¯¯P Q
;
¯¯Q R
break
˘˘ 
;
˘˘ 
case
˙˙ 
	LISMANRED
˙˙ 
:
˙˙ 
	imagePath
˚˚ 
.
˚˚ 
	BeginInit
˚˚ '
(
˚˚' (
)
˚˚( )
;
˚˚) *
	imagePath
¸¸ 
.
¸¸ 
	UriSource
¸¸ '
=
¸¸( )
new
¸¸* -
Uri
¸¸. 1
(
¸¸1 2
parentDirectory
¸¸2 A
+
¸¸B C
$str
¸¸D b
)
¸¸b c
;
¸¸c d
	imagePath
˝˝ 
.
˝˝ 
EndInit
˝˝ %
(
˝˝% &
)
˝˝& '
;
˝˝' (
ImageBehavior
˛˛ !
.
˛˛! "
SetAnimatedSource
˛˛" 3
(
˛˛3 4
LismanRedImage
˛˛4 B
,
˛˛B C
	imagePath
˛˛D M
)
˛˛M N
;
˛˛N O
break
ÄÄ 
;
ÄÄ 
case
ÅÅ 

LISMANBLUE
ÅÅ 
:
ÅÅ  
	imagePath
ÇÇ 
.
ÇÇ 
	BeginInit
ÇÇ '
(
ÇÇ' (
)
ÇÇ( )
;
ÇÇ) *
	imagePath
ÉÉ 
.
ÉÉ 
	UriSource
ÉÉ '
=
ÉÉ( )
new
ÉÉ* -
Uri
ÉÉ. 1
(
ÉÉ1 2
parentDirectory
ÉÉ2 A
+
ÉÉB C
$str
ÉÉD c
)
ÉÉc d
;
ÉÉd e
	imagePath
ÑÑ 
.
ÑÑ 
EndInit
ÑÑ %
(
ÑÑ% &
)
ÑÑ& '
;
ÑÑ' (
ImageBehavior
ÖÖ !
.
ÖÖ! "
SetAnimatedSource
ÖÖ" 3
(
ÖÖ3 4
LismanBlueImage
ÖÖ4 C
,
ÖÖC D
	imagePath
ÖÖE N
)
ÖÖN O
;
ÖÖO P
break
ÜÜ 
;
ÜÜ 
case
áá 
LISMANGREEN
áá  
:
áá  !
	imagePath
àà 
.
àà 
	BeginInit
àà '
(
àà' (
)
àà( )
;
àà) *
	imagePath
ââ 
.
ââ 
	UriSource
ââ '
=
ââ( )
new
ââ* -
Uri
ââ. 1
(
ââ1 2
parentDirectory
ââ2 A
+
ââB C
$str
ââD d
)
ââd e
;
ââe f
	imagePath
ää 
.
ää 
EndInit
ää %
(
ää% &
)
ää& '
;
ää' (
ImageBehavior
ãã !
.
ãã! "
SetAnimatedSource
ãã" 3
(
ãã3 4
LismanGreenImage
ãã4 D
,
ããD E
	imagePath
ããF O
)
ããO P
;
ããP Q
break
åå 
;
åå 
}
çç 
}
èè 	
public
ëë 
void
ëë !
MoveLismanImageLeft
ëë '
(
ëë' (
int
ëë( +
playerColor
ëë, 7
)
ëë7 8
{
íí 	
BitmapImage
ìì 
	imagePath
ìì !
=
ìì" #
new
ìì$ '
BitmapImage
ìì( 3
(
ìì3 4
)
ìì4 5
;
ìì5 6
switch
îî 
(
îî 
playerColor
îî 
)
îî  
{
ïï 
case
ññ 
LISMANYELLOW
ññ !
:
ññ! "
	imagePath
óó 
.
óó 
	BeginInit
óó '
(
óó' (
)
óó( )
;
óó) *
	imagePath
òò 
.
òò 
	UriSource
òò '
=
òò( )
new
òò* -
Uri
òò. 1
(
òò1 2
parentDirectory
òò2 A
+
òòB C
$str
òòD i
)
òòi j
;
òòj k
	imagePath
ôô 
.
ôô 
EndInit
ôô %
(
ôô% &
)
ôô& '
;
ôô' (
ImageBehavior
öö !
.
öö! "
SetAnimatedSource
öö" 3
(
öö3 4
LismanYellowImage
öö4 E
,
ööE F
	imagePath
ööG P
)
ööP Q
;
ööQ R
break
õõ 
;
õõ 
case
úú 
	LISMANRED
úú 
:
úú 
	imagePath
ùù 
.
ùù 
	BeginInit
ùù '
(
ùù' (
)
ùù( )
;
ùù) *
	imagePath
ûû 
.
ûû 
	UriSource
ûû '
=
ûû( )
new
ûû* -
Uri
ûû. 1
(
ûû1 2
parentDirectory
ûû2 A
+
ûûB C
$str
ûûD f
)
ûûf g
;
ûûg h
	imagePath
üü 
.
üü 
EndInit
üü %
(
üü% &
)
üü& '
;
üü' (
ImageBehavior
†† !
.
††! "
SetAnimatedSource
††" 3
(
††3 4
LismanRedImage
††4 B
,
††B C
	imagePath
††D M
)
††M N
;
††N O
break
¢¢ 
;
¢¢ 
case
££ 

LISMANBLUE
££ 
:
££  
	imagePath
§§ 
.
§§ 
	BeginInit
§§ '
(
§§' (
)
§§( )
;
§§) *
	imagePath
•• 
.
•• 
	UriSource
•• '
=
••( )
new
••* -
Uri
••. 1
(
••1 2
parentDirectory
••2 A
+
••B C
$str
••D g
)
••g h
;
••h i
	imagePath
¶¶ 
.
¶¶ 
EndInit
¶¶ %
(
¶¶% &
)
¶¶& '
;
¶¶' (
ImageBehavior
ßß !
.
ßß! "
SetAnimatedSource
ßß" 3
(
ßß3 4
LismanBlueImage
ßß4 C
,
ßßC D
	imagePath
ßßE N
)
ßßN O
;
ßßO P
break
®® 
;
®® 
case
©© 
LISMANGREEN
©©  
:
©©  !
	imagePath
™™ 
.
™™ 
	BeginInit
™™ '
(
™™' (
)
™™( )
;
™™) *
	imagePath
´´ 
.
´´ 
	UriSource
´´ '
=
´´( )
new
´´* -
Uri
´´. 1
(
´´1 2
parentDirectory
´´2 A
+
´´B C
$str
´´D h
)
´´h i
;
´´i j
	imagePath
¨¨ 
.
¨¨ 
EndInit
¨¨ %
(
¨¨% &
)
¨¨& '
;
¨¨' (
ImageBehavior
≠≠ !
.
≠≠! "
SetAnimatedSource
≠≠" 3
(
≠≠3 4
LismanGreenImage
≠≠4 D
,
≠≠D E
	imagePath
≠≠F O
)
≠≠O P
;
≠≠P Q
break
ÆÆ 
;
ÆÆ 
}
ØØ 
}
±± 	
public
≤≤ 
void
≤≤ 
MoveLismanImageUp
≤≤ %
(
≤≤% &
int
≤≤& )
playerColor
≤≤* 5
)
≤≤5 6
{
≥≥ 	
BitmapImage
¥¥ 
	imagePath
¥¥ !
=
¥¥" #
new
¥¥$ '
BitmapImage
¥¥( 3
(
¥¥3 4
)
¥¥4 5
;
¥¥5 6
switch
µµ 
(
µµ 
playerColor
µµ 
)
µµ  
{
∂∂ 
case
∑∑ 
LISMANYELLOW
∑∑ !
:
∑∑! "
	imagePath
∏∏ 
.
∏∏ 
	BeginInit
∏∏ '
(
∏∏' (
)
∏∏( )
;
∏∏) *
	imagePath
ππ 
.
ππ 
	UriSource
ππ '
=
ππ( )
new
ππ* -
Uri
ππ. 1
(
ππ1 2
parentDirectory
ππ2 A
+
ππB C
$str
ππD g
)
ππg h
;
ππh i
	imagePath
∫∫ 
.
∫∫ 
EndInit
∫∫ %
(
∫∫% &
)
∫∫& '
;
∫∫' (
ImageBehavior
ªª !
.
ªª! "
SetAnimatedSource
ªª" 3
(
ªª3 4
LismanYellowImage
ªª4 E
,
ªªE F
	imagePath
ªªG P
)
ªªP Q
;
ªªQ R
break
ºº 
;
ºº 
case
ΩΩ 
	LISMANRED
ΩΩ 
:
ΩΩ 
	imagePath
ææ 
.
ææ 
	BeginInit
ææ '
(
ææ' (
)
ææ( )
;
ææ) *
	imagePath
øø 
.
øø 
	UriSource
øø '
=
øø( )
new
øø* -
Uri
øø. 1
(
øø1 2
parentDirectory
øø2 A
+
øøB C
$str
øøD d
)
øød e
;
øøe f
	imagePath
¿¿ 
.
¿¿ 
EndInit
¿¿ %
(
¿¿% &
)
¿¿& '
;
¿¿' (
ImageBehavior
¡¡ !
.
¡¡! "
SetAnimatedSource
¡¡" 3
(
¡¡3 4
LismanRedImage
¡¡4 B
,
¡¡B C
	imagePath
¡¡D M
)
¡¡M N
;
¡¡N O
break
√√ 
;
√√ 
case
ƒƒ 

LISMANBLUE
ƒƒ 
:
ƒƒ  
	imagePath
≈≈ 
.
≈≈ 
	BeginInit
≈≈ '
(
≈≈' (
)
≈≈( )
;
≈≈) *
	imagePath
∆∆ 
.
∆∆ 
	UriSource
∆∆ '
=
∆∆( )
new
∆∆* -
Uri
∆∆. 1
(
∆∆1 2
parentDirectory
∆∆2 A
+
∆∆B C
$str
∆∆D e
)
∆∆e f
;
∆∆f g
	imagePath
«« 
.
«« 
EndInit
«« %
(
««% &
)
««& '
;
««' (
ImageBehavior
»» !
.
»»! "
SetAnimatedSource
»»" 3
(
»»3 4
LismanBlueImage
»»4 C
,
»»C D
	imagePath
»»E N
)
»»N O
;
»»O P
break
…… 
;
…… 
case
   
LISMANGREEN
    
:
    !
	imagePath
ÀÀ 
.
ÀÀ 
	BeginInit
ÀÀ '
(
ÀÀ' (
)
ÀÀ( )
;
ÀÀ) *
	imagePath
ÃÃ 
.
ÃÃ 
	UriSource
ÃÃ '
=
ÃÃ( )
new
ÃÃ* -
Uri
ÃÃ. 1
(
ÃÃ1 2
parentDirectory
ÃÃ2 A
+
ÃÃB C
$str
ÃÃD f
)
ÃÃf g
;
ÃÃg h
	imagePath
ÕÕ 
.
ÕÕ 
EndInit
ÕÕ %
(
ÕÕ% &
)
ÕÕ& '
;
ÕÕ' (
ImageBehavior
ŒŒ !
.
ŒŒ! "
SetAnimatedSource
ŒŒ" 3
(
ŒŒ3 4
LismanGreenImage
ŒŒ4 D
,
ŒŒD E
	imagePath
ŒŒF O
)
ŒŒO P
;
ŒŒP Q
break
œœ 
;
œœ 
}
–– 
}
““ 	
public
”” 
void
”” !
MoveLismanImageDown
”” '
(
””' (
int
””( +
playerColor
””, 7
)
””7 8
{
‘‘ 	
BitmapImage
’’ 
	imagePath
’’ !
=
’’" #
new
’’$ '
BitmapImage
’’( 3
(
’’3 4
)
’’4 5
;
’’5 6
switch
÷÷ 
(
÷÷ 
playerColor
÷÷ 
)
÷÷  
{
◊◊ 
case
ÿÿ 
LISMANYELLOW
ÿÿ !
:
ÿÿ! "
	imagePath
ŸŸ 
.
ŸŸ 
	BeginInit
ŸŸ '
(
ŸŸ' (
)
ŸŸ( )
;
ŸŸ) *
	imagePath
⁄⁄ 
.
⁄⁄ 
	UriSource
⁄⁄ '
=
⁄⁄( )
new
⁄⁄* -
Uri
⁄⁄. 1
(
⁄⁄1 2
parentDirectory
⁄⁄2 A
+
⁄⁄B C
$str
⁄⁄D i
)
⁄⁄i j
;
⁄⁄j k
	imagePath
€€ 
.
€€ 
EndInit
€€ %
(
€€% &
)
€€& '
;
€€' (
ImageBehavior
‹‹ !
.
‹‹! "
SetAnimatedSource
‹‹" 3
(
‹‹3 4
LismanYellowImage
‹‹4 E
,
‹‹E F
	imagePath
‹‹G P
)
‹‹P Q
;
‹‹Q R
break
›› 
;
›› 
case
ﬁﬁ 
	LISMANRED
ﬁﬁ 
:
ﬁﬁ 
	imagePath
ﬂﬂ 
.
ﬂﬂ 
	BeginInit
ﬂﬂ '
(
ﬂﬂ' (
)
ﬂﬂ( )
;
ﬂﬂ) *
	imagePath
‡‡ 
.
‡‡ 
	UriSource
‡‡ '
=
‡‡( )
new
‡‡* -
Uri
‡‡. 1
(
‡‡1 2
parentDirectory
‡‡2 A
+
‡‡B C
$str
‡‡D f
)
‡‡f g
;
‡‡g h
	imagePath
·· 
.
·· 
EndInit
·· %
(
··% &
)
··& '
;
··' (
ImageBehavior
‚‚ !
.
‚‚! "
SetAnimatedSource
‚‚" 3
(
‚‚3 4
LismanRedImage
‚‚4 B
,
‚‚B C
	imagePath
‚‚D M
)
‚‚M N
;
‚‚N O
break
‰‰ 
;
‰‰ 
case
ÂÂ 

LISMANBLUE
ÂÂ 
:
ÂÂ  
	imagePath
ÊÊ 
.
ÊÊ 
	BeginInit
ÊÊ '
(
ÊÊ' (
)
ÊÊ( )
;
ÊÊ) *
	imagePath
ÁÁ 
.
ÁÁ 
	UriSource
ÁÁ '
=
ÁÁ( )
new
ÁÁ* -
Uri
ÁÁ. 1
(
ÁÁ1 2
parentDirectory
ÁÁ2 A
+
ÁÁB C
$str
ÁÁD g
)
ÁÁg h
;
ÁÁh i
	imagePath
ËË 
.
ËË 
EndInit
ËË %
(
ËË% &
)
ËË& '
;
ËË' (
ImageBehavior
ÈÈ !
.
ÈÈ! "
SetAnimatedSource
ÈÈ" 3
(
ÈÈ3 4
LismanBlueImage
ÈÈ4 C
,
ÈÈC D
	imagePath
ÈÈE N
)
ÈÈN O
;
ÈÈO P
break
ÍÍ 
;
ÍÍ 
case
ÎÎ 
LISMANGREEN
ÎÎ  
:
ÎÎ  !
	imagePath
ÏÏ 
.
ÏÏ 
	BeginInit
ÏÏ '
(
ÏÏ' (
)
ÏÏ( )
;
ÏÏ) *
	imagePath
ÌÌ 
.
ÌÌ 
	UriSource
ÌÌ '
=
ÌÌ( )
new
ÌÌ* -
Uri
ÌÌ. 1
(
ÌÌ1 2
parentDirectory
ÌÌ2 A
+
ÌÌB C
$str
ÌÌD h
)
ÌÌh i
;
ÌÌi j
	imagePath
ÓÓ 
.
ÓÓ 
EndInit
ÓÓ %
(
ÓÓ% &
)
ÓÓ& '
;
ÓÓ' (
ImageBehavior
ÔÔ !
.
ÔÔ! "
SetAnimatedSource
ÔÔ" 3
(
ÔÔ3 4
LismanGreenImage
ÔÔ4 D
,
ÔÔD E
	imagePath
ÔÔF O
)
ÔÔO P
;
ÔÔP Q
break
 
;
 
}
ÒÒ 
}
ÛÛ 	
public
ıı 
void
ıı 
NotifyLismanMoved
ıı %
(
ıı% &
int
ıı& )
colorPlayer
ıı* 5
,
ıı5 6
int
ıı7 :
	positionX
ıı; D
,
ııD E
int
ııF I
	positionY
ııJ S
,
ııS T
String
ııT Z
goTo
ıı[ _
)
ıı_ `
{
ˆˆ 	
Image
˜˜ 
lismanImageMoved
˜˜ "
=
˜˜# $
null
˜˜% )
;
˜˜) *
switch
˘˘ 
(
˘˘ 
goTo
˘˘ 
)
˘˘ 
{
˘˘ 
case
˙˙ 
$str
˙˙ 
:
˙˙ 
MoveLismanImageUp
˚˚ %
(
˚˚% &
colorPlayer
˚˚& 1
)
˚˚1 2
;
˚˚2 3
break
¸¸ 
;
¸¸ 
case
˝˝ 
$str
˝˝ 
:
˝˝ !
MoveLismanImageDown
˛˛ '
(
˛˛' (
colorPlayer
˛˛( 3
)
˛˛3 4
;
˛˛4 5
break
ˇˇ 
;
ˇˇ 
case
ÄÄ 
$str
ÄÄ 
:
ÄÄ "
MoveLismanImageRight
ÅÅ (
(
ÅÅ( )
colorPlayer
ÅÅ) 4
)
ÅÅ4 5
;
ÅÅ5 6
break
ÇÇ 
;
ÇÇ 
case
ÉÉ 
$str
ÉÉ 
:
ÉÉ !
MoveLismanImageLeft
ÑÑ '
(
ÑÑ' (
colorPlayer
ÑÑ( 3
)
ÑÑ3 4
;
ÑÑ4 5
break
ÖÖ 
;
ÖÖ 
}
ÜÜ 
switch
àà 
(
àà 
colorPlayer
àà 
)
àà  
{
àà  !
case
ââ 
LISMANYELLOW
ââ !
:
ââ! "
lismanImageMoved
ää $
=
ää% &
LismanYellowImage
ää' 8
;
ää8 9
break
ãã 
;
ãã 
case
åå 
	LISMANRED
åå 
:
åå 
lismanImageMoved
çç $
=
çç% &
LismanRedImage
çç' 5
;
çç5 6
break
éé 
;
éé 
case
èè 

LISMANBLUE
èè 
:
èè  
lismanImageMoved
êê $
=
êê% &
LismanBlueImage
êê' 6
;
êê6 7
break
ëë 
;
ëë 
case
íí 
LISMANGREEN
íí  
:
íí  !
lismanImageMoved
ìì $
=
ìì% &
LismanGreenImage
ìì' 7
;
ìì7 8
break
îî 
;
îî 
}
ïï 
Grid
òò 
.
òò 
	SetColumn
òò 
(
òò 
lismanImageMoved
òò +
,
òò+ ,
	positionX
òò- 6
)
òò6 7
;
òò7 8
Grid
ôô 
.
ôô 
SetRow
ôô 
(
ôô 
lismanImageMoved
ôô (
,
ôô( )
	positionY
ôô* 3
)
ôô3 4
;
ôô4 5
}
öö 	
public
úú 
void
úú %
PrintInformationPlayers
úú +
(
úú+ ,

Dictionary
úú, 6
<
úú6 7
int
úú7 :
,
úú: ;
InformationPlayer
úú< M
>
úúM N
listPlayers
úúO Z
)
úúZ [
{
ùù 	
foreach
ûû 
(
ûû 
KeyValuePair
ûû !
<
ûû! "
int
ûû" %
,
ûû% &
InformationPlayer
ûû' 8
>
ûû8 9
player
ûû: @
in
ûûA C
listPlayers
ûûD O
)
ûûO P
{
üü 
int
†† 
colorPlayer
†† 
=
††  !
player
††" (
.
††( )
Key
††) ,
;
††, -
switch
°° 
(
°° 
colorPlayer
°° #
)
°°# $
{
¢¢ 
case
££ 
LISMANYELLOW
££ %
:
££% &
UserLismanYellow
§§ (
.
§§( )
Text
§§) -
=
§§. /
player
§§0 6
.
§§6 7
Value
§§7 <
.
§§< =

userLisman
§§= G
;
§§G H#
UserLismanYellowLifes
•• -
.
••- .
Text
••. 2
=
••3 4
player
••5 ;
.
••; <
Value
••< A
.
••A B
lifesLisman
••B M
.
••M N
ToString
••N V
(
••V W
)
••W X
;
••X Y#
UserLismanYellowScore
¶¶ -
.
¶¶- .
Text
¶¶. 2
=
¶¶3 4
player
¶¶5 ;
.
¶¶; <
Value
¶¶< A
.
¶¶A B
scoreLisman
¶¶B M
.
¶¶M N
ToString
¶¶N V
(
¶¶V W
)
¶¶W X
;
¶¶X Y
break
ßß 
;
ßß 
case
®® 
	LISMANRED
®® "
:
®®" #
UserLismanRed
©© %
.
©©% &
Text
©©& *
=
©©+ ,
player
©©- 3
.
©©3 4
Value
©©4 9
.
©©9 :

userLisman
©©: D
;
©©D E 
UserLismanRedLifes
™™ *
.
™™* +
Text
™™+ /
=
™™0 1
player
™™2 8
.
™™8 9
Value
™™9 >
.
™™> ?
lifesLisman
™™? J
.
™™J K
ToString
™™K S
(
™™S T
)
™™T U
;
™™U V 
UserLismanRedScore
´´ *
.
´´* +
Text
´´+ /
=
´´0 1
player
´´2 8
.
´´8 9
Value
´´9 >
.
´´> ?
scoreLisman
´´? J
.
´´J K
ToString
´´K S
(
´´S T
)
´´T U
;
´´U V
break
¨¨ 
;
¨¨ 
case
≠≠ 

LISMANBLUE
≠≠ #
:
≠≠# $
UserLismanBlue
ÆÆ &
.
ÆÆ& '
Text
ÆÆ' +
=
ÆÆ, -
player
ÆÆ. 4
.
ÆÆ4 5
Value
ÆÆ5 :
.
ÆÆ: ;

userLisman
ÆÆ; E
;
ÆÆE F!
UserLismanBlueLifes
ØØ +
.
ØØ+ ,
Text
ØØ, 0
=
ØØ1 2
player
ØØ3 9
.
ØØ9 :
Value
ØØ: ?
.
ØØ? @
lifesLisman
ØØ@ K
.
ØØK L
ToString
ØØL T
(
ØØT U
)
ØØU V
;
ØØV W!
UserLismanBlueScore
∞∞ +
.
∞∞+ ,
Text
∞∞, 0
=
∞∞1 2
player
∞∞3 9
.
∞∞9 :
Value
∞∞: ?
.
∞∞? @
scoreLisman
∞∞@ K
.
∞∞K L
ToString
∞∞L T
(
∞∞T U
)
∞∞U V
;
∞∞V W
break
±± 
;
±± 
case
≤≤ 
LISMANGREEN
≤≤ $
:
≤≤$ %
UserLismanGreen
≥≥ '
.
≥≥' (
Text
≥≥( ,
=
≥≥- .
player
≥≥/ 5
.
≥≥5 6
Value
≥≥6 ;
.
≥≥; <

userLisman
≥≥< F
;
≥≥F G"
UserLismanGreenLifes
¥¥ ,
.
¥¥, -
Text
¥¥- 1
=
¥¥2 3
player
¥¥4 :
.
¥¥: ;
Value
¥¥; @
.
¥¥@ A
lifesLisman
¥¥A L
.
¥¥L M
ToString
¥¥M U
(
¥¥U V
)
¥¥V W
;
¥¥W X"
UserLismanGreenScore
µµ ,
.
µµ, -
Text
µµ- 1
=
µµ2 3
player
µµ4 :
.
µµ: ;
Value
µµ; @
.
µµ@ A
scoreLisman
µµA L
.
µµL M
ToString
µµM U
(
µµU V
)
µµV W
;
µµW X
break
∂∂ 
;
∂∂ 
}
∑∑ 
}
∏∏ 
}
ππ 	
public
ªª 
void
ªª (
NotifyDisappearedPowerPill
ªª .
(
ªª. /
int
ªª/ 2
	positionX
ªª3 <
,
ªª< =
int
ªª> A
	positionY
ªªB K
)
ªªK L
{
ºº 	
matrixPillsImages
ΩΩ 
[
ΩΩ 
	positionX
ΩΩ '
,
ΩΩ' (
	positionY
ΩΩ) 2
]
ΩΩ2 3
.
ΩΩ3 4

Visibility
ΩΩ4 >
=
ΩΩ? @

Visibility
ΩΩA K
.
ΩΩK L
Hidden
ΩΩL R
;
ΩΩR S
}
ææ 	
public
¿¿ 
void
¿¿ 
NotifyUpdateScore
¿¿ %
(
¿¿% &
int
¿¿& )
colorPlayer
¿¿* 5
,
¿¿5 6
int
¿¿7 :
scorePlayer
¿¿; F
)
¿¿F G
{
¡¡ 	
switch
¬¬ 
(
¬¬ 
colorPlayer
¬¬ 
)
¬¬  
{
√√ 
case
ƒƒ 
LISMANYELLOW
ƒƒ !
:
ƒƒ! "#
UserLismanYellowScore
≈≈ )
.
≈≈) *
Text
≈≈* .
=
≈≈/ 0
scorePlayer
≈≈1 <
.
≈≈< =
ToString
≈≈= E
(
≈≈E F
)
≈≈F G
;
≈≈G H
break
∆∆ 
;
∆∆ 
case
«« 
	LISMANRED
«« 
:
««  
UserLismanRedScore
»» &
.
»»& '
Text
»»' +
=
»», -
scorePlayer
»». 9
.
»»9 :
ToString
»»: B
(
»»B C
)
»»C D
;
»»D E
break
…… 
;
…… 
case
   

LISMANBLUE
   
:
    !
UserLismanBlueScore
ÀÀ '
.
ÀÀ' (
Text
ÀÀ( ,
=
ÀÀ- .
scorePlayer
ÀÀ/ :
.
ÀÀ: ;
ToString
ÀÀ; C
(
ÀÀC D
)
ÀÀD E
;
ÀÀE F
break
ÃÃ 
;
ÃÃ 
case
ÕÕ 
LISMANGREEN
ÕÕ  
:
ÕÕ  !"
UserLismanGreenScore
ŒŒ (
.
ŒŒ( )
Text
ŒŒ) -
=
ŒŒ. /
scorePlayer
ŒŒ0 ;
.
ŒŒ; <
ToString
ŒŒ< D
(
ŒŒD E
)
ŒŒE F
;
ŒŒF G
break
œœ 
;
œœ 
}
–– 
}
—— 	
public
”” 
void
”” 
NotifyUpdateLifes
”” %
(
””% &
int
””& )
colorPlayer
””* 5
,
””5 6
int
””7 :

lifePlayer
””; E
)
””E F
{
‘‘ 	
switch
’’ 
(
’’ 
colorPlayer
’’ 
)
’’  
{
÷÷ 
case
◊◊ 
LISMANYELLOW
◊◊ !
:
◊◊! "#
UserLismanYellowLifes
ÿÿ )
.
ÿÿ) *
Text
ÿÿ* .
=
ÿÿ/ 0

lifePlayer
ÿÿ1 ;
.
ÿÿ; <
ToString
ÿÿ< D
(
ÿÿD E
)
ÿÿE F
;
ÿÿF G
break
ŸŸ 
;
ŸŸ 
case
⁄⁄ 
	LISMANRED
⁄⁄ 
:
⁄⁄  
UserLismanRedLifes
€€ &
.
€€& '
Text
€€' +
=
€€, -

lifePlayer
€€. 8
.
€€8 9
ToString
€€9 A
(
€€A B
)
€€B C
;
€€C D
break
‹‹ 
;
‹‹ 
case
›› 

LISMANBLUE
›› 
:
››  !
UserLismanBlueLifes
ﬁﬁ '
.
ﬁﬁ' (
Text
ﬁﬁ( ,
=
ﬁﬁ- .

lifePlayer
ﬁﬁ/ 9
.
ﬁﬁ9 :
ToString
ﬁﬁ: B
(
ﬁﬁB C
)
ﬁﬁC D
;
ﬁﬁD E
break
ﬂﬂ 
;
ﬂﬂ 
case
‡‡ 
LISMANGREEN
‡‡  
:
‡‡  !"
UserLismanGreenLifes
·· (
.
··( )
Text
··) -
=
··. /

lifePlayer
··0 :
.
··: ;
ToString
··; C
(
··C D
)
··D E
;
··E F
break
‚‚ 
;
‚‚ 
}
„„ 
}
‰‰ 	
public
ÊÊ 
void
ÊÊ  
NotifyPlayerIsDead
ÊÊ &
(
ÊÊ& '
int
ÊÊ' *
colorPlayer
ÊÊ+ 6
)
ÊÊ6 7
{
ÁÁ 	
switch
ËË 
(
ËË 
colorPlayer
ËË 
)
ËË  
{
ÈÈ 
case
ÍÍ 
LISMANYELLOW
ÍÍ !
:
ÍÍ! "
LismanYellowImage
ÎÎ %
.
ÎÎ% &

Visibility
ÎÎ& 0
=
ÎÎ1 2

Visibility
ÎÎ3 =
.
ÎÎ= >
Hidden
ÎÎ> D
;
ÎÎD E
break
ÏÏ 
;
ÏÏ 
case
ÌÌ 
	LISMANRED
ÌÌ 
:
ÌÌ 
LismanRedImage
ÓÓ "
.
ÓÓ" #

Visibility
ÓÓ# -
=
ÓÓ. /

Visibility
ÓÓ0 :
.
ÓÓ: ;
Hidden
ÓÓ; A
;
ÓÓA B
break
ÔÔ 
;
ÔÔ 
case
 

LISMANBLUE
 
:
  
LismanBlueImage
ÒÒ #
.
ÒÒ# $

Visibility
ÒÒ$ .
=
ÒÒ/ 0

Visibility
ÒÒ1 ;
.
ÒÒ; <
Hidden
ÒÒ< B
;
ÒÒB C
break
ÚÚ 
;
ÚÚ 
case
ÛÛ 
LISMANGREEN
ÛÛ  
:
ÛÛ  !
LismanGreenImage
ÙÙ $
.
ÙÙ$ %

Visibility
ÙÙ% /
=
ÙÙ0 1

Visibility
ÙÙ2 <
.
ÙÙ< =
Hidden
ÙÙ= C
;
ÙÙC D
break
ıı 
;
ıı 
}
ˆˆ 
if
¯¯ 
(
¯¯ 
playerColor
¯¯ 
==
¯¯ 
colorPlayer
¯¯ *
)
¯¯* +
{
¯¯+ ,

MessageBox
˘˘ 
.
˘˘ 
Show
˘˘ 
(
˘˘  

Properties
˘˘  *
.
˘˘* +
	Resources
˘˘+ 4
.
˘˘4 5
message_lose_game
˘˘5 F
)
˘˘F G
;
˘˘G H
MultiplayerHome
˙˙ 
window
˙˙  &
=
˙˙' (
new
˙˙) ,
MultiplayerHome
˙˙- <
(
˙˙< =
)
˙˙= >
;
˙˙> ?
window
˚˚ 
.
˚˚ 
Show
˚˚ 
(
˚˚ 
)
˚˚ 
;
˚˚ 
this
¸¸ 
.
¸¸ 
Close
¸¸ 
(
¸¸ 
)
¸¸ 
;
¸¸ 
}
˛˛ 
}
ÅÅ 	
public
ÉÉ 
void
ÉÉ +
ReturnLismanToInitialPosition
ÉÉ 1
(
ÉÉ1 2
int
ÉÉ2 5
colorPlayer
ÉÉ6 A
,
ÉÉA B
int
ÉÉC F
	positionX
ÉÉG P
,
ÉÉP Q
int
ÉÉR U
	positionY
ÉÉV _
)
ÉÉ_ `
{
ÑÑ 	
Image
ÖÖ 
lismanImageMoved
ÖÖ "
=
ÖÖ# $
null
ÖÖ% )
;
ÖÖ) *
switch
ÜÜ 
(
ÜÜ 
colorPlayer
ÜÜ 
)
ÜÜ  
{
áá 
case
àà 
LISMANYELLOW
àà !
:
àà! "
lismanImageMoved
ââ $
=
ââ% &
LismanYellowImage
ââ' 8
;
ââ8 9
break
ää 
;
ää 
case
ãã 
	LISMANRED
ãã 
:
ãã 
lismanImageMoved
åå $
=
åå% &
LismanRedImage
åå' 5
;
åå5 6
break
çç 
;
çç 
case
éé 

LISMANBLUE
éé 
:
éé  
lismanImageMoved
èè $
=
èè% &
LismanBlueImage
èè' 6
;
èè6 7
break
êê 
;
êê 
case
ëë 
LISMANGREEN
ëë  
:
ëë  !
lismanImageMoved
íí $
=
íí% &
LismanGreenImage
íí' 7
;
íí7 8
break
ìì 
;
ìì 
}
îî 
X
ïï 
=
ïï 
	positionX
ïï 
;
ïï 
Y
ññ 
=
ññ 
	positionY
ññ 
;
ññ 
Grid
óó 
.
óó 
	SetColumn
óó 
(
óó 
lismanImageMoved
óó +
,
óó+ ,
	positionX
óó- 6
)
óó6 7
;
óó7 8
Grid
òò 
.
òò 
SetRow
òò 
(
òò 
lismanImageMoved
òò (
,
òò( )
	positionY
òò* 3
)
òò3 4
;
òò4 5
}
ôô 	
public
õõ 
void
õõ 
UpdateLismanSpeed
õõ %
(
õõ% &
int
õõ& )
speed
õõ* /
,
õõ/ 0
bool
õõ0 4
hasPower
õõ5 =
)
õõ= >
{
úú 	
if
ùù 
(
ùù 
hasPower
ùù 
)
ùù 
{
ûû 
	timePower
üü 
.
üü 
Tick
üü 
+=
üü !
new
üü" %
EventHandler
üü& 2
(
üü2 3
RemovePowerSpeed
üü3 C
)
üüC D
;
üüD E
	timePower
†† 
.
†† 
Interval
†† "
=
††# $
new
††% (
TimeSpan
††) 1
(
††1 2
$num
††2 3
,
††3 4
$num
††5 6
,
††6 7
$num
††8 :
)
††: ;
;
††; <
	timePower
°° 
.
°° 
Start
°° 
(
°°  
)
°°  !
;
°°! "
}
££ 
runLeft
§§ 
.
§§ 
Interval
§§ 
=
§§ 
new
§§ "
TimeSpan
§§# +
(
§§+ ,
$num
§§, -
,
§§- .
$num
§§/ 0
,
§§0 1
$num
§§2 3
,
§§3 4
$num
§§5 6
,
§§6 7
speed
§§8 =
)
§§= >
;
§§> ?
runUp
•• 
.
•• 
Interval
•• 
=
•• 
new
••  
TimeSpan
••! )
(
••) *
$num
••* +
,
••+ ,
$num
••- .
,
••. /
$num
••0 1
,
••1 2
$num
••3 4
,
••4 5
speed
••6 ;
)
••; <
;
••< =
runRight
¶¶ 
.
¶¶ 
Interval
¶¶ 
=
¶¶ 
new
¶¶  #
TimeSpan
¶¶$ ,
(
¶¶, -
$num
¶¶- .
,
¶¶. /
$num
¶¶0 1
,
¶¶1 2
$num
¶¶3 4
,
¶¶4 5
$num
¶¶6 7
,
¶¶7 8
speed
¶¶9 >
)
¶¶> ?
;
¶¶? @
runDown
ßß 
.
ßß 
Interval
ßß 
=
ßß 
new
ßß "
TimeSpan
ßß# +
(
ßß+ ,
$num
ßß, -
,
ßß- .
$num
ßß/ 0
,
ßß0 1
$num
ßß2 3
,
ßß3 4
$num
ßß5 6
,
ßß6 7
speed
ßß8 =
)
ßß= >
;
ßß> ?
speedLisman
®® 
=
®® 
speed
®® 
;
®®  
}
™™ 	
public
¨¨ 
void
¨¨ 
RemovePowerSpeed
¨¨ $
(
¨¨$ %
object
¨¨% +
sender
¨¨, 2
,
¨¨2 3
	EventArgs
¨¨4 =
e
¨¨> ?
)
¨¨? @
{
≠≠ 	
if
ÆÆ 
(
ÆÆ 
timerValidation
ÆÆ 
==
ÆÆ !
$num
ÆÆ" #
)
ÆÆ$ %
{
ØØ 
client
∞∞ 
.
∞∞ 
RemovePower
∞∞ "
(
∞∞" #
SingletonAccount
∞∞# 3
.
∞∞3 4!
getSingletonAccount
∞∞4 G
(
∞∞G H
)
∞∞H I
.
∞∞I J
User
∞∞J N
)
∞∞N O
;
∞∞O P
	timePower
±± 
.
±± 
Stop
±± 
(
±± 
)
±±  
;
±±  !
timerValidation
≤≤ 
=
≤≤  !
$num
≤≤" #
;
≤≤# $
}
≥≥ 
else
¥¥ 
{
µµ 
timerValidation
∂∂ 
=
∂∂  !
$num
∂∂" #
;
∂∂# $
}
∑∑ 
}
∏∏ 	
public
ªª 
void
ªª 
NotifyEndGame
ªª !
(
ªª! "
int
ªª" %
colorLisman
ªª& 1
)
ªª1 2
{
ºº 	

MessageBox
ΩΩ 
.
ΩΩ 
Show
ΩΩ 
(
ΩΩ 

Properties
ΩΩ &
.
ΩΩ& '
	Resources
ΩΩ' 0
.
ΩΩ0 1
message_you_win
ΩΩ1 @
)
ΩΩ@ A
;
ΩΩA B
MultiplayerHome
ææ 

windowHome
ææ &
=
ææ' (
new
ææ) ,
MultiplayerHome
ææ- <
(
ææ< =
)
ææ= >
;
ææ> ?
reconnectionTimer
øø 
.
øø 
Stop
øø "
(
øø" #
)
øø# $
;
øø$ %

windowHome
¿¿ 
.
¿¿ 
Show
¿¿ 
(
¿¿ 
)
¿¿ 
;
¿¿ 
this
¡¡ 
.
¡¡ 
Close
¡¡ 
(
¡¡ 
)
¡¡ 
;
¡¡ 
}
¬¬ 	
public
ƒƒ 
void
ƒƒ #
NotifyLismanLeaveGame
ƒƒ )
(
ƒƒ) *
int
ƒƒ* -
	colorGame
ƒƒ. 7
)
ƒƒ7 8
{
≈≈ 	
switch
«« 
(
«« 
	colorGame
«« !
)
««! "
{
»» 
case
…… 
LISMANYELLOW
…… %
:
……% &
LismanYellowImage
   )
.
  ) *

Visibility
  * 4
=
  5 6

Visibility
  7 A
.
  A B
Hidden
  B H
;
  H I
break
ÀÀ 
;
ÀÀ 
case
ÃÃ 
	LISMANRED
ÃÃ "
:
ÃÃ" #
LismanRedImage
ÕÕ &
.
ÕÕ& '

Visibility
ÕÕ' 1
=
ÕÕ2 3

Visibility
ÕÕ4 >
.
ÕÕ> ?
Hidden
ÕÕ? E
;
ÕÕE F
break
ŒŒ 
;
ŒŒ 
case
œœ 

LISMANBLUE
œœ #
:
œœ# $
LismanBlueImage
–– '
.
––' (

Visibility
––( 2
=
––3 4

Visibility
––5 ?
.
––? @
Hidden
––@ F
;
––F G
break
—— 
;
—— 
case
““ 
LISMANGREEN
““ $
:
““$ %
LismanGreenImage
”” (
.
””( )

Visibility
””) 3
=
””4 5

Visibility
””6 @
.
””@ A
Hidden
””A G
;
””G H
break
‘‘ 
;
‘‘ 
}
’’ 
if
◊◊ 
(
◊◊ 
playerColor
◊◊ 
==
◊◊  "
	colorGame
◊◊# ,
)
◊◊, -
{
ÿÿ 

MessageBox
ŸŸ 
.
ŸŸ 
Show
ŸŸ #
(
ŸŸ# $

Properties
ŸŸ$ .
.
ŸŸ. /
	Resources
ŸŸ/ 8
.
ŸŸ8 9&
message_lisman_left_game
ŸŸ9 Q
)
ŸŸQ R
;
ŸŸR S
MultiplayerHome
⁄⁄ #
window
⁄⁄$ *
=
⁄⁄+ ,
new
⁄⁄- 0
MultiplayerHome
⁄⁄1 @
(
⁄⁄@ A
)
⁄⁄A B
;
⁄⁄B C
reconnectionTimer
€€ %
.
€€% &
Stop
€€& *
(
€€* +
)
€€+ ,
;
€€, -
window
‹‹ 
.
‹‹ 
Show
‹‹ 
(
‹‹  
)
‹‹  !
;
‹‹! "
this
›› 
.
›› 
Close
›› 
(
›› 
)
››  
;
››  !
}
ﬁﬁ 
}
ﬂﬂ 
}
‡‡ 
}·· í
íC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\PositionsTable.xaml.cs
	namespace 	
Lisman
 
{ 
public 

partial 
class 
PositionsTable '
:( )
Window* 0
{1 2
public		 
PositionsTable		 
(		 
)		 
{

 	
InitializeComponent 
(  
)  !
;! "
	LoadTable 
( 
) 
; 
} 	
private 
void  
Button_Click_go_back )
() *
object* 0
sender1 7
,7 8
RoutedEventArgs9 H
eI J
)J K
{ 	
MainMenu 
menu 
= 
new 
MainMenu  (
(( )
)) *
;* +
menu 
. 
Show 
( 
) 
; 
this 
. 
Close 
( 
) 
; 
} 	
public 
void 
	LoadTable 
( 
) 
{ 	
using 
( 
var 
client 
= 
new  #
LismanService$ 1
.1 2 
AccountManagerClient2 F
(F G
)G H
)H I
{J K
try 
{ 
var 
listRecords #
=$ %
client& ,
., -

GetRecords- 7
(7 8
)8 9
;9 :
table_positions #
.# $
ItemsSource$ /
=0 1
listRecords2 =
;= >
} 
catch 
( 
	Exception "
ex# %
)% &
{' (
Logger 
. 
log 
. 
Error $
($ %
$str% ;
+; <
ex= ?
)? @
;@ A
} 
} 
}   	
}## 
}$$ Ç
èC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\SingletonAccount.cs
	namespace 	
Lisman
 
{ 
public 

class 
SingletonAccount !
{" #
private 
static 
LismanService $
.$ %
Account% ,
account- 4
=5 6
null7 ;
;; <
	protected 
SingletonAccount "
(" #
)# $
{% &
} 	
public		 
static		 
void		 
setSingletonAccount		 .
(		. /
LismanService		/ <
.		< =
Account		= D
accountReceived		E T
)		T U
{		V W
if 
( 
account 
== 
null 
)  
{! "
account 
= 
accountReceived )
;) *
} 
} 	
public 
static 
LismanService #
.# $
Account$ +
getSingletonAccount, ?
(? @
)@ A
{B C
if 
( 
account 
!= 
null 
)  
{! "
return 
account 
; 
} 
else 
{ 
return 
null 
; 
} 
} 	
} 
} ≤í
êC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\UserRegister.xaml.cs
	namespace 	
Lisman
 
{ 
public 

partial 
class 
UserRegister %
:& '
Window( .
{ 
static 
String 
parentDirectory &
=' (
	Directory) 2
.2 3
	GetParent3 <
(< =
	Directory= F
.F G
GetCurrentDirectoryG Z
(Z [
)[ \
)\ ]
.] ^
Parent^ d
.d e
FullNamee m
;m n
public 
UserRegister 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
private 
void 
Button_Click_Cancel (
(( )
object) /
sender0 6
,6 7
RoutedEventArgs8 G
eH I
)I J
{ 	

MainWindow 
login 
= 
new "

MainWindow# -
(- .
). /
;/ 0
login 
. 
Show 
( 
) 
; 
this 
. 
Close 
( 
) 
; 
} 	
private 
void 
	SendEmail 
( 
String %
destinationEmail& 6
,6 7
String7 =
token> C
)C D
{ 	
String 
originEmail 
=  
$str! 6
;6 7
String 
passwordEmail  
=! "
GetEmailPassword# 3
(3 4
)4 5
;5 6
String 
subjectEmail 
=  !

Properties" ,
., -
	Resources- 6
.6 7
subject_email7 D
;D E
String   
	bodyEmail   
=   

Properties   )
.  ) *
	Resources  * 3
.  3 4

body_email  4 >
;  > ?
String!! 
url!! 
=!! 
$str!! P
+!!Q R
token!!S X
;!!X Y
MailMessage%% 
mailMessage%% #
=%%$ %
new%%& )
MailMessage%%* 5
(%%5 6
originEmail%%6 A
,%%A B
destinationEmail%%B R
,%%R S
subjectEmail%%S _
,%%_ `
	bodyEmail%%` i
+%%j k
$str%%l r
+%%s t
url%%u x
)%%x y
;%%y z
mailMessage&& 
.&& 

IsBodyHtml&& "
=&&# $
true&&% )
;&&) *

SmtpClient(( 

smtpClient(( !
=((" #
new(($ '

SmtpClient((( 2
(((2 3
$str((3 C
)((C D
;((D E

smtpClient)) 
.)) 
	EnableSsl))  
=))! "
true))# '
;))' (

smtpClient** 
.** !
UseDefaultCredentials** ,
=**- .
false**/ 4
;**4 5

smtpClient++ 
.++ 
Port++ 
=++ 
$num++ !
;++! "

smtpClient,, 
.,, 
Credentials,, "
=,,# $
new,,% (
System,,) /
.,,/ 0
Net,,0 3
.,,3 4
NetworkCredential,,4 E
(,,E F
originEmail,,F Q
,,,Q R
passwordEmail,,R _
),,_ `
;,,` a

smtpClient.. 
... 
Send.. 
(.. 
mailMessage.. '
)..' (
;..( )

smtpClient// 
.// 
Dispose// 
(// 
)//  
;//  !
}00 	
public22 
void22 
SaveData22 
(22 
)22 
{33 	
if44 
(44 
validateEmptyFields44 #
(44# $
)44$ %
&&44& (
ValidateData44) 5
(445 6
)446 7
)447 8
{449 :
try55 
{55 
using66 
(66 
var66 
client66 %
=66& '
new66( +
LismanService66, 9
.669 : 
AccountManagerClient66: N
(66N O
)66O P
)66P Q
{66R S
String77 
token77 $
=77% &
	Encrypter77' 0
.770 1
EncodePassword771 ?
(77? @
Guid77@ D
.77D E
NewGuid77E L
(77L M
)77M N
.77N O
ToString77O W
(77W X
)77X Y
)77Y Z
;77Z [
var88 
accountSave88 '
=88( )
new88* -
LismanService88. ;
.88; <
Account88< C
{88D E
User99  
=99! "
textField_userName99# 5
.995 6
Text996 :
,99: ;
Password:: $
=::% &
	Encrypter::' 0
.::0 1
EncodePassword::1 ?
(::? @ 
passwordBox_password::@ T
.::T U
Password::U ]
)::] ^
,::^ _
Registration_date;; -
=;;. /
DateTime;;0 8
.;;8 9
Now;;9 <
.;;< =
ToString;;= E
(;;E F
);;F G
,;;G H
Key_confirmation<< ,
=<<- .
token<</ 4
,<<4 5
Player== "
===# $
new==% (
LismanService==) 6
.==6 7
Player==7 =
{==> ?

First_name>>  *
=>>+ ,
textField_name>>- ;
.>>; <
Text>>< @
,>>@ A
	Last_name??  )
=??* +
textField_lastName??, >
.??> ?
Text??? C
,??C D
Email@@  %
=@@& '
textField_email@@( 7
.@@7 8
Text@@8 <
,@@< =
}AA 
}BB 
;BB 
ifCC 
(CC 
clientCC "
.CC" #

AddAccountCC# -
(CC- .
accountSaveCC. 9
)CC9 :
!=CC; =
-CC> ?
$numCC? @
)CC@ A
{CCB C
	SendEmailDD %
(DD% &
accountSaveDD& 1
.DD1 2
PlayerDD2 8
.DD8 9
EmailDD9 >
,DD> ?
tokenDD@ E
)DDE F
;DDF G
varEE )
messageRegistrationSuccessfulEE  =
=EE> ?

PropertiesEE@ J
.EEJ K
	ResourcesEEK T
.EET U+
message_registration_successfulEEU t
;EEt u

MessageBoxFF &
.FF& '
ShowFF' +
(FF+ ,)
messageRegistrationSuccessfulFF, I
)FFI J
;FFJ K

MainWindowGG &
loginGG' ,
=GG- .
newGG/ 2

MainWindowGG3 =
(GG= >
)GG> ?
;GG? @
loginHH !
.HH! "
ShowHH" &
(HH& '
)HH' (
;HH( )
thisII  
.II  !
CloseII! &
(II& '
)II' (
;II( )
}JJ 
elseJJ 
{JJ  
varKK $
messageRegistrationErrorKK  8
=KK9 :

PropertiesKK; E
.KKE F
	ResourcesKKF O
.KKO P&
message_registration_errorKKP j
;KKj k

MessageBoxLL &
.LL& '
ShowLL' +
(LL+ ,$
messageRegistrationErrorLL, D
)LLD E
;LLE F
}MM 
}NN 
}OO 
catchOO 
(OO 
	ExceptionOO "
exOO# %
)OO% &
{OO' (
LoggerPP 
.PP 
logPP 
.PP 
ErrorPP $
(PP$ %
$strPP% :
+PP; <
exPP= ?
)PP? @
;PP@ A
}RR 
}TT 
}UU 	
privateWW 
voidWW 
button_save_ClickWW &
(WW& '
objectWW' -
senderWW. 4
,WW4 5
RoutedEventArgsWW6 E
eWWF G
)WWG H
{XX 	
SaveDataYY 
(YY 
)YY 
;YY 
}ZZ 	
public\\ 
void\\ 
On_key_Down_Handler\\ '
(\\' (
object\\( .
sender\\/ 5
,\\5 6
KeyEventArgs\\7 C
inputKey\\D L
)\\L M
{\\N O
if]] 
(]] 
inputKey]] 
.]] 
Key]] 
==]] 
Key]]  #
.]]# $
Return]]$ *
)]]* +
{]], -
SaveData^^ 
(^^ 
)^^ 
;^^ 
}__ 
}`` 	
publicbb 
boolbb 
IsValidEmailbb  
(bb  !
stringbb! '
emailaddressbb( 4
)bb4 5
{bb6 7
Regexcc 
expressionEmailcc !
=cc" #
newcc$ '
Regexcc( -
(cc- .
$strcc. K
)ccK L
;ccL M
returndd 
expressionEmaildd "
.dd" #
IsMatchdd# *
(dd* +
emailaddressdd+ 7
)dd7 8
;dd8 9
}ee 	
publicgg 
boolgg 
ExistsEmailgg 
(gg  
Stringgg  &
emailAdressgg' 2
)gg2 3
{gg4 5
tryhh 
{hh 
usingii 
(ii 
varii 
clientii !
=ii" #
newii$ '
LismanServiceii( 5
.ii5 6
LoginManagerClientii6 H
(iiH I
)iiI J
)iiJ K
{iiL M
returnjj 
clientjj !
.jj! "
EmailExistsjj" -
(jj- .
emailAdressjj. 9
)jj9 :
;jj: ;
}kk 
}ll 
catchll 
(ll 
	Exceptionll 
exll !
)ll! "
{ll# $
Loggermm 
.mm 
logmm 
.mm 
Errormm  
(mm  !
$strmm! 7
+mm8 9
exmm: <
)mm< =
;mm= >
returnnn 
falsenn 
;nn 
}oo 
}qq 	
publicss 
boolss 
UserNameExistsss "
(ss" #
Stringss# )
usernamess* 2
)ss2 3
{ss4 5
trytt 
{tt 
usinguu 
(uu 
varuu 
clientuu !
=uu" #
newuu$ '
LismanServiceuu( 5
.uu5 6
LoginManagerClientuu6 H
(uuH I
)uuI J
)uuJ K
{uuL M
returnvv 
clientvv !
.vv! "
UserNameExistsvv" 0
(vv0 1
usernamevv1 9
)vv9 :
;vv: ;
}ww 
}xx 
catchxx 
(xx 
	Exceptionxx 
exxx !
)xx! "
{xx# $
Loggeryy 
.yy 
logyy 
.yy 
Erroryy  
(yy  !
$stryy! <
+yy= >
exyy? A
)yyA B
;yyB C
returnzz 
falsezz 
;zz 
}{{ 
}~~ 	
public
ÄÄ 
bool
ÄÄ 
showErrorMessage
ÄÄ $
(
ÄÄ$ %
String
ÄÄ% +
errorMessage
ÄÄ, 8
)
ÄÄ8 9
{
ÄÄ: ;

MessageBox
ÅÅ 
.
ÅÅ 
Show
ÅÅ 
(
ÅÅ 
errorMessage
ÅÅ (
)
ÅÅ( )
;
ÅÅ) *
return
ÇÇ 
false
ÇÇ 
;
ÇÇ 
}
ÉÉ 	
public
ÖÖ 
bool
ÖÖ !
validateEmptyFields
ÖÖ '
(
ÖÖ' (
)
ÖÖ( )
{
ÖÖ* +
if
ÜÜ 
(
ÜÜ 
textField_name
ÜÜ 
.
ÜÜ 
Text
ÜÜ #
==
ÜÜ$ &
string
ÜÜ' -
.
ÜÜ- .
Empty
ÜÜ. 3
)
ÜÜ3 4
{
ÜÜ5 6
return
áá 
showErrorMessage
áá '
(
áá' (

Properties
áá( 2
.
áá2 3
	Resources
áá3 <
.
áá< = 
message_error_name
áá= O
)
ááO P
;
ááP Q
}
àà 
if
ââ 
(
ââ  
textField_lastName
ââ "
.
ââ" #
Text
ââ# '
==
ââ( *
string
ââ+ 1
.
ââ1 2
Empty
ââ2 7
)
ââ7 8
{
ââ9 :
return
ää 
showErrorMessage
ää '
(
ää' (

Properties
ää( 2
.
ää2 3
	Resources
ää3 <
.
ää< =$
message_error_lastname
ää= S
)
ääS T
;
ääT U
}
ãã 
if
åå 
(
åå 
textField_email
åå 
.
åå  
Text
åå  $
==
åå% '
string
åå( .
.
åå. /
Empty
åå/ 4
)
åå4 5
{
åå6 7
return
çç 
showErrorMessage
çç '
(
çç' (

Properties
çç( 2
.
çç2 3
	Resources
çç3 <
.
çç< =!
message_error_email
çç= P
)
ççP Q
;
ççQ R
}
éé 
if
èè 
(
èè  
textField_userName
èè "
.
èè" #
Text
èè# '
==
èè( *
string
èè+ 1
.
èè1 2
Empty
èè2 7
)
èè7 8
{
èè9 :
return
êê 
showErrorMessage
êê '
(
êê' (

Properties
êê( 2
.
êê2 3
	Resources
êê3 <
.
êê< =#
message_error_usename
êê= R
)
êêR S
;
êêS T
}
ëë 
if
íí 
(
íí "
passwordBox_password
íí $
.
íí$ %
Password
íí% -
==
íí. 0
string
íí1 7
.
íí7 8
Empty
íí8 =
)
íí= >
{
íí? @
return
ìì 
showErrorMessage
ìì '
(
ìì' (

Properties
ìì( 2
.
ìì2 3
	Resources
ìì3 <
.
ìì< =$
message_error_password
ìì= S
)
ììS T
;
ììT U
}
îî 
if
ïï 
(
ïï )
passwordBox_confirmPassword
ïï +
.
ïï+ ,
Password
ïï, 4
==
ïï5 7
string
ïï8 >
.
ïï> ?
Empty
ïï? D
)
ïïD E
{
ïïF G
return
ññ 
showErrorMessage
ññ '
(
ññ' (

Properties
ññ( 2
.
ññ2 3
	Resources
ññ3 <
.
ññ< =1
#message_error_confirmation_password
ññ= `
)
ññ` a
;
ñña b
}
óó 
return
ôô 
true
ôô 
;
ôô 
}
öö 	
public
úú 
bool
úú 
ValidateData
úú  
(
úú  !
)
úú! "
{
úú# $
Regex
ùù 
rg
ùù 
=
ùù 
new
ùù 
Regex
ùù  
(
ùù  !
$str
ùù! u
)
ùùu v
;
ùùv w
if
ûû 
(
ûû 
!
ûû 
rg
ûû 
.
ûû 
IsMatch
ûû 
(
ûû 
textField_name
ûû *
.
ûû* +
Text
ûû+ /
)
ûû/ 0
)
ûû0 1
{
ûû2 3
return
üü 
showErrorMessage
üü '
(
üü' (

Properties
üü( 2
.
üü2 3
	Resources
üü3 <
.
üü< ="
message_invalid_name
üü= Q
)
üüQ R
;
üüR S
}
†† 
if
°° 
(
°° 
!
°° 
rg
°° 
.
°° 
IsMatch
°° 
(
°°  
textField_lastName
°° .
.
°°. /
Text
°°/ 3
)
°°3 4
)
°°4 5
{
°°6 7
return
¢¢ 
showErrorMessage
¢¢ &
(
¢¢& '

Properties
¢¢' 1
.
¢¢1 2
	Resources
¢¢2 ;
.
¢¢; <&
message_invalid_lastname
¢¢< T
)
¢¢T U
;
¢¢U V
}
££ 
else
§§ 
if
§§ 
(
§§ 
!
§§ 
IsValidEmail
§§ "
(
§§" #
textField_email
§§# 2
.
§§2 3
Text
§§3 7
)
§§7 8
)
§§8 9
{
§§9 :
return
•• 
showErrorMessage
•• '
(
••' (

Properties
••( 2
.
••2 3
	Resources
••3 <
.
••< =#
message_invalid_email
••= R
)
••R S
;
••S T
}
¶¶ 
else
¶¶ 
if
¶¶ 
(
¶¶ 
ExistsEmail
¶¶ "
(
¶¶" #
textField_email
¶¶# 2
.
¶¶2 3
Text
¶¶3 7
)
¶¶7 8
)
¶¶8 9
{
¶¶: ;
return
ßß 
showErrorMessage
ßß '
(
ßß' (

Properties
ßß( 2
.
ßß2 3
	Resources
ßß3 <
.
ßß< ="
message_exists_email
ßß= Q
)
ßßQ R
;
ßßR S
}
®® 
if
©© 
(
©© 
UserNameExists
©© 
(
©©  
textField_userName
©© 1
.
©©1 2
Text
©©2 6
)
©©6 7
)
©©7 8
{
©©9 :
return
™™ 
showErrorMessage
™™ (
(
™™( )

Properties
™™) 3
.
™™3 4
	Resources
™™4 =
.
™™= >%
message_exists_username
™™> U
)
™™U V
;
™™V W
}
´´ 
if
¨¨ 
(
¨¨ 
!
¨¨ "
passwordBox_password
¨¨ %
.
¨¨% &
Password
¨¨& .
.
¨¨. /
Equals
¨¨/ 5
(
¨¨5 6)
passwordBox_confirmPassword
¨¨6 Q
.
¨¨Q R
Password
¨¨R Z
)
¨¨Z [
)
¨¨[ \
{
¨¨\ ]
return
≠≠ 
showErrorMessage
≠≠ '
(
≠≠' (

Properties
≠≠( 2
.
≠≠2 3
	Resources
≠≠3 <
.
≠≠< =/
!message_error_passwords_different
≠≠= ^
)
≠≠^ _
;
≠≠_ `
}
ÆÆ 
return
ØØ 
true
ØØ 
;
ØØ 
}
∞∞ 	
public
∂∂ 
static
∂∂ 
string
∂∂ 
GetEmailPassword
∂∂ -
(
∂∂- .
)
∂∂. /
{
∑∑ 	
string
∏∏ 
password
∏∏ 
;
∏∏ 
using
ππ 
(
ππ 
StreamReader
ππ 
sr
ππ  "
=
ππ# $
new
ππ% (
StreamReader
ππ) 5
(
ππ5 6
parentDirectory
ππ6 E
+
ππF G
$str
ππH f
)
ππf g
)
ππg h
{
∫∫ 
password
ªª 
=
ªª 
sr
ªª 
.
ªª 
ReadLine
ªª %
(
ªª% &
)
ªª& '
;
ªª' (
}
ºº 
return
ΩΩ 
	Encrypter
ΩΩ 
.
ΩΩ 
Decrypt
ΩΩ $
(
ΩΩ$ %
password
ΩΩ% -
)
ΩΩ- .
;
ΩΩ. /
}
ææ 	
}
¡¡ 
}¬¬ Ø
áC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\App.xaml.cs
	namespace 	
Lisman
 
{ 
public 

partial 
class 
App 
: 
Application *
{+ ,
App 
( 
) 
{		 	
} 	
} 
} —Y
âC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\Login.xaml.cs
	namespace 	
Lisman
 
{ 
public 

partial 
class 

MainWindow #
:$ %
Window& ,
{- .
public 

MainWindow 
( 
) 
{ 	
InitializeComponent 
(  
)  !
;! "
} 	
public 
Boolean 
ValidateFields %
(% &
)& '
{ 	
if 
( 
textField_user 
. 
Text "
==# %
$str& (
)( )
{* +
var 
messageError  
=! "

Properties# -
.- .
	Resources. 7
.7 8!
message_error_usename8 M
;M N

MessageBox 
. 
Show 
(  
messageError  ,
), -
;- .
return 
false 
; 
} 
if 
(  
passwordBox_password $
.$ %
Password% -
==. 0
$str1 3
)3 4
{5 6
var 
messageError  
=! "

Properties# -
.- .
	Resources. 7
.7 8"
message_error_password8 N
;N O

MessageBox 
. 
Show 
(  
messageError  ,
), -
;- .
return 
false 
; 
} 
return 
true 
; 
}   	
private"" 
void"" 
Hyperlink_Click"" $
(""$ %
object""% +
sender"", 2
,""2 3
RoutedEventArgs""4 C
e""D E
)""E F
{## 	
UserRegister$$ 
userRegister$$ %
=$$& '
new$$( +
UserRegister$$, 8
($$8 9
)$$9 :
;$$: ;
userRegister%% 
.%% 
Show%% 
(%% 
)%% 
;%%  
this&& 
.&& 
Close&& 
(&& 
)&& 
;&& 
})) 	
private++ 
void++ "
MenuItem_Click_Spanish++ +
(+++ ,
object++, 2
sender++3 9
,++9 :
RoutedEventArgs++; J
e++K L
)++L M
{,, 	
System-- 
.-- 
	Threading-- 
.-- 
Thread-- #
.--# $
CurrentThread--$ 1
.--1 2
CurrentUICulture--2 B
=--C D
new--E H
System--I O
.--O P
Globalization--P ]
.--] ^
CultureInfo--^ i
(--i j
$str--j q
)--q r
;--r s

MainWindow.. 
login.. 
=.. 
new.. "

MainWindow..# -
(..- .
)... /
;../ 0
login// 
.// 
Show// 
(// 
)// 
;// 
this00 
.00 
Close00 
(00 
)00 
;00 
}11 	
private33 
void33 "
MenuItem_Click_English33 +
(33+ ,
object33, 2
sender333 9
,339 :
RoutedEventArgs33; J
e33K L
)33L M
{44 	
System55 
.55 
	Threading55 
.55 
Thread55 #
.55# $
CurrentThread55$ 1
.551 2
CurrentUICulture552 B
=55C D
new55E H
System55I O
.55O P
Globalization55P ]
.55] ^
CultureInfo55^ i
(55i j
$str55j l
)55l m
;55m n

MainWindow66 
login66 
=66 
new66 "

MainWindow66# -
(66- .
)66. /
;66/ 0
login77 
.77 
Show77 
(77 
)77 
;77 
this88 
.88 
Close88 
(88 
)88 
;88 
}99 	
public;; 
void;; 
On_key_Down_Handler;; '
(;;' (
object;;( .
sender;;/ 5
,;;5 6
KeyEventArgs;;7 C
inputKey;;D L
);;L M
{;;N O
if<< 
(<< 
inputKey<< 
.<< 
Key<< 
==<< 
Key<<  #
.<<# $
Return<<$ *
)<<* +
{<<, -
	LoginUser== 
(== 
)== 
;== 
}>> 
}@@ 	
privateCC 
voidCC 
btn_login_ClickCC $
(CC$ %
objectCC% +
senderCC, 2
,CC2 3
RoutedEventArgsCC4 C
eCCD E
)CCE F
{CCG H
ifDD 
(DD &
CheckForInternetConnectionDD *
(DD* +
)DD+ ,
)DD, -
{EE 
	LoginUserFF 
(FF 
)FF 
;FF 
}GG 
elseHH 
{II 

MessageBoxJJ 
.JJ 
ShowJJ 
(JJ  
$strJJ  <
)JJ< =
;JJ= >
}KK 
}MM 	
publicOO 
voidOO 
AccessManagementOO $
(OO$ %
LismanServiceOO% 2
.OO2 3
AccountOO3 :
accountOO; B
)OOB C
{PP 	
switchQQ 
(QQ 
accountQQ 
.QQ 
IdQQ 
)QQ 
{RR 
caseSS 
$numSS 
:SS 
varTT 
messageWarningLoginTT +
=TT, -

PropertiesTT. 8
.TT8 9
	ResourcesTT9 B
.TTB C!
message_warning_loginTTC X
;TTX Y

MessageBoxUU 
.UU 
ShowUU #
(UU# $
messageWarningLoginUU$ 7
)UU7 8
;UU8 9
LoggerVV 
.VV 
logVV 
.VV 
WarnVV #
(VV# $
$strVV$ :
+VV; <
textField_userVV= K
.VVK L
TextVVL P
)VVP Q
;VVQ R
breakWW 
;WW 
caseXX 
-XX 
$numXX 
:XX 

MessageBoxYY 
.YY 
ShowYY #
(YY# $
$strYY$ B
)YYB C
;YYC D
breakZZ 
;ZZ 
default[[ 
:[[ 
if\\ 
(\\ 
account\\ 
.\\  
Key_confirmation\\  0
==\\1 3
$str\\4 7
)\\7 8
{]] 
SingletonAccount^^ (
.^^( )
setSingletonAccount^^) <
(^^< =
account^^= D
)^^D E
;^^E F
MainMenu__  
mainMenu__! )
=__* +
new__, /
MainMenu__0 8
(__8 9
)__9 :
;__: ;
mainMenu``  
.``  !
Show``! %
(``% &
)``& '
;``' (
thisaa 
.aa 
Closeaa "
(aa" #
)aa# $
;aa$ %
}bb 
elsecc 
{dd 
varee !
messageAccountConfirmee 1
=ee2 3

Propertiesee4 >
.ee> ?
	Resourcesee? H
.eeH I#
message_account_confirmeeI `
;ee` a

MessageBoxff "
.ff" #
Showff# '
(ff' (!
messageAccountConfirmff( =
)ff= >
;ff> ?
}gg 
breakhh 
;hh 
}ii 
}jj 	
publicll 
voidll 
	LoginUserll 
(ll 
)ll 
{mm 	
ifnn 
(nn 
ValidateFieldsnn 
(nn 
)nn  
)nn  !
{oo 
trypp 
{qq 
usingrr 
(rr 
varrr 
clientrr %
=rr& '
newrr( +
LismanServicerr, 9
.rr9 :
LoginManagerClientrr: L
(rrL M
)rrM N
)rrN O
{ss 
trytt 
{uu 
boolvv  
	inSessionvv! *
=vv+ ,
clientvv- 3
.vv3 4
UserInSessionvv4 A
(vvA B
textField_uservvB P
.vvP Q
TextvvQ U
)vvU V
;vvV W
ifxx 
(xx  
!xx  !
	inSessionxx! *
)xx* +
{yy 
LismanServicezz  -
.zz- .
Accountzz. 5
accountzz6 =
=zz> ?
clientzz@ F
.zzF G
LoginAccountzzG S
(zzS T
textField_userzzT b
.zzb c
Textzzc g
,zzg h
	Encrypterzzi r
.zzr s
EncodePassword	zzs Å
(
zzÅ Ç"
passwordBox_password
zzÇ ñ
.
zzñ ó
Password
zzó ü
)
zzü †
)
zz† °
;
zz° ¢
AccessManagement{{  0
({{0 1
account{{1 8
){{8 9
;{{9 :
}|| 
else}}  
{~~ 

MessageBox  *
.* +
Show+ /
(/ 0
$str0 ]
)] ^
;^ _
}
ÅÅ 
}
ÉÉ 
catch
ÑÑ 
(
ÑÑ 
	Exception
ÑÑ (
ex
ÑÑ) +
)
ÑÑ+ ,
{
ÖÖ 
Console
ÜÜ #
.
ÜÜ# $
	WriteLine
ÜÜ$ -
(
ÜÜ- .
ex
ÜÜ. 0
.
ÜÜ0 1
Message
ÜÜ1 8
)
ÜÜ8 9
;
ÜÜ9 :
Logger
áá "
.
áá" #
log
áá# &
.
áá& '
Error
áá' ,
(
áá, -
$str
áá- C
+
ááD E
ex
ááF H
.
ááH I
Message
ááI P
)
ááP Q
;
ááQ R
}
àà 
}
ãã 
}
åå 
catch
åå 
(
åå $
CommunicationException
åå /
ex
åå0 2
)
åå2 3
{
çç 

MessageBox
éé 
.
éé 
Show
éé #
(
éé# $

Properties
éé$ .
.
éé. /
	Resources
éé/ 8
.
éé8 9%
server_connection_error
éé9 P
)
ééP Q
;
ééQ R
Logger
èè 
.
èè 
log
èè 
.
èè 
Error
èè $
(
èè$ %
$str
èè% ;
+
èè< =
ex
èè> @
.
èè@ A
Message
èèA H
)
èèH I
;
èèI J
}
êê 
}
íí 
}
ìì 	
public
ïï 
static
ïï 
bool
ïï (
CheckForInternetConnection
ïï 5
(
ïï5 6
)
ïï6 7
{
ññ 	
bool
óó 
internetAvailable
óó "
=
óó# $
true
óó% )
;
óó) *
try
òò 
{
ôô 
using
öö 
(
öö 
var
öö 
client
öö !
=
öö" #
new
öö$ '
	WebClient
öö( 1
(
öö1 2
)
öö2 3
)
öö3 4
{
õõ 
client
úú 
.
úú 
OpenRead
úú #
(
úú# $
$str
úú$ 7
)
úú7 8
;
úú8 9
}
ùù 
}
üü 
catch
†† 
{
°° 
internetAvailable
¢¢ !
=
¢¢" #
false
¢¢$ )
;
¢¢) *
}
££ 
return
•• 
internetAvailable
•• $
;
••$ %
}
¶¶ 	
}
®® 
}©© ⁄
ñC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\Lisman\Lisman\Properties\AssemblyInfo.cs
[

 
assembly

 	
:

	 

AssemblyTitle

 
(

 
$str

 !
)

! "
]

" #
[ 
assembly 	
:	 

AssemblyDescription 
( 
$str !
)! "
]" #
[ 
assembly 	
:	 
!
AssemblyConfiguration  
(  !
$str! #
)# $
]$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str #
)# $
]$ %
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
["" 
assembly"" 	
:""	 

	ThemeInfo"" 
("" &
ResourceDictionaryLocation## 
.## 
None## #
,### $&
ResourceDictionaryLocation&& 
.&& 
SourceAssembly&& -
))) 
])) 
[66 
assembly66 	
:66	 

AssemblyVersion66 
(66 
$str66 $
)66$ %
]66% &
[77 
assembly77 	
:77	 

AssemblyFileVersion77 
(77 
$str77 (
)77( )
]77) *
[88 
assembly88 	
:88	 

log4net88 
.88 
Config88 
.88 
XmlConfigurator88 )
(88) *

ConfigFile88* 4
=885 6
$str887 G
)88G H
]88H I