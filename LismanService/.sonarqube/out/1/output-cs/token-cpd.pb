„z
òC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\ChatManager.cs
	namespace 	
LismanService
 
{ 
public 

partial 
class 
LismanService &
:' (
IChatManager) 5
{6 7
static 

Dictionary 
< 
String  
,  ! 
IChatManagerCallBack" 6
>6 7!
connectionChatService8 M
=N O
newP S

DictionaryT ^
<^ _
String_ e
,e f 
IChatManagerCallBackg {
>{ |
(| }
)} ~
;~ 
private

 
Func

 
<

  
IChatManagerCallBack

 )
>

) *
callbackChannel

+ :
;

: ;
public 
LismanService 
( 
Func !
<! " 
IChatManagerCallBack" 6
>6 7
callbackCreator8 G
)G H
{ 	
this 
. 
callbackChannel  
=! "
callbackCreator# 2
??3 5
throw6 ;
new< ?!
ArgumentNullException@ U
(U V
$strV g
)g h
;h i
} 	
public 
void 
JoinChat 
( 
string #
user$ (
,( )
int* -
idgame. 4
)4 5
{ 	
var 

connection 
= 
OperationContext -
.- .
Current. 5
.5 6
GetCallbackChannel6 H
<H I 
IChatManagerCallBackI ]
>] ^
(^ _
)_ `
;` a
if 
( !
connectionChatService %
.% &
ContainsKey& 1
(1 2
user2 6
)6 7
)7 8
{9 :!
connectionChatService %
[% &
user& *
]* +
=, -

connection. 8
;8 9
} 
else 
{ !
connectionChatService %
.% &
Add& )
() *
user* .
,. /

connection0 :
): ;
;; <
} 
foreach!! 
(!! 
var!! 
userGame!! !
in!!" $
listGamesOnline!!% 4
[!!4 5
idgame!!5 ;
]!!; <
)!!< =
{!!> ?
try"" 
{## 
if$$ 
($$ !
connectionChatService$$ -
[$$- .
userGame$$. 6
]$$6 7
!=$$8 :
null$$; ?
)$$? @
{%% !
connectionChatService&& -
[&&- .
userGame&&. 6
]&&6 7
.&&7 8
NotifyNumberPlayers&&8 K
(&&K L
listGamesOnline&&L [
[&&[ \
idgame&&\ b
]&&b c
.&&c d
Count&&d i
)&&i j
;&&j k
if'' 
('' 
userGame'' $
!=''% '
user''( ,
)'', -
{(( !
connectionChatService)) 1
[))1 2
userGame))2 :
])): ;
.)); <
NotifyJoinedPlayer))< N
())N O
user))O S
)))S T
;))T U
}++ 
},, 
}.. 
catch.. 
(.. "
CommunicationException.. -
ex... 0
)..0 1
{// 
Logger00 
.00 
log00 
.00 
Error00 $
(00$ %
$str00% 1
+002 3
ex004 6
)006 7
;007 8
}11 
}44 
}77 	
public99 
void99 
	LeaveChat99 
(99 
string99 $
user99% )
,99) *
int99+ .
idgame99/ 5
)995 6
{997 8
if:: 
(:: 
callbackChannel:: 
==::  "
null::# '
)::' (
{;; 
callbackChannel<< 
=<<  !
(<<" #
)<<# $
=><<% '
OperationContext<<( 8
.<<8 9
Current<<9 @
.<<@ A
GetCallbackChannel<<A S
<<<S T 
IChatManagerCallBack<<T h
><<h i
(<<i j
)<<j k
;<<k l
}>> 
this?? 
.?? 
callbackChannel??  
(??  !
)??! "
.??" #
NotifyNumberPlayers??# 6
(??6 7
listGamesOnline??7 F
[??F G
idgame??G M
]??M N
.??N O
Count??O T
)??T U
;??U V
this@@ 
.@@ 
callbackChannel@@  
(@@  !
)@@! "
.@@" #
NotifyLeftPlayer@@# 3
(@@3 4
user@@4 8
)@@8 9
;@@9 :
tryBB 
{BB 
foreachCC 
(CC 
varCC 
userGameCC %
inCC& (
listGamesOnlineCC) 8
[CC8 9
idgameCC9 ?
]CC? @
)CC@ A
{CCB C
tryDD 
{EE 
ifFF 
(FF !
connectionChatServiceFF 1
[FF1 2
userGameFF2 :
]FF: ;
!=FF< >
nullFF? C
)FFC D
{GG !
connectionChatServiceHH 1
[HH1 2
userGameHH2 :
]HH: ;
.HH; <
NotifyNumberPlayersHH< O
(HHO P
listGamesOnlineHHP _
[HH_ `
idgameHH` f
]HHf g
.HHg h
CountHHh m
)HHm n
;HHn o!
connectionChatServiceII 1
[II1 2
userGameII2 :
]II: ;
.II; <
NotifyLeftPlayerII< L
(IIL M
userIIM Q
)IIQ R
;IIR S
}JJ 
}LL 
catchMM 
(MM "
CommunicationExceptionMM 1
exMM2 4
)MM4 5
{NN 
LoggerOO 
.OO 
logOO "
.OO" #
ErrorOO# (
(OO( )
$strOO) 6
+OO7 8
exOO9 ;
)OO; <
;OO< =
}PP 
}RR 
}SS 
catchSS 
(SS  
KeyNotFoundExceptionSS )
exSS* ,
)SS, -
{SS. /
LoggerTT 
.TT 
logTT 
.TT 
ErrorTT  
(TT  !
$strTT! 7
+TT8 9
exTT: <
)TT< =
;TT= >
}UU 
}WW 	
publicZZ 
voidZZ 
SendMessageZZ 
(ZZ  
MessageZZ  '
messageZZ( /
,ZZ/ 0
intZZ1 4
idgameZZ5 ;
)ZZ; <
{[[ 	
if\\ 
(\\ 
callbackChannel\\ 
==\\  "
null\\# '
)\\' (
{]] 
callbackChannel^^ 
=^^  !
(^^" #
)^^# $
=>^^% '
OperationContext^^( 8
.^^8 9
Current^^9 @
.^^@ A
GetCallbackChannel^^A S
<^^S T 
IChatManagerCallBack^^T h
>^^h i
(^^i j
)^^j k
;^^k l
}`` 
thisaa 
.aa 
callbackChannelaa  
(aa  !
)aa! "
.aa" #
NotifyMessageaa# 0
(aa0 1
messageaa1 8
)aa8 9
;aa9 :
foreachcc 
(cc 
varcc 
userGamecc !
incc" $
listGamesOnlinecc% 4
[cc4 5
idgamecc5 ;
]cc; <
)cc< =
{dd 
tryee 
{ff 
ifgg 
(gg !
connectionChatServicegg -
[gg- .
userGamegg. 6
]gg6 7
!=gg8 :
nullgg; ?
)gg? @
{hh !
connectionChatServiceii -
[ii- .
userGameii. 6
]ii6 7
.ii7 8
NotifyMessageii8 E
(iiE F
messageiiF M
)iiM N
;iiN O
}jj 
}mm 
catchnn 
(nn "
CommunicationExceptionnn 1
exnn2 4
)nn4 5
{oo 
Loggerpp 
.pp 
logpp "
.pp" #
Errorpp# (
(pp( )
$strpp) 8
+pp9 :
expp; =
)pp= >
;pp> ?
}qq 
}ss 
}vv 	
publicxx 
voidxx 
	StartGamexx 
(xx 
stringxx $
userxx% )
,xx) *
intxx+ .
idgamexx/ 5
)xx5 6
{yy 	
ifzz 
(zz 
callbackChannelzz 
==zz  "
nullzz# '
)zz' (
{{{ 
callbackChannel|| 
=||  !
(||" #
)||# $
=>||% '
OperationContext||( 8
.||8 9
Current||9 @
.||@ A
GetCallbackChannel||A S
<||S T 
IChatManagerCallBack||T h
>||h i
(||i j
)||j k
;||k l
}~~ 
this 
. 
callbackChannel  
(  !
)! "
." #
InitGame# +
(+ ,
), -
;- .
ReadMapGame
ÑÑ 
(
ÑÑ 
)
ÑÑ 
;
ÑÑ 
try
ÖÖ 
{
ÜÜ 
if
áá 
(
áá 
!
áá (
multiplayerGameInformation
áá /
.
áá/ 0
ContainsKey
áá0 ;
(
áá; <
idgame
áá< B
)
ááB C
)
ááC D
{
àà 
Game
ââ 
informationGame
ââ (
=
ââ) *
new
ââ+ .
Game
ââ/ 3
{
ää 
gameMap
åå 
=
åå  !
GAMEMAP
åå" )
,
åå) *
lismanUsers
çç #
=
çç$ %
new
çç& )

Dictionary
çç* 4
<
çç4 5
int
çç5 8
,
çç8 9
InformationPlayer
çç: K
>
ççK L
(
ççL M
)
ççM N
}
èè 
;
èè (
multiplayerGameInformation
êê .
.
êê. /
Add
êê/ 2
(
êê2 3
idgame
êê3 9
,
êê9 :
informationGame
êê; J
)
êêJ K
;
êêK L
}
ëë 
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
ex
ìì 
)
ìì  
{
îî 
Logger
ïï 
.
ïï 
log
ïï 
.
ïï 
Info
ïï 
(
ïï  
$str
ïï  D
+
ïïE F
ex
ïïG I
.
ïïI J
Message
ïïJ Q
)
ïïQ R
;
ïïR S
}
ññ 
foreach
òò 
(
òò 
var
òò 
userGame
òò %
in
òò& (
listGamesOnline
òò) 8
[
òò8 9
idgame
òò9 ?
]
òò? @
)
òò@ A
{
ôô 
if
õõ 
(
õõ 
AssignColorPlayer
õõ )
(
õõ) *
idgame
õõ* 0
,
õõ0 1
userGame
õõ2 :
)
õõ: ;
)
õõ; <
{
úú 
try
ùù 
{
ûû 
if
üü 
(
üü #
connectionChatService
üü 1
[
üü1 2
userGame
üü2 :
]
üü: ;
!=
üü< >
null
üü? C
)
üüC D
{
†† #
connectionChatService
°° 1
[
°°1 2
userGame
°°2 :
]
°°: ;
.
°°; <
InitGame
°°< D
(
°°D E
)
°°E F
;
°°F G
}
¢¢ 
}
§§ 
catch
•• 
(
•• $
CommunicationException
•• 5
ex
••6 8
)
••8 9
{
¶¶ 
Logger
ßß "
.
ßß" #
log
ßß# &
.
ßß& '
Error
ßß' ,
(
ßß, -
$str
ßß- :
+
ßß; <
ex
ßß= ?
)
ßß? @
;
ßß@ A
}
®® 
}
™™ 
}
¨¨ 
Console
≠≠ 
.
≠≠ 
	WriteLine
≠≠ !
(
≠≠! "
$str
≠≠" ?
,
≠≠? @
idgame
≠≠A G
,
≠≠G H
DateTime
≠≠I Q
.
≠≠Q R
Now
≠≠R U
)
≠≠U V
;
≠≠V W
}
ÆÆ 	
public
±± 
bool
±± 
AssignColorPlayer
±± %
(
±±% &
int
±±& )
idgame
±±* 0
,
±±0 1
String
±±2 8
user
±±9 =
)
±±= >
{
≤≤ 	
InformationPlayer
≥≥ 

infoPlayer
≥≥ (
=
≥≥) *
new
≥≥+ .
InformationPlayer
≥≥/ @
(
≥≥@ A
)
≥≥A B
;
≥≥B C
int
¥¥ 
index
¥¥ 
=
¥¥ 
listGamesOnline
¥¥ '
[
¥¥' (
idgame
¥¥( .
]
¥¥. /
.
¥¥/ 0
	FindIndex
¥¥0 9
(
¥¥9 :
u
¥¥: ;
=>
¥¥< >
u
¥¥? @
==
¥¥A C
user
¥¥D H
)
¥¥H I
;
¥¥I J
bool
µµ 
result
µµ 
=
µµ 
false
µµ 
;
µµ  
int
∂∂ 
colorAssigned
∂∂ 
=
∂∂ 
$num
∂∂  !
;
∂∂! "
switch
∑∑ 
(
∑∑ 
index
∑∑ 
)
∑∑ 
{
∏∏ 
case
ππ 
$num
ππ 
:
ππ 
colorAssigned
∫∫ !
=
∫∫" #
LISMANYELLOW
∫∫% 1
;
∫∫1 2

infoPlayer
ªª 
.
ªª 
initialDirecction
ªª 0
=
ªª1 2
$str
ªª3 :
;
ªª: ;
break
ºº 
;
ºº 
case
ΩΩ 
$num
ΩΩ 
:
ΩΩ 
colorAssigned
ææ !
=
ææ" #
	LISMANRED
ææ$ -
;
ææ- .

infoPlayer
øø 
.
øø 
initialDirecction
øø 0
=
øø1 2
$str
øø3 9
;
øø9 :
break
¿¿ 
;
¿¿ 
case
¡¡ 
$num
¡¡ 
:
¡¡ 
colorAssigned
¬¬ !
=
¬¬" #

LISMANBLUE
¬¬$ .
;
¬¬. /

infoPlayer
√√ 
.
√√ 
initialDirecction
√√ 0
=
√√1 2
$str
√√3 :
;
√√: ;
break
ƒƒ 
;
ƒƒ 
case
≈≈ 
$num
≈≈ 
:
≈≈ 
colorAssigned
∆∆ !
=
∆∆" #
LISMANGREEN
∆∆$ /
;
∆∆/ 0

infoPlayer
«« 
.
«« 
initialDirecction
«« 0
=
««1 2
$str
««3 9
;
««9 :
break
»» 
;
»» 
}
…… 

infoPlayer
   
.
   

userLisman
   !
=
  " #
user
  $ (
;
  ( )

infoPlayer
ÀÀ 
.
ÀÀ 
lifesLisman
ÀÀ "
=
ÀÀ# $
$num
ÀÀ% &
;
ÀÀ& '

infoPlayer
ÃÃ 
.
ÃÃ 
hasPower
ÃÃ 
=
ÃÃ  !
false
ÃÃ" '
;
ÃÃ' (

infoPlayer
ÕÕ 
.
ÕÕ 
isLive
ÕÕ 
=
ÕÕ 
true
ÕÕ  $
;
ÕÕ$ %

infoPlayer
ŒŒ 
.
ŒŒ 
scoreLisman
ŒŒ "
=
ŒŒ# $
$num
ŒŒ% &
;
ŒŒ& '(
multiplayerGameInformation
œœ &
[
œœ& '
idgame
œœ' -
]
œœ- .
.
œœ. /
lismanUsers
œœ/ :
.
œœ: ;
Add
œœ; >
(
œœ> ?
colorAssigned
œœ? L
,
œœL M

infoPlayer
œœN X
)
œœX Y
;
œœY Z
if
—— 
(
—— 
colorAssigned
—— 
!=
——  
$num
——! "
)
——" #
{
““ 
result
”” 
=
”” 
true
”” 
;
”” 
}
‘‘ 
return
÷÷ 
result
÷÷ 
;
÷÷ 
}
◊◊ 	
}
›› 
}ﬁﬁ Î3
òC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\GameManager.cs
	namespace 	
LismanService
 
{ 
public		 

partial		 
class		 
LismanService		 &
:		' (
IGameManager		) 5
{		6 7
static

 

Dictionary

 
<

 
int

 
,

 
List

 "
<

" #
String

# )
>

) *
>

* +
listGamesOnline

, ;
=

< =
new

> A

Dictionary

B L
<

L M
int

M P
,

P Q
List

Q U
<

U V
String

V \
>

\ ]
>

] ^
(

^ _
)

_ `
;

` a
public 
int 

CreateGame 
( 
string $
user% )
)) *
{ 	
int 
idgame 
= 
$num 
; 
try 
{ 
using 
( 
var 
dataBase #
=$ %
new& ) 
EntityModelContainer* >
(> ?
)? @
)@ A
{ 
var 
newGame 
=  !
new" %

DataAccess& 0
.0 1
Game1 5
{ 
Creation_date %
=& '
DateTime( 0
.0 1
Now1 4
,4 5
Status 
=  
true! %
,% &
Members 
=  !
new" %
List& *
<* +

DataAccess+ 5
.5 6
Account6 =
>= >
(> ?
)? @
,@ A
Last_update #
=$ %
DateTime& .
.. /
Now/ 2
} 
; 
try 
{ 
dataBase  
.  !
GameSet! (
.( )
Add) ,
(, -
newGame- 4
)4 5
;5 6
dataBase  
.  !
SaveChanges! ,
(, -
)- .
;. /
}   
catch!! 
(!! '
DbEntityValidationException!! 6
ex!!7 9
)!!9 :
{"" 
Logger## 
.## 
log## "
.##" #
Error### (
(##( )
ex##) +
)##+ ,
;##, -
return$$ 
-$$  
$num$$  !
;$$! "
}%% 
idgame'' 
='' 
dataBase'' %
.''% &
GameSet''& -
.''- .
Max''. 1
(''1 2
u''2 3
=>''4 6
u''7 8
.''8 9
Id''9 ;
)''; <
;''< =
}(( 
})) 
catch** 
(** 
	Exception** 
ex** 
)**  
{++ 
Logger,, 
.,, 
log,, 
.,, 
Error,,  
(,,  !
$str,,! 7
+,,8 9
ex,,: <
.,,< =
Message,,= D
),,D E
;,,E F
}-- 
var00 

listPlayer00 
=00 
new00  
List00! %
<00% &
String00& ,
>00, -
(00- .
)00. /
;00/ 0
listGamesOnline11 
.11 
Add11 
(11  
idgame11  &
,11& '

listPlayer11( 2
)112 3
;113 4
listGamesOnline22 
[22 
idgame22 "
]22" #
.22# $
Add22$ '
(22' (
user22( ,
)22, -
;22- .
Console33 
.33 
	WriteLine33 
(33 
$str33 B
,33B C
user33D H
,33H I
idgame33J P
,33P Q
DateTime33R Z
.33Z [
Now33[ ^
)33^ _
;33_ `
return44 
idgame44 
;44 
}66 	
public88 
int88 
JoinGame88 
(88 
string88 "
user88# '
)88' (
{99 	
foreach:: 
(:: 
KeyValuePair:: !
<::! "
int::" %
,::% &
List::' +
<::+ ,
String::, 2
>::2 3
>::3 4
games::5 :
in::; =
listGamesOnline::> M
)::M N
{::O P
if;; 
(;; 
games;; 
.;; 
Value;; 
.;; 
Count;; $
<;;% &
$num;;' (
);;( )
{;;* +
games<< 
.<< 
Value<< 
.<<  
Add<<  #
(<<# $
user<<$ (
)<<( )
;<<) *
Console== 
.== 
	WriteLine== %
(==% &
$str==& F
,==F G
user==G K
,==K L
games==M R
.==R S
Key==S V
,==V W
DateTime==X `
.==` a
Now==a d
)==d e
;==e f
return>> 
games>>  
.>>  !
Key>>! $
;>>$ %
}?? 
}@@ 
returnBB 
-BB 
$numBB 
;BB 
}CC 	
publicEE 
intEE 
	LeaveGameEE 
(EE 
stringEE "
userEE# '
,EE' (
intEE) ,
gameEE- 1
)EE1 2
{FF 	
intGG 
isDeleteGG 
=GG 
$numGG 
;GG 
varHH 
listGameUserNamesHH !
=HH" #
listGamesOnlineHH$ 3
[HH3 4
gameHH4 8
]HH8 9
;HH9 :
listGameUserNamesII 
.II 
RemoveII $
(II$ %
userII% )
)II) *
;II* +
ifJJ 
(JJ 
listGameUserNamesJJ !
.JJ! "
CountJJ" '
==JJ( *
$numJJ+ ,
)JJ, -
{KK 
listGamesOnlineLL 
.LL  
RemoveLL  &
(LL& '
gameLL' +
)LL+ ,
;LL, -
ConsoleMM 
.MM 
	WriteLineMM !
(MM! "
$strMM" ?
,MM? @
gameMMA E
,MME F
DateTimeMMG O
.MMO P
NowMMP S
)MMS T
;MMT U
}NN 
elseOO 
{PP 
	LeaveChatQQ 
(QQ 
userQQ 
,QQ 
gameQQ  $
)QQ$ %
;QQ% &
}RR 
returnSS 
isDeleteSS 
;SS 
}TT 	
}UU 
}VV ·
ùC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\HeartBeatManager.cs
	namespace 	
LismanService
 
{ 
public 

partial 
class 
LismanService &
:' (

IHeartBeat) 3
{		 
static

 

Dictionary

 
<

 
String

  
,

  !
IHeartBeatCallBack

" 4
>

4 5
logginsConnections

6 H
=

I J
new

K N

Dictionary

O Y
<

Y Z
string

Z `
,

` a
IHeartBeatCallBack

b t
>

t u
(

u v
)

v w
;

w x
public 
void 
NewLogin 
( 
string #
username$ ,
), -
{ 	
var 

connection 
= 
OperationContext -
.- .
Current. 5
.5 6
GetCallbackChannel6 H
<H I
IHeartBeatCallBackI [
>[ \
(\ ]
)] ^
;^ _
if 
( 
logginsConnections "
." #
ContainsKey# .
(. /
username/ 7
)7 8
)8 9
{ 
logginsConnections "
[" #
username# +
]+ ,
=- .

connection/ 9
;9 :
Console 
. 
	WriteLine !
(! "
$str" =
+> ?
username@ H
)H I
;I J
} 
else 
{ 
logginsConnections "
." #
Add# &
(& '
username' /
,/ 0

connection1 ;
); <
;< =
} 
} 	
public 
void 
ImLive 
( 
String !
username" *
)* +
{ 	
Console 
. 
	WriteLine 
( 
username &
+' (
$str) =
)= >
;> ?
try 
{ 
logginsConnections   "
[  " #
username  # +
]  + ,
.  , -
NotifyOk  - 5
(  5 6
)  6 7
;  7 8
}!! 
catch"" 
("" 
	Exception"" 
ex"" 
)""  
{## 
Logger$$ 
.$$ 
log$$ 
.$$ 
Info$$ 
($$  
$str$$  =
+$$> ?
username$$@ H
+$$I J
$str$$K N
+$$O P
ex$$Q S
.$$S T
Message$$T [
)$$[ \
;$$\ ]
Console%% 
.%% 
	WriteLine%% !
(%%! "
username%%" *
+%%+ ,
$str%%- B
)%%B C
;%%C D
QuitConnection&& 
(&& 
username&& '
)&&' (
;&&( )
}(( 
}++ 	
public-- 
static-- 
void-- 
QuitConnection-- )
(--) *
string--* 0
username--1 9
)--9 :
{.. 	
logginsConnections// 
.// 
Remove// %
(//% &
username//& .
)//. /
;/// 0
}00 	
}11 
}22 Ê
ôC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\IChatManager.cs
	namespace 	
LismanService
 
{ 
[ 
ServiceContract 
( 
CallbackContract %
=& '
typeof( .
(. / 
IChatManagerCallBack/ C
)C D
)D E
]E F
public 

	interface 
IChatManager !
{" #
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void		 
SendMessage		 
(		 
Message		  
message		! (
,		( )
int		* -
idgame		. 4
)		4 5
;		5 6
[

 	
OperationContract

	 
(

 
IsOneWay

 #
=

$ %
true

& *
)

* +
]

+ ,
void 
JoinChat 
( 
String 
user !
,! "
int# &
idgame' -
)- .
;. /
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
	LeaveChat 
( 
String 
user "
," #
int$ '
idgame( .
). /
;/ 0
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
	StartGame 
( 
String 
user "
," #
int$ '
idgame( .
). /
;/ 0
} 
[ 
ServiceContract 
] 
public 

	interface  
IChatManagerCallBack )
{* +
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyMessage 
( 
Message "
message# *
)* +
;+ ,
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyJoinedPlayer 
(  
String  &
user' +
)+ ,
;, -
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyNumberPlayers  
(  !
int! $
numberPlayers% 2
)2 3
;3 4
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyLeftPlayer 
( 
String $
user% )
)) *
;* +
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
InitGame 
( 
) 
; 
} 
[   
DataContract   
]   
public!! 

partial!! 
class!! 
Message!!  
{!!! "
["" 	

DataMember""	 
]"" 
public## 
string## 
Text## 
{## 
get##  
;##  !
set##" %
;##% &
}##' (
[$$ 	

DataMember$$	 
]$$ 
public%% 
String%% 
userName%% 
{%%  
get%%! $
;%%$ %
set%%& )
;%%) *
}%%+ ,
}&& 
}'' ‡
ôC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\IGameManager.cs
	namespace 	
LismanService
 
{ 
[ 
ServiceContract 
] 
public 

	interface 
IGameManager !
{" #
[		 	
OperationContract			 
]		 
int

 

CreateGame

 
(

 
String

 
user

 "
)

" #
;

# $
[ 	
OperationContract	 
] 
int 
JoinGame 
( 
String 
user  
)  !
;! "
[ 	
OperationContract	 
] 
int 
	LeaveGame 
( 
String 
user !
,! "
int# &
game' +
)+ ,
;, -
} 
} »
óC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\IHeartBeat.cs
	namespace 	
LismanService
 
{ 
[ 
ServiceContract 
( 
CallbackContract %
=& '
typeof( .
(. /
IHeartBeatCallBack/ A
)A B
)B C
]C D
public 

	interface 

IHeartBeat 
{ 
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NewLogin 
( 
string 
username %
)% &
;& '
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
ImLive 
( 
String 
username #
)# $
;$ %
} 
[ 
ServiceContract 
] 
public 

	interface 
IHeartBeatCallBack '
{ 
[ 
OperationContract 
( 
IsOneWay "
=# $
true% )
)) *
]* +
void 
NotifyOk 
( 
) 
; 
} 
} çM
†C:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\IMultiplayerManager.cs
	namespace 	
LismanService
 
{ 
[ 
ServiceContract 
( 
CallbackContract %
=& '
typeof( .
(. /'
IMultiplayerManagerCallBack/ J
)J K
)K L
]L M
public 

	interface 
IMultiplayerManager (
{) *
[		 	
OperationContract			 
(		 
IsOneWay		 #
=		$ %
true		& *
)		* +
]		+ ,
void

 
JoinMultiplayerGame

  
(

  !
String

! '
user

( ,
,

, -
int

. 1
idGame

2 8
)

8 9
;

9 :
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 

MoveLisman 
( 
LismanMovement &
movement' /
)/ 0
;0 1
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
RemovePower 
( 
String 
user  $
)$ %
;% &
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
ExitGame 
( 
int 
idGame  
,  !
int" %
colorLisman& 1
,1 2
int3 6
	positionX7 @
,@ A
intB E
	positionYF O
)O P
;P Q
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
Reconntection 
( 
String !

userLisman" ,
), -
;- .
} 
[ 
ServiceContract 
] 
public 

	interface '
IMultiplayerManagerCallBack 0
{1 2
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void #
PrintInformationPlayers $
($ %

Dictionary% /
</ 0
int0 3
,3 4
InformationPlayer5 F
>F G
listPlayersH S
)S T
;T U
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyColorPlayer 
( 
int "
colorPlayer# .
,. /
String0 6
user7 ;
); <
;< =
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyLismanMoved 
( 
int "
colorPlayer# .
,. /
int0 3
	positionX4 =
,= >
int? B
	positionYC L
,L M
StringM S
goToT X
)X Y
;Y Z
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void &
NotifyDisappearedPowerPill '
(' (
int( +
	positionX, 5
,5 6
int7 :
	positionY; D
)D E
;E F
[   	
OperationContract  	 
(   
IsOneWay   #
=  $ %
true  & *
)  * +
]  + ,
void!! 
NotifyUpdateScore!! 
(!! 
int!! "
colorPlayer!!# .
,!!. /
int!!0 3
scorePlayer!!4 ?
)!!? @
;!!@ A
["" 	
OperationContract""	 
("" 
IsOneWay"" #
=""$ %
true""& *
)""* +
]""+ ,
void## 
NotifyUpdateLifes## 
(## 
int## "
colorPlayer### .
,##. /
int##0 3

lifePlayer##4 >
)##> ?
;##? @
[$$ 	
OperationContract$$	 
($$ 
IsOneWay$$ #
=$$$ %
true$$& *
)$$* +
]$$+ ,
void%% 
NotifyPlayerIsDead%% 
(%%  
int%%  #
colorPlayer%%$ /
)%%/ 0
;%%0 1
[&& 	
OperationContract&&	 
(&& 
IsOneWay&& #
=&&$ %
true&&& *
)&&* +
]&&+ ,
void'' )
ReturnLismanToInitialPosition'' *
(''* +
int''+ .
colorPlayer''/ :
,'': ;
int''< ?
	positionX''@ I
,''I J
int''K N
	positionY''O X
)''X Y
;''Y Z
[(( 	
OperationContract((	 
((( 
IsOneWay(( #
=(($ %
true((& *
)((* +
]((+ ,
void)) 
UpdateLismanSpeed)) 
()) 
int)) "
speed))# (
,))( )
bool))* .
hasPower))/ 7
)))7 8
;))8 9
[** 	
OperationContract**	 
(** 
IsOneWay** #
=**$ %
true**& *
)*** +
]**+ ,
void++ 
NotifyEndGame++ 
(++ 
int++ 
colorLisman++ *
)++* +
;+++ ,
[,, 	
OperationContract,,	 
(,, 
IsOneWay,, #
=,,$ %
true,,& *
),,* +
],,+ ,
void-- !
NotifyLismanLeaveGame-- "
(--" #
int--# &
	colorGame--' 0
)--0 1
;--1 2
}// 
[11 
DataContract11 
]11 
public22 

class22 
Game22 
{33 
[44 	

DataMember44	 
]44 
public55 
int55 
[55 
,55 
]55 
gameMap55 
{55  
get55! $
;55$ %
set55& )
;55) *
}55+ ,
[66 	

DataMember66	 
]66 
public77 

Dictionary77 
<77 
int77 
,77 
InformationPlayer77 0
>770 1
lismanUsers772 =
{77> ?
get77@ C
;77C D
set77E H
;77H I
}77J K
}99 
[;; 
DataContract;; 
];; 
public<< 

class<< 
InformationPlayer<< "
{== 
[>> 	

DataMember>>	 
]>> 
public?? 
String?? 

userLisman??  
{??! "
get??# &
;??& '
set??( +
;??+ ,
}??- .
[@@ 	

DataMember@@	 
]@@ 
publicAA 
intAA 
lifesLismanAA 
{AA  
getAA! $
;AA$ %
setAA& )
;AA) *
}AA+ ,
[BB 	

DataMemberBB	 
]BB 
publicCC 
intCC 
scoreLismanCC 
{CC  
getCC! $
;CC$ %
setCC& )
;CC) *
}CC+ ,
[DD 	

DataMemberDD	 
]DD 
publicEE 
boolEE 
hasPowerEE 
{EE 
getEE "
;EE" #
setEE$ '
;EE' (
}EE) *
[FF 	

DataMemberFF	 
]FF 
publicGG 
boolGG 
isLiveGG 
{GG 
getGG  
;GG  !
setGG" %
;GG% &
}GG' (
[HH 	

DataMemberHH	 
]HH 
publicII 
StringII 
initialDirecctionII '
{II( )
getII* -
;II- .
setII/ 2
;II2 3
}II4 5
}JJ 
[LL 
DataContractLL 
]LL 
publicMM 

classMM 
LismanMovementMM 
{NN 
[OO 	

DataMemberOO	 
]OO 
publicPP 
intPP 
idGamePP 
{PP 
getPP 
;PP  
setPP! $
;PP$ %
}PP& '
[QQ 	

DataMemberQQ	 
]QQ 
publicRR 
intRR 
colorLismanRR 
{RR  
getRR! $
;RR$ %
setRR& )
;RR) *
}RR+ ,
[SS 	

DataMemberSS	 
]SS 
publicTT 
intTT 
initialPositionXTT #
{TT$ %
getTT& )
;TT) *
setTT+ .
;TT. /
}TT0 1
[UU 	

DataMemberUU	 
]UU 
publicVV 
intVV 
initialPositionYVV #
{VV$ %
getVV& )
;VV) *
setVV+ .
;VV. /
}VV0 1
[WW 	

DataMemberWW	 
]WW 
publicXX 
intXX 
finalPositionXXX !
{XX" #
getXX$ '
;XX' (
setXX) ,
;XX, -
}XX. /
[YY 	

DataMemberYY	 
]YY 
publicZZ 
intZZ 
finalPositionYZZ !
{ZZ" #
getZZ$ '
;ZZ' (
setZZ) ,
;ZZ, -
}ZZ. /
[[[ 	

DataMember[[	 
][[ 
public\\ 
String\\ 
goTo\\ 
{\\ 
get\\  
;\\  !
set\\" %
;\\% &
}\\' (
}]] 
}__ ¡8
öC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\LismanService.cs
	namespace 	
LismanService
 
{ 
[

 
ServiceBehavior

 
(

 
InstanceContextMode

 (
=

) *
InstanceContextMode

+ >
.

> ?

PerSession

? I
)

I J
]

J K
public 

partial 
class 
LismanService &
:' (
IAccountManager) 8
{9 :
public 
LismanService 
( 
) 
{ 
}  !
public 
int 

AddAccount 
( 
Account %
account& -
)- .
{ 	
try 
{ 
using 
( 
var 
dataBase #
=$ %
new& ) 
EntityModelContainer* >
(> ?
)? @
)@ A
{B C
var 

newAccount "
=# $
new% (

DataAccess) 3
.3 4
Account4 ;
{ 
User 
= 
account &
.& '
User' +
,+ ,
Password  
=! "
account# *
.* +
Password+ 3
,3 4
Registration_date )
=* +
account, 3
.3 4
Registration_date4 E
,E F
Key_confirmation (
=) *
account+ 2
.2 3
Key_confirmation3 C
,C D
Player 
=  
new! $

DataAccess% /
./ 0
Player0 6
{ 

First_name &
=' (
account) 0
.0 1
Player1 7
.7 8

First_name8 B
,B C
	Last_name %
=& '
account( /
./ 0
Player0 6
.6 7
	Last_name7 @
,@ A
Email !
=" #
account$ +
.+ ,
Player, 2
.2 3
Email3 8
} 
, 
Record 
=  
new! $

DataAccess% /
./ 0
Record0 6
{ 
Mult_best_score   +
=  , -
$num  . /
,  / 0
Mult_games_played!! -
=!!. /
$num!!0 1
,!!1 2
Mult_games_won"" *
=""+ ,
$num""- .
,"". /
Story_best_score## ,
=##- .
$num##/ 0
}$$ 
}%% 
;%% 
try&& 
{&& 
dataBase''  
.''  !

AccountSet''! +
.''+ ,
Add'', /
(''/ 0

newAccount''0 :
)'': ;
;''; <
return(( 
dataBase(( '
.((' (
SaveChanges((( 3
(((3 4
)((4 5
;((5 6
}** 
catch** 
(** '
DbEntityValidationException** 6
ex**7 9
)**9 :
{**; <
Logger++ 
.++ 
log++ "
.++" #
Error++# (
(++( )
ex++) +
)+++ ,
;++, -
return,, 
-,,  
$num,,  !
;,,! "
}-- 
}.. 
}// 
catch// 
(// 
	Exception// 
ex// 
)//  
{//! "
Logger00 
.00 
log00 
.00 
Error00  
(00  !
ex00! #
)00# $
;00$ %
return11 
-11 
$num11 
;11 
}22 
}33 	
public55 
Account55 
GetAccountById55 %
(55% &
int55& )
id55* ,
)55, -
{66 	
throw77 
new77 #
NotImplementedException77 -
(77- .
)77. /
;77/ 0
}88 	
public:: 
List:: 
<:: 
Account:: 
>:: 
GetAccounts:: (
(::( )
)::) *
{;; 	
throw<< 
new<< #
NotImplementedException<< -
(<<- .
)<<. /
;<</ 0
}== 	
public?? 
List?? 
<?? 
Record?? 
>?? 

GetRecords?? &
(??& '
)??' (
{@@ 	
tryAA 
{AA 
usingBB 
(BB 
varBB 
dataBaseBB #
=BB$ %
newBB& ) 
EntityModelContainerBB* >
(BB> ?
)BB? @
)BB@ A
{BBB C
returnCC 
dataBaseCC #
.CC# $
	RecordSetCC$ -
.CC- .
SelectCC. 4
(CC4 5
uCC5 6
=>CC7 9
newCC: =
RecordCC> D
{DD 
IdFF 
=FF 
uFF 
.FF 
IdFF !
,FF! "
Mult_best_scoreGG '
=GG( )
uGG* +
.GG+ ,
Mult_best_scoreGG, ;
,GG; <
Mult_games_playedHH )
=HH* +
uHH, -
.HH- .
Mult_games_playedHH. ?
,HH? @
Mult_games_wonII &
=II' (
uII) *
.II* +
Mult_games_wonII+ 9
,II9 :
Story_best_scoreJJ (
=JJ) *
uJJ+ ,
.JJ, -
Story_best_scoreJJ- =
,JJ= >
AccountKK 
=KK  !
newKK" %
AccountKK& -
{LL 
IdMM 
=MM  
uMM! "
.MM" #
IdMM# %
,MM% &
UserNN  
=NN! "
uNN# $
.NN$ %
AccountNN% ,
.NN, -
UserNN- 1
,NN1 2
PasswordOO $
=OO% &
uOO' (
.OO( )
AccountOO) 0
.OO0 1
PasswordOO1 9
,OO9 :
Registration_datePP -
=PP. /
uPP0 1
.PP1 2
AccountPP2 9
.PP9 :
Registration_datePP: K
,PPK L
Key_confirmationQQ ,
=QQ- .
uQQ/ 0
.QQ0 1
AccountQQ1 8
.QQ8 9
Key_confirmationQQ9 I
}RR 
}TT 
)TT 
.TT 
OrderByDescendingTT (
(TT( )
xTT) *
=>TT+ -
xTT. /
.TT/ 0
Story_best_scoreTT0 @
)TT@ A
.TTA B
ToListTTB H
(TTH I
)TTI J
;TTJ K
}UU 
}VV 
catchVV 
(VV 
	ExceptionVV 
exVV 
)VV  
{VV! "
LoggerWW 
.WW 
logWW 
.WW 
ErrorWW  
(WW  !
exWW! #
)WW# $
;WW$ %
returnXX 
nullXX 
;XX 
}YY 
}ZZ 	
public\\ 
void\\ 
test\\ 
(\\ 
string\\ 
message\\  '
)\\' (
{]] 	
throw^^ 
new^^ #
NotImplementedException^^ -
(^^- .
)^^. /
;^^/ 0
}__ 	
}`` 
}aa ñ5
úC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\IAccountManager.cs
	namespace 	
LismanService
 
{ 
[		 
ServiceContract		 
]		 
public

 

	interface

 
IAccountManager

 $
{

% &
[ 	
OperationContract	 
] 
int 

AddAccount 
( 
Account 
account &
)& '
;' (
[ 	
OperationContract	 
] 
List 
< 
Account 
> 
GetAccounts !
(! "
)" #
;# $
[ 	
OperationContract	 
] 
Account 
GetAccountById 
( 
int "
id# %
)% &
;& '
[ 	
OperationContract	 
] 
List 
< 
Record 
> 

GetRecords 
(  
)  !
;! "
} 
[ 
ServiceContract 
] 
public 

	interface 
ILoginManager "
{# $
[ 	
OperationContract	 
] 
Account 
LoginAccount 
( 
String #
user$ (
,( )
String* 0
password1 9
)9 :
;: ;
[ 	
OperationContract	 
] 
int 
LogoutAccount 
( 
String  
user! %
)% &
;& '
[ 	
OperationContract	 
] 
bool 
UserNameExists 
( 
String "
username# +
)+ ,
;, -
[   	
OperationContract  	 
]   
bool!! 
EmailExists!! 
(!! 
String!! 
emailAdress!!  +
)!!+ ,
;!!, -
[## 	
OperationContract##	 
]## 
bool$$ 
UserInSession$$ 
($$ 
String$$ !
userName$$" *
)$$* +
;$$+ ,
}&& 
[)) 
DataContract)) 
])) 
public** 

partial** 
class** 
Account**  
{**! "
[++ 	

DataMember++	 
]++ 
public,, 
int,, 
Id,, 
{,, 
get,, 
;,, 
set,,  
;,,  !
},," #
[-- 	

DataMember--	 
]-- 
public.. 
string.. 
User.. 
{.. 
get..  
;..  !
set.." %
;..% &
}..' (
[// 	

DataMember//	 
]// 
public00 
string00 
Password00 
{00  
get00! $
;00$ %
set00& )
;00) *
}00+ ,
[11 	

DataMember11	 
]11 
public22 
string22 
Key_confirmation22 &
{22' (
get22) ,
;22, -
set22. 1
;221 2
}223 4
[33 	

DataMember33	 
]33 
public44 
string44 
Registration_date44 '
{44( )
get44* -
;44- .
set44/ 2
;442 3
}444 5
[55 	

DataMember55	 
]55 
public66 
virtual66 
Player66 
Player66 $
{66% &
get66' *
;66* +
set66, /
;66/ 0
}661 2
[77 	

DataMember77	 
]77 
public88 
virtual88 
Record88 
Record88 $
{88% &
get88' *
;88* +
set88, /
;88/ 0
}881 2
}99 
public:: 

partial:: 
class:: 
Player:: 
{::  !
[;; 	

DataMember;;	 
];; 
public<< 
int<< 
Id<< 
{<< 
get<< 
;<< 
set<<  
;<<  !
}<<" #
[== 	

DataMember==	 
]== 
public>> 
string>> 

First_name>>  
{>>! "
get>># &
;>>& '
set>>( +
;>>+ ,
}>>- .
[?? 	

DataMember??	 
]?? 
public@@ 
string@@ 
	Last_name@@ 
{@@  !
get@@" %
;@@% &
set@@' *
;@@* +
}@@, -
[AA 	

DataMemberAA	 
]AA 
publicBB 
stringBB 
EmailBB 
{BB 
getBB !
;BB! "
setBB# &
;BB& '
}BB( )
[CC 	

DataMemberCC	 
]CC 
publicDD 
virtualDD 
AccountDD 
AccountDD &
{DD' (
getDD) ,
;DD, -
setDD. 1
;DD1 2
}DD3 4
}EE 
publicGG 

partialGG 
classGG 
RecordGG 
{GG  !
[HH 	

DataMemberHH	 
]HH 
publicII 
intII 
IdII 
{II 
getII 
;II 
setII  
;II  !
}II" #
[JJ 	

DataMemberJJ	 
]JJ 
publicKK 
NullableKK 
<KK 
intKK 
>KK 
Mult_best_scoreKK ,
{KK- .
getKK/ 2
;KK2 3
setKK4 7
;KK7 8
}KK9 :
[LL 	

DataMemberLL	 
]LL 
publicMM 
NullableMM 
<MM 
intMM 
>MM 
Story_best_scoreMM -
{MM. /
getMM0 3
;MM3 4
setMM5 8
;MM8 9
}MM: ;
[NN 	

DataMemberNN	 
]NN 
publicOO 
NullableOO 
<OO 
intOO 
>OO 
Mult_games_playedOO .
{OO/ 0
getOO1 4
;OO4 5
setOO6 9
;OO9 :
}OO; <
[PP 	

DataMemberPP	 
]PP 
publicQQ 
NullableQQ 
<QQ 
intQQ 
>QQ 
Mult_games_wonQQ +
{QQ, -
getQQ. 1
;QQ1 2
setQQ3 6
;QQ6 7
}QQ8 9
[RR 	

DataMemberRR	 
]RR 
publicSS 
virtualSS 
AccountSS 
AccountSS &
{SS' (
getSS) ,
;SS, -
setSS. 1
;SS1 2
}SS3 4
}TT 
}UU Œ
ìC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\Logger.cs
	namespace 	
LismanService
 
{ 
public 

static 
class 
Logger 
{  
public 
static 
readonly 
log4net &
.& '
ILog' +
log, /
=0 1
log4net2 9
.9 :

LogManager: D
.D E
	GetLoggerE N
(N O
SystemO U
.U V

ReflectionV `
.` a

MethodBasea k
.k l
GetCurrentMethodl |
(| }
)} ~
.~ 
DeclaringType	 å
)
å ç
;
ç é
} 
} ‚K
ôC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\LoginManager.cs
	namespace 	
LismanService
 
{ 
public 

partial 
class 
LismanService &
:' (
ILoginManager) 6
{7 8
public 
bool 
EmailExists 
(  
string  &
emailAdress' 2
)2 3
{ 	
try 
{ 
using 
( 
var 
dataBase #
=$ %
new& ) 
EntityModelContainer* >
(> ?
)? @
)@ A
{B C
int 
exists 
=  
dataBase! )
.) *
	PlayerSet* 3
.3 4
Where4 9
(9 :
u: ;
=>< >
u? @
.@ A
EmailA F
==G I
emailAdressJ U
)U V
.V W
CountW \
(\ ]
)] ^
;^ _
if 
( 
exists 
>  
$num! "
)" #
{$ %
return 
true #
;# $
} 
} 
} 
catch 
( 
	Exception 
ex !
)! "
{# $
Logger 
. 
log 
. 
Error  
(  !
ex! #
)# $
;$ %
} 
return 
false 
; 
} 	
public 
Account 
LoginAccount #
(# $
string$ *
user+ /
,/ 0
string1 7
password8 @
)@ A
{ 	
var 

newAccount 
= 
new  
Account! (
(( )
)) *
;* +
try 
{ 
using 
( 
var 
dataBase #
=$ %
new& ) 
EntityModelContainer* >
(> ?
)? @
)@ A
{B C
int 
exists 
=  
dataBase! )
.) *

AccountSet* 4
.4 5
Where5 :
(: ;
u; <
=>= ?
u@ A
.A B
UserB F
==G I
userJ N
&&O Q
uR S
.S T
PasswordT \
==] _
password` h
)h i
.i j
Countj o
(o p
)p q
;q r
if 
( 
exists 
>  
$num! "
)" #
{$ %

newAccount   "
=  # $
dataBase  % -
.  - .

AccountSet  . 8
.  8 9
Where  9 >
(  > ?
u  ? @
=>  A C
u  D E
.  E F
User  F J
==  K M
user  N R
&&  S U
u  V W
.  W X
Password  X `
==  a c
password  d l
)  l m
.  m n
Select  n t
(  t u
u  u v
=>  w y
new  z }
Account	  ~ Ö
{!! 
Id"" 
=""  
u""! "
.""" #
Id""# %
,""% &
User##  
=##! "
u### $
.##$ %
User##% )
,##) *
Password$$ $
=$$% &
u$$' (
.$$( )
Password$$) 1
,$$1 2
Registration_date%% -
=%%. /
u%%0 1
.%%1 2
Registration_date%%2 C
,%%C D
Key_confirmation&& ,
=&&- .
u&&/ 0
.&&0 1
Key_confirmation&&1 A
}'' 
)'' 
.'' 
FirstOrDefault'' )
('') *
)''* +
;''+ ,
if(( 
((( 

newAccount(( %
!=((& (
null(() -
)((- .
{((/ 0
if)) 
())  
!))  !
logginsConnections))! 3
.))3 4
ContainsKey))4 ?
())? @
user))@ D
)))D E
)))E F
{))G H
logginsConnections**  2
.**2 3
Add**3 6
(**6 7
user**7 ;
,**; <
null**= A
)**A B
;**B C
}++ 
Console,, #
.,,# $
	WriteLine,,$ -
(,,- .
$str,,. K
,,,K L

newAccount,,M W
.,,W X
User,,X \
,,,\ ]
DateTime,,^ f
.,,f g
Now,,g j
),,j k
;,,k l
}.. 
return// 

newAccount// )
;//) *
}00 
else00 
{00 

newAccount11 "
.11" #
Id11# %
=11& '
$num11( )
;11) *
return22 

newAccount22 )
;22) *
}33 
}44 
}55 
catch55 
(55 
	Exception55 
ex55 !
)55! "
{55# $
Logger66 
.66 
log66 
.66 
Error66  
(66  !
ex66! #
.66# $
Message66$ +
)66+ ,
;66, -

newAccount77 
.77 
Id77 
=77 
-77  !
$num77! "
;77" #
return88 

newAccount88 !
;88! "
}99 
}:: 	
public<< 
int<< 
LogoutAccount<<  
(<<  !
string<<! '
user<<( ,
)<<, -
{== 	
if>> 
(>> !
connectionChatService>> %
.>>% &
ContainsKey>>& 1
(>>1 2
user>>2 6
)>>6 7
)>>7 8
{>>9 :!
connectionChatService?? %
.??% &
Remove??& ,
(??, -
user??- 1
)??1 2
;??2 3
}@@ 
returnAA 
$numAA 
;AA 
}BB 	
publicDD 
boolDD 
UserNameExistsDD "
(DD" #
stringDD# )
usernameDD* 2
)DD2 3
{EE 	
tryFF 
{FF 
usingGG 
(GG 
varGG 
dataBaseGG #
=GG$ %
newGG& ) 
EntityModelContainerGG* >
(GG> ?
)GG? @
)GG@ A
{GGB C
intHH 
existsHH 
=HH  
dataBaseHH! )
.HH) *

AccountSetHH* 4
.HH4 5
WhereHH5 :
(HH: ;
uHH; <
=>HH= ?
uHH@ A
.HHA B
UserHHB F
==HHG I
usernameHHJ R
)HHR S
.HHS T
CountHHT Y
(HHY Z
)HHZ [
;HH[ \
ifII 
(II 
existsII 
>II  
$numII! "
)II" #
{II$ %
returnJJ 
trueJJ #
;JJ# $
}KK 
}LL 
}MM 
catchMM 
(MM 
	ExceptionMM 
exMM !
)MM! "
{MM# $
LoggerNN 
.NN 
logNN 
.NN 
ErrorNN  
(NN  !
exNN! #
)NN# $
;NN$ %
}OO 
returnPP 
falsePP 
;PP 
}QQ 	
publicTT 
AccountTT 
GetAccountByUserTT '
(TT' (
stringTT( .
userTT/ 3
)TT3 4
{UU 	
tryVV 
{VV 
usingWW 
(WW 
varWW 
dataBaseWW #
=WW$ %
newWW& ) 
EntityModelContainerWW* >
(WW> ?
)WW? @
)WW@ A
{WWB C
returnXX 
dataBaseXX #
.XX# $

AccountSetXX$ .
.XX. /
WhereXX/ 4
(XX4 5
uXX5 6
=>XX7 9
uXX: ;
.XX; <
UserXX< @
==XXA C
userXXD H
)XXH I
.XXI J
SelectXXJ P
(XXP Q
uXXQ R
=>XXS U
newXXV Y
AccountXXZ a
{YY 
IdZZ 
=ZZ 
uZZ 
.ZZ 
IdZZ !
,ZZ! "
User[[ 
=[[ 
u[[  
.[[  !
User[[! %
,[[% &
Password\\  
=\\! "
u\\# $
.\\$ %
Password\\% -
,\\- .
Registration_date]] )
=]]* +
u]], -
.]]- .
Registration_date]]. ?
,]]? @
}__ 
)__ 
.__ 
FirstOrDefault__ %
(__% &
)__& '
;__' (
}`` 
}aa 
catchaa 
(aa 
	Exceptionaa 
exaa 
)aa  
{aa! "
Loggerbb 
.bb 
logbb 
.bb 
Errorbb  
(bb  !
exbb! #
)bb# $
;bb$ %
returncc 
nullcc 
;cc 
}dd 
}ee 	
publicgg 
boolgg 
UserInSessiongg !
(gg! "
Stringgg" (
userNamegg) 1
)gg1 2
{hh 	
boolii 
inSesionii 
=ii 
falseii  
;ii  !
ifjj 
(jj 
logginsConnectionsjj "
.jj" #
ContainsKeyjj# .
(jj. /
userNamejj/ 7
)jj7 8
)jj8 9
{kk 
inSesionll 
=ll 
truell 
;ll  
}mm 
returnoo 
inSesionoo 
;oo 
}pp 	
}qq 
}rr Åˆ
üC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\MultiplayerManager.cs
	namespace		 	
LismanService		
 
{

 
public 

partial 
class 
LismanService &
:' (
IMultiplayerManager) <
{ 
static 
int 
[ 
, 
] 
GAMEMAP 
= 
new  #
int$ '
[' (
$num( *
,* +
$num, .
]. /
;/ 0
const 
int 
EMPTYBOX 
= 
$num 
; 
const 
int 
	POWERPILL 
= 
$num 
;  
const 
int 
LISMANYELLOW 
=  
$num! "
;" #
const 
int 
	LISMANRED 
= 
$num 
;  
const 
int 

LISMANBLUE 
= 
$num  
;  !
const 
int 
LISMANGREEN 
= 
$num  !
;! "
const 
int 
GHOST 
= 
$num 
; 
int 
[ 
] #
COORDINATESLISMANYELLOW %
=& '
new( +
int, /
[/ 0
$num0 1
]1 2
{3 4
$num5 6
,6 7
$num8 9
}: ;
;; <
int 
[ 
]  
COORDINATESLISMANRED "
=# $
new% (
int) ,
[, -
$num- .
]. /
{0 1
$num2 4
,4 5
$num6 7
}8 9
;9 :
int 
[ 
] !
COORDINATESLISMANBLUE #
=$ %
new& )
int* -
[- .
$num. /
]/ 0
{1 2
$num3 4
,4 5
$num6 8
}9 :
;: ;
int 
[ 
] "
COORDINATESLISMANGREEN $
=% &
new' *
int+ .
[. /
$num/ 0
]0 1
{2 3
$num4 6
,6 7
$num8 :
}; <
;< =
const 
int 
POINTSPOWERPILL !
=" #
$num$ '
;' (
const 
int 
POINTSEATLISMAN !
=" #
$num$ '
;' (
const 
int 
SPEEDNORMAL 
= 
$num  #
;# $
const 
int 
SPEEDPOWERFUL 
=  !
$num" %
;% &
String"" 
parentDirectory"" 
=""  
	Directory""! *
.""* +
	GetParent""+ 4
(""4 5
	Directory""5 >
.""> ?
GetCurrentDirectory""? R
(""R S
)""S T
)""T U
.""U V
Parent""V \
.""\ ]
FullName""] e
;""e f
static%% 

Dictionary%% 
<%% 
String%%  
,%%  !'
IMultiplayerManagerCallBack%%" =
>%%= >!
connectionGameService%%? T
=%%U V
new%%W Z

Dictionary%%[ e
<%%e f
String%%f l
,%%l m(
IMultiplayerManagerCallBack	%%n â
>
%%â ä
(
%%ä ã
)
%%ã å
;
%%å ç
static&& 

Dictionary&& 
<&& 
int&& 
,&& 
Game&& #
>&&# $&
multiplayerGameInformation&&% ?
=&&@ A
new&&B E

Dictionary&&F P
<&&P Q
int&&Q T
,&&T U
Game&&V Z
>&&Z [
(&&[ \
)&&\ ]
;&&] ^
public** 
void** 
JoinMultiplayerGame** '
(**' (
string**( .
user**/ 3
,**3 4
int**5 8
idGame**9 ?
)**? @
{++ 	
var,, 

connection,, 
=,, 
OperationContext,, -
.,,- .
Current,,. 5
.,,5 6
GetCallbackChannel,,6 H
<,,H I'
IMultiplayerManagerCallBack,,I d
>,,d e
(,,e f
),,f g
;,,g h
if-- 
(-- !
connectionGameService-- %
.--% &
ContainsKey--& 1
(--1 2
user--2 6
)--6 7
)--7 8
{.. !
connectionGameService// %
[//% &
user//& *
]//* +
=//, -

connection//. 8
;//8 9
}00 
else11 
{22 !
connectionGameService33 %
.33% &
Add33& )
(33) *
user33* .
,33. /

connection330 :
)33: ;
;33; <
}44 
try55 
{66 !
connectionGameService77 %
[77% &
user77& *
]77* +
.77+ ,
NotifyColorPlayer77, =
(77= > 
GetColorLismanByUser77> R
(77R S
idGame77S Y
,77Y Z
user77[ _
)77_ `
,77` a
user77b f
)77f g
;77g h!
connectionGameService88 %
[88% &
user88& *
]88* +
.88+ ,#
PrintInformationPlayers88, C
(88C D&
multiplayerGameInformation88D ^
[88^ _
idGame88_ e
]88e f
.88f g
lismanUsers88g r
)88r s
;88s t
SaveLastUpdate:: 
(:: 
idGame:: %
)::% &
;::& '
};; 
catch;; 
(;; "
CommunicationException;; )
ex;;* ,
);;, -
{<< 
Logger== 
.== 
log== 
.== 
Error==  
(==  !
$str==! 8
+==9 :
ex==; =
)=== >
;==> ?
}>> 
}@@ 	
publicBB 
intBB  
GetColorLismanByUserBB '
(BB' (
intBB( +
idGameBB, 2
,BB2 3
StringBB4 :
userBB; ?
)BB? @
{CC 	
intDD 
colorLismanDD 
=DD 
$numDD 
;DD  
foreachEE 
(EE 
KeyValuePairEE  
<EE  !
intEE! $
,EE$ %
InformationPlayerEE& 7
>EE7 8
	listUsersEE9 B
inEEC E&
multiplayerGameInformationEEF `
[EE` a
idGameEEa g
]EEg h
.EEh i
lismanUsersEEi t
)EEt u
{FF 
ifGG 
(GG 
	listUsersGG 
.GG 
ValueGG "
.GG" #

userLismanGG# -
==GG. 0
userGG1 5
)GG5 6
{HH 
colorLismanII 
=II  !
	listUsersII" +
.II+ ,
KeyII, /
;II/ 0
}JJ 
}KK 
returnLL 
colorLismanLL 
;LL 
}MM 	
publicPP 
voidPP 

MoveLismanPP 
(PP 
LismanMovementPP -
movementPP. 6
)PP6 7
{QQ 	
intRR 
valueBoxRR 
=RR 
GetValueBoxRR &
(RR& '
movementRR' /
.RR/ 0
idGameRR0 6
,RR6 7
movementRR8 @
.RR@ A
finalPositionXRRA O
,RRO P
movementRRQ Y
.RRY Z
finalPositionYRRZ h
)RRh i
;RRi j
switchSS 
(SS 
valueBoxSS 
)SS 
{TT 
caseUU 
EMPTYBOXUU 
:UU #
MoveLismanToNewPositionVV +
(VV+ ,
movementVV, 4
)VV4 5
;VV5 6
breakWW 
;WW 
caseXX 
	POWERPILLXX 
:XX 
EatPowerPillYY  
(YY  !
movementYY! )
)YY) *
;YY* +
breakZZ 
;ZZ 
default[[ 
:[[ 
EatLismanEnemy\\ "
(\\" #
movement\\# +
,\\+ ,
valueBox\\- 5
)\\5 6
;\\6 7
break]] 
;]] 
}__ 
}`` 	
privatecc 
voidcc 
EatLismanEnemycc #
(cc# $
LismanMovementcc$ 2
movementcc3 ;
,cc; <
intcc= @
colorLismanEnemyccA Q
)ccQ R
{dd 	
intee 
scoreLismanee 
=ee 
UpdateScoreee )
(ee) *
movementee* 2
.ee2 3
idGameee3 9
,ee9 :
movementee; C
.eeC D
colorLismaneeD O
,eeO P
POINTSEATLISMANeeQ `
)ee` a
;eea b
intff 
lifesLismanEnemyff  
=ff! "
UpdateSubtractLifesff# 6
(ff6 7
movementff7 ?
.ff? @
idGameff@ F
,ffF G
colorLismanEnemyffH X
)ffX Y
;ffY Z
UpdateGameMapgg 
(gg 
movementgg "
.gg" #
idGamegg# )
,gg) *
EMPTYBOXgg+ 3
,gg3 4
movementgg5 =
.gg= >
initialPositionXgg> N
,ggN O
movementggP X
.ggX Y
initialPositionYggY i
)ggi j
;ggj k
UpdateGameMaphh 
(hh 
movementhh "
.hh" #
idGamehh# )
,hh) *
movementhh+ 3
.hh3 4
colorLismanhh4 ?
,hh? @
movementhhA I
.hhI J
finalPositionXhhJ X
,hhX Y
movementhhZ b
.hhb c
finalPositionYhhc q
)hhq r
;hhr s
ifjj 
(jj 
PlayerWillDeadjj 
(jj 
movementjj '
.jj' (
idGamejj( .
,jj. /
colorLismanEnemyjj0 @
)jj@ A
)jjA B
{kk 
ifll 
(ll 
GameWillEndll 
(ll  
movementll  (
.ll( )
idGamell) /
)ll/ 0
)ll0 1
{mm 

FinishGamenn 
(nn 
movementnn '
,nn' (
colorLismanEnemynn) 9
,nn9 :
scoreLismannn; F
,nnF G
lifesLismanEnemynnH X
)nnX Y
;nnY Z
}oo 
elsepp 
{qq 

KillLismanrr 
(rr 
movementrr '
,rr' (
colorLismanEnemyrr) 9
,rr9 :
scoreLismanrr; F
,rrF G
lifesLismanEnemyrrH X
)rrX Y
;rrY Z
}ss 
}tt 
elseuu 
{vv 
RespawnLismanww 
(ww 
movementww &
,ww& '
colorLismanEnemyww( 8
,ww8 9
scoreLismanww: E
,wwE F
lifesLismanEnemywwG W
)wwW X
;wwX Y
}xx 
}yy 	
public{{ 
void{{ 

KillLisman{{ 
({{ 
LismanMovement{{ -
movement{{. 6
,{{6 7
int{{8 ;
colorLismanEnemy{{< L
,{{L M
int{{N Q
scoreLisman{{R ]
,{{] ^
int{{_ b
lifesLismanEnemy{{c s
){{s t
{|| 	
foreach}} 
(}} 
KeyValuePair}} !
<}}! "
int}}" %
,}}% &
InformationPlayer}}' 8
>}}8 9
player}}: @
in}}A C&
multiplayerGameInformation}}D ^
[}}^ _
movement}}_ g
.}}g h
idGame}}h n
]}}n o
.}}o p
lismanUsers}}p {
)}}{ |
{~~ 
if 
( 
player 
. 
Value  
.  !
isLive! '
)' (
{
ÄÄ 
try
ÅÅ 
{
ÇÇ #
connectionGameService
ÉÉ -
[
ÉÉ- .
player
ÉÉ. 4
.
ÉÉ4 5
Value
ÉÉ5 :
.
ÉÉ: ;

userLisman
ÉÉ; E
]
ÉÉE F
.
ÉÉF G 
NotifyPlayerIsDead
ÉÉG Y
(
ÉÉY Z
colorLismanEnemy
ÉÉZ j
)
ÉÉj k
;
ÉÉk l#
connectionGameService
ÑÑ -
[
ÑÑ- .
player
ÑÑ. 4
.
ÑÑ4 5
Value
ÑÑ5 :
.
ÑÑ: ;

userLisman
ÑÑ; E
]
ÑÑE F
.
ÑÑF G
NotifyLismanMoved
ÑÑG X
(
ÑÑX Y
movement
ÑÑY a
.
ÑÑa b
colorLisman
ÑÑb m
,
ÑÑm n
movement
ÑÑo w
.
ÑÑw x
finalPositionXÑÑx Ü
,ÑÑÜ á
movementÑÑà ê
.ÑÑê ë
finalPositionYÑÑë ü
,ÑÑü †
movementÑÑ° ©
.ÑÑ© ™
goToÑÑ™ Æ
)ÑÑÆ Ø
;ÑÑØ ∞#
connectionGameService
ÖÖ -
[
ÖÖ- .
player
ÖÖ. 4
.
ÖÖ4 5
Value
ÖÖ5 :
.
ÖÖ: ;

userLisman
ÖÖ; E
]
ÖÖE F
.
ÖÖF G
NotifyUpdateScore
ÖÖG X
(
ÖÖX Y
movement
ÖÖY a
.
ÖÖa b
colorLisman
ÖÖb m
,
ÖÖm n
scoreLisman
ÖÖo z
)
ÖÖz {
;
ÖÖ{ |#
connectionGameService
ÜÜ -
[
ÜÜ- .
player
ÜÜ. 4
.
ÜÜ4 5
Value
ÜÜ5 :
.
ÜÜ: ;

userLisman
ÜÜ; E
]
ÜÜE F
.
ÜÜF G
NotifyUpdateLifes
ÜÜG X
(
ÜÜX Y
colorLismanEnemy
ÜÜY i
,
ÜÜi j
lifesLismanEnemy
ÜÜk {
)
ÜÜ{ |
;
ÜÜ| }
}
áá 
catch
àà 
(
àà $
CommunicationException
àà 1
e
àà2 3
)
àà3 4
{
ââ 
Console
ää 
.
ää  
	WriteLine
ää  )
(
ää) *
$str
ää* P
+
ääQ R
player
ääS Y
.
ääY Z
Value
ääZ _
.
ää_ `

userLisman
ää` j
+
ääk l
$str
ääm x
+
ääy z
e
ää{ |
.
ää| }
Messageää} Ñ
)ääÑ Ö
;ääÖ Ü
}
ãã 
}
åå 
}
çç (
multiplayerGameInformation
éé &
[
éé& '
movement
éé' /
.
éé/ 0
idGame
éé0 6
]
éé6 7
.
éé7 8
lismanUsers
éé8 C
[
ééC D
colorLismanEnemy
ééD T
]
ééT U
.
ééU V
isLive
ééV \
=
éé] ^
false
éé_ d
;
ééd e
}
èè 	
public
êê 
void
êê 
RespawnLisman
êê !
(
êê! "
LismanMovement
êê" 0
movement
êê1 9
,
êê9 :
int
êê; >
colorLismanEnemy
êê? O
,
êêO P
int
êêQ T
scoreLisman
êêU `
,
êê` a
int
êêb e
lifesLismanEnemy
êêf v
)
êêv w
{
ëë 	
String
íí 
userLismanEnemy
íí "
=
íí# $(
multiplayerGameInformation
íí% ?
[
íí? @
movement
íí@ H
.
ííH I
idGame
ííI O
]
ííO P
.
ííP Q
lismanUsers
ííQ \
[
íí\ ]
colorLismanEnemy
íí] m
]
íím n
.
íín o

userLisman
íío y
;
ííy z
int
ìì 
[
ìì 
]
ìì (
positionInitialLismanEnemy
ìì ,
=
ìì- .'
GetInitialPositionsLisman
ìì/ H
(
ììH I
colorLismanEnemy
ììI Y
)
ììY Z
;
ììZ [
UpdateGameMap
îî 
(
îî 
movement
îî "
.
îî" #
idGame
îî# )
,
îî) *
colorLismanEnemy
îî+ ;
,
îî; <(
positionInitialLismanEnemy
îî= W
[
îîW X
$num
îîX Y
]
îîY Z
,
îîZ [(
positionInitialLismanEnemy
îî\ v
[
îîv w
$num
îîw x
]
îîx y
)
îîy z
;
îîz {
try
ññ 
{
óó #
connectionGameService
òò %
[
òò% &
userLismanEnemy
òò& 5
]
òò5 6
.
òò6 7+
ReturnLismanToInitialPosition
òò7 T
(
òòT U
colorLismanEnemy
òòU e
,
òòe f)
positionInitialLismanEnemyòòg Å
[òòÅ Ç
$numòòÇ É
]òòÉ Ñ
,òòÑ Ö*
positionInitialLismanEnemyòòÜ †
[òò† °
$numòò° ¢
]òò¢ £
)òò£ §
;òò§ •
}
ôô 
catch
öö 
(
öö $
CommunicationException
öö )
e
öö* +
)
öö+ ,
{
õõ 
Console
úú 
.
úú 
	WriteLine
úú !
(
úú! "
$str
úú" H
+
úúI J
userLismanEnemy
úúK Z
+
úú[ \
$str
úú] h
+
úúi j
e
úúk l
.
úúl m
Message
úúm t
)
úút u
;
úúu v
}
ùù 
String
ûû )
initialDirectionLismanEnemy
ûû .
=
ûû/ 0(
multiplayerGameInformation
ûû1 K
[
ûûK L
movement
ûûL T
.
ûûT U
idGame
ûûU [
]
ûû[ \
.
ûû\ ]
lismanUsers
ûû] h
[
ûûh i
colorLismanEnemy
ûûi y
]
ûûy z
.
ûûz { 
initialDirecctionûû{ å
;ûûå ç
foreach
üü 
(
üü 
KeyValuePair
üü !
<
üü! "
int
üü" %
,
üü% &
InformationPlayer
üü' 8
>
üü8 9
player
üü: @
in
üüA C(
multiplayerGameInformation
üüD ^
[
üü^ _
movement
üü_ g
.
üüg h
idGame
üüh n
]
üün o
.
üüo p
lismanUsers
üüp {
)
üü{ |
{
†† 
if
°° 
(
°° 
player
°° 
.
°° 
Value
°° 
.
°°  
isLive
°°  &
)
°°& '
{
¢¢ 
try
££ 
{
§§ #
connectionGameService
•• -
[
••- .
player
••. 4
.
••4 5
Value
••5 :
.
••: ;

userLisman
••; E
]
••E F
.
••F G
NotifyLismanMoved
••G X
(
••X Y
movement
••Y a
.
••a b
colorLisman
••b m
,
••m n
movement
••o w
.
••w x
finalPositionX••x Ü
,••Ü á
movement••à ê
.••ê ë
finalPositionY••ë ü
,••ü †
movement••° ©
.••© ™
goTo••™ Æ
)••Æ Ø
;••Ø ∞#
connectionGameService
¶¶ -
[
¶¶- .
player
¶¶. 4
.
¶¶4 5
Value
¶¶5 :
.
¶¶: ;

userLisman
¶¶; E
]
¶¶E F
.
¶¶F G
NotifyLismanMoved
¶¶G X
(
¶¶X Y
colorLismanEnemy
¶¶Y i
,
¶¶i j)
positionInitialLismanEnemy¶¶k Ö
[¶¶Ö Ü
$num¶¶Ü á
]¶¶á à
,¶¶à â*
positionInitialLismanEnemy¶¶ä §
[¶¶§ •
$num¶¶• ¶
]¶¶¶ ß
,¶¶ß ®)
initialDirectionLismanEnemy
ßß 7
)
ßß7 8
;
ßß8 9#
connectionGameService
©© -
[
©©- .
player
©©. 4
.
©©4 5
Value
©©5 :
.
©©: ;

userLisman
©©; E
]
©©E F
.
©©F G
NotifyUpdateScore
©©G X
(
©©X Y
movement
©©Y a
.
©©a b
colorLisman
©©b m
,
©©m n
scoreLisman
©©o z
)
©©z {
;
©©{ |#
connectionGameService
™™ -
[
™™- .
player
™™. 4
.
™™4 5
Value
™™5 :
.
™™: ;

userLisman
™™; E
]
™™E F
.
™™F G
NotifyUpdateLifes
™™G X
(
™™X Y
colorLismanEnemy
™™Y i
,
™™i j
lifesLismanEnemy
™™k {
)
™™{ |
;
™™| }
}
´´ 
catch
¨¨ 
(
¨¨ $
CommunicationException
¨¨ 1
e
¨¨2 3
)
¨¨3 4
{
≠≠ 
Console
ÆÆ 
.
ÆÆ  
	WriteLine
ÆÆ  )
(
ÆÆ) *
$str
ÆÆ* P
+
ÆÆQ R
player
ÆÆS Y
.
ÆÆY Z
Value
ÆÆZ _
.
ÆÆ_ `

userLisman
ÆÆ` j
+
ÆÆk l
$str
ÆÆm x
+
ÆÆy z
e
ÆÆ{ |
.
ÆÆ| }
MessageÆÆ} Ñ
)ÆÆÑ Ö
;ÆÆÖ Ü
}
ØØ 
}
∞∞ 
}
≥≥ 
}
¥¥ 	
public
∂∂ 
int
∂∂ 
[
∂∂ 
]
∂∂ '
GetInitialPositionsLisman
∂∂ .
(
∂∂. /
int
∂∂/ 2
colorLisman
∂∂3 >
)
∂∂> ?
{
∑∑ 	
int
∏∏ 
[
∏∏ 
]
∏∏ #
positionInitialLisman
∏∏ '
=
∏∏( )
new
∏∏* -
int
∏∏. 1
[
∏∏1 2
$num
∏∏2 3
]
∏∏3 4
;
∏∏4 5
switch
ππ 
(
ππ 
colorLisman
ππ 
)
ππ  
{
∫∫ 
case
ªª 
LISMANYELLOW
ªª !
:
ªª! "#
positionInitialLisman
ºº )
[
ºº) *
$num
ºº* +
]
ºº+ ,
=
ºº- .%
COORDINATESLISMANYELLOW
ºº/ F
[
ººF G
$num
ººG H
]
ººH I
;
ººI J#
positionInitialLisman
ΩΩ )
[
ΩΩ) *
$num
ΩΩ* +
]
ΩΩ+ ,
=
ΩΩ- .%
COORDINATESLISMANYELLOW
ΩΩ/ F
[
ΩΩF G
$num
ΩΩG H
]
ΩΩH I
;
ΩΩI J
break
ææ 
;
ææ 
case
øø 
	LISMANRED
øø 
:
øø #
positionInitialLisman
¿¿ )
[
¿¿) *
$num
¿¿* +
]
¿¿+ ,
=
¿¿- ."
COORDINATESLISMANRED
¿¿/ C
[
¿¿C D
$num
¿¿D E
]
¿¿E F
;
¿¿F G#
positionInitialLisman
¡¡ )
[
¡¡) *
$num
¡¡* +
]
¡¡+ ,
=
¡¡- ."
COORDINATESLISMANRED
¡¡/ C
[
¡¡C D
$num
¡¡D E
]
¡¡E F
;
¡¡F G
break
¬¬ 
;
¬¬ 
case
√√ 

LISMANBLUE
√√ 
:
√√  #
positionInitialLisman
ƒƒ )
[
ƒƒ) *
$num
ƒƒ* +
]
ƒƒ+ ,
=
ƒƒ- .#
COORDINATESLISMANBLUE
ƒƒ/ D
[
ƒƒD E
$num
ƒƒE F
]
ƒƒF G
;
ƒƒG H#
positionInitialLisman
≈≈ )
[
≈≈) *
$num
≈≈* +
]
≈≈+ ,
=
≈≈- .#
COORDINATESLISMANBLUE
≈≈/ D
[
≈≈D E
$num
≈≈E F
]
≈≈F G
;
≈≈G H
break
∆∆ 
;
∆∆ 
case
«« 
LISMANGREEN
««  
:
««  !#
positionInitialLisman
»» )
[
»») *
$num
»»* +
]
»»+ ,
=
»»- .$
COORDINATESLISMANGREEN
»»/ E
[
»»E F
$num
»»F G
]
»»G H
;
»»H I#
positionInitialLisman
…… )
[
……) *
$num
……* +
]
……+ ,
=
……- .$
COORDINATESLISMANGREEN
……/ E
[
……E F
$num
……F G
]
……G H
;
……H I
break
   
;
   
}
ÀÀ 
return
ÃÃ #
positionInitialLisman
ÃÃ (
;
ÃÃ( )
}
ŒŒ 	
public
œœ 
void
œœ 

FinishGame
œœ 
(
œœ 
LismanMovement
œœ -
movement
œœ. 6
,
œœ6 7
int
œœ8 ;
colorLismanEnemy
œœ< L
,
œœL M
int
œœN Q
scoreLisman
œœR ]
,
œœ] ^
int
œœ_ b
lifesLismanEnemy
œœc s
)
œœs t
{
–– 	
String
““ 

userLisman
““ 
=
““ (
multiplayerGameInformation
““  :
[
““: ;
movement
““; C
.
““C D
idGame
““D J
]
““J K
.
““K L
lismanUsers
““L W
[
““W X
movement
““X `
.
““` a
colorLisman
““a l
]
““l m
.
““m n

userLisman
““n x
;
““x y
String
”” 
userLismanEnemy
”” "
=
””# $(
multiplayerGameInformation
””% ?
[
””? @
movement
””@ H
.
””H I
idGame
””I O
]
””O P
.
””P Q
lismanUsers
””Q \
[
””\ ]
colorLismanEnemy
””] m
]
””m n
.
””n o

userLisman
””o y
;
””y z
try
‘‘ 
{
’’ #
connectionGameService
÷÷ %
[
÷÷% &

userLisman
÷÷& 0
]
÷÷0 1
.
÷÷1 2 
NotifyPlayerIsDead
÷÷2 D
(
÷÷D E
colorLismanEnemy
÷÷E U
)
÷÷U V
;
÷÷V W#
connectionGameService
◊◊ %
[
◊◊% &
userLismanEnemy
◊◊& 5
]
◊◊5 6
.
◊◊6 7 
NotifyPlayerIsDead
◊◊7 I
(
◊◊I J
colorLismanEnemy
◊◊J Z
)
◊◊Z [
;
◊◊[ \#
connectionGameService
ŸŸ %
[
ŸŸ% &

userLisman
ŸŸ& 0
]
ŸŸ0 1
.
ŸŸ1 2
NotifyUpdateScore
ŸŸ2 C
(
ŸŸC D
movement
ŸŸD L
.
ŸŸL M
colorLisman
ŸŸM X
,
ŸŸX Y
scoreLisman
ŸŸZ e
)
ŸŸe f
;
ŸŸf g#
connectionGameService
⁄⁄ %
[
⁄⁄% &

userLisman
⁄⁄& 0
]
⁄⁄0 1
.
⁄⁄1 2
NotifyUpdateLifes
⁄⁄2 C
(
⁄⁄C D
colorLismanEnemy
⁄⁄D T
,
⁄⁄T U
lifesLismanEnemy
⁄⁄V f
)
⁄⁄f g
;
⁄⁄g h#
connectionGameService
‹‹ %
[
‹‹% &

userLisman
‹‹& 0
]
‹‹0 1
.
‹‹1 2
NotifyEndGame
‹‹2 ?
(
‹‹? @
movement
‹‹@ H
.
‹‹H I
colorLisman
‹‹I T
)
‹‹T U
;
‹‹U V
SaveGame
›› 
(
›› 
movement
›› !
.
››! "
idGame
››" (
,
››( )

userLisman
››* 4
)
››4 5
;
››5 6
}
ﬁﬁ 
catch
ﬂﬂ 
(
ﬂﬂ $
CommunicationException
ﬂﬂ )
ex
ﬂﬂ* ,
)
ﬂﬂ, -
{
‡‡ 
Logger
·· 
.
·· 
log
·· 
.
·· 
Error
··  
(
··  !
$str
··! /
+
··0 1
ex
··2 4
)
··4 5
;
··5 6
}
‚‚ 
}
ÂÂ 	
public
ÊÊ 
void
ÊÊ 

FinishGame
ÊÊ 
(
ÊÊ 
int
ÊÊ "
idGame
ÊÊ# )
)
ÊÊ) *
{
ÁÁ 	
foreach
ËË 
(
ËË 
KeyValuePair
ËË  
<
ËË  !
int
ËË! $
,
ËË$ %
InformationPlayer
ËË% 6
>
ËË6 7
player
ËË8 >
in
ËË? A(
multiplayerGameInformation
ËËB \
[
ËË\ ]
idGame
ËË] c
]
ËËc d
.
ËËd e
lismanUsers
ËËe p
)
ËËp q
{
ËËq r
if
ÈÈ 
(
ÈÈ 
player
ÈÈ 
.
ÈÈ 
Value
ÈÈ 
.
ÈÈ  
isLive
ÈÈ  &
)
ÈÈ& '
{
ÍÍ 
try
ÎÎ 
{
ÏÏ #
connectionGameService
ÌÌ -
[
ÌÌ- .
player
ÌÌ. 4
.
ÌÌ4 5
Value
ÌÌ5 :
.
ÌÌ: ;

userLisman
ÌÌ; E
]
ÌÌE F
.
ÌÌF G
NotifyEndGame
ÌÌG T
(
ÌÌT U
player
ÌÌU [
.
ÌÌ[ \
Key
ÌÌ\ _
)
ÌÌ_ `
;
ÌÌ` a
SaveGame
ÓÓ  
(
ÓÓ  !
idGame
ÓÓ! '
,
ÓÓ' (
player
ÓÓ) /
.
ÓÓ/ 0
Value
ÓÓ0 5
.
ÓÓ5 6

userLisman
ÓÓ6 @
)
ÓÓ@ A
;
ÓÓA B
Console
ÔÔ 
.
ÔÔ  
	WriteLine
ÔÔ  )
(
ÔÔ) *
$str
ÔÔ* H
,
ÔÔH I
idGame
ÔÔJ P
,
ÔÔP Q
DateTime
ÔÔR Z
.
ÔÔZ [
Now
ÔÔ[ ^
)
ÔÔ^ _
;
ÔÔ_ `
return
 
;
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ $
CommunicationException
ÚÚ 1
e
ÚÚ2 3
)
ÚÚ3 4
{
ÛÛ 
Console
ÙÙ 
.
ÙÙ  
	WriteLine
ÙÙ  )
(
ÙÙ) *
$str
ÙÙ* 7
+
ÙÙ8 9
player
ÙÙ: @
.
ÙÙ@ A
Value
ÙÙA F
.
ÙÙF G

userLisman
ÙÙG Q
+
ÙÙR S
$str
ÙÙT _
+
ÙÙ` a
e
ÙÙb c
.
ÙÙc d
Message
ÙÙd k
)
ÙÙk l
;
ÙÙl m
}
ıı 
}
ˆˆ 
}
˜˜ 
}
˚˚ 	
public
˝˝ 
bool
˝˝ 
PlayerWillDead
˝˝ "
(
˝˝# $
int
˝˝$ '
idGame
˝˝( .
,
˝˝. /
int
˝˝0 3
colorLisman
˝˝4 ?
)
˝˝? @
{
˛˛ 	
bool
ˇˇ 
result
ˇˇ 
=
ˇˇ 
false
ˇˇ 
;
ˇˇ  
if
ÄÄ 
(
ÄÄ (
multiplayerGameInformation
ÄÄ *
[
ÄÄ* +
idGame
ÄÄ+ 1
]
ÄÄ1 2
.
ÄÄ2 3
lismanUsers
ÄÄ3 >
[
ÄÄ> ?
colorLisman
ÄÄ? J
]
ÄÄJ K
.
ÄÄK L
lifesLisman
ÄÄL W
==
ÄÄX Z
$num
ÄÄ[ \
)
ÄÄ\ ]
{
ÅÅ 
result
ÇÇ 
=
ÇÇ 
true
ÇÇ 
;
ÇÇ 
}
ÉÉ 
return
ÖÖ 
result
ÖÖ 
;
ÖÖ 
}
ÜÜ 	
public
áá 
bool
áá 
GameWillEnd
áá 
(
áá  
int
áá  #
idGame
áá$ *
)
áá* +
{
àà 	
bool
ââ 
result
ââ 
=
ââ 
false
ââ 
;
ââ  
int
ää 
playersLives
ää 
=
ää 
$num
ää  
;
ää  !
foreach
ãã 
(
ãã 
KeyValuePair
ãã !
<
ãã! "
int
ãã" %
,
ãã% &
InformationPlayer
ãã' 8
>
ãã8 9
player
ãã: @
in
ããA C(
multiplayerGameInformation
ããD ^
[
ãã^ _
idGame
ãã_ e
]
ããe f
.
ããf g
lismanUsers
ããg r
)
ããr s
{
åå 
if
çç 
(
çç 
player
çç 
.
çç 
Value
çç 
.
çç  
isLive
çç  &
)
çç& '
{
éé 
playersLives
èè  
+=
èè! #
$num
èè$ %
;
èè% &
}
êê 
}
ëë 
if
íí 
(
íí 
playersLives
íí 
==
íí 
$num
íí  
)
íí  !
{
ìì 
result
îî 
=
îî 
true
îî 
;
îî 
}
ïï 
return
óó 
result
óó 
;
óó 
}
òò 	
private
õõ 
void
õõ 
SaveGame
õõ 
(
õõ 
int
õõ !
idgame
õõ" (
,
õõ( )
String
õõ* 0

userWinner
õõ1 ;
)
õõ; <
{
úú 	
try
ùù 
{
ûû 
using
üü 
(
üü 
var
üü 
dataBase
üü #
=
üü$ %
new
üü& )"
EntityModelContainer
üü* >
(
üü> ?
)
üü? @
)
üü@ A
{
†† 
var
°° 

gameUpdate
°° "
=
°°# $
dataBase
°°% -
.
°°- .
GameSet
°°. 5
.
°°5 6
Where
°°6 ;
(
°°; <
u
°°< =
=>
°°> @
u
°°A B
.
°°B C
Id
°°C E
==
°°F H
idgame
°°I O
)
°°O P
.
°°P Q
FirstOrDefault
°°Q _
(
°°_ `
)
°°` a
;
°°a b
if
¢¢ 
(
¢¢ 

gameUpdate
¢¢ "
.
¢¢" #
Id
¢¢# %
!=
¢¢& (
$num
¢¢) *
)
¢¢* +
{
££ 

gameUpdate
§§ "
.
§§" #
Last_update
§§# .
=
§§/ 0
DateTime
§§1 9
.
§§9 :
Now
§§: =
;
§§= >

gameUpdate
•• "
.
••" #
Status
••# )
=
••* +
false
••, 1
;
••1 2

gameUpdate
¶¶ "
.
¶¶" #
	Game_over
¶¶# ,
=
¶¶- .
DateTime
¶¶/ 7
.
¶¶7 8
Now
¶¶8 ;
;
¶¶; <
foreach
ßß 
(
ßß  !
KeyValuePair
ßß! -
<
ßß- .
int
ßß. 1
,
ßß1 2
InformationPlayer
ßß3 D
>
ßßD E
players
ßßF M
in
ßßN P(
multiplayerGameInformation
ßßQ k
[
ßßk l
idgame
ßßl r
]
ßßr s
.
ßßs t
lismanUsers
ßßt 
)ßß Ä
{
®® 
var
©© 
account
©© &
=
©©' (
dataBase
©©) 1
.
©©1 2

AccountSet
©©2 <
.
©©< =
Where
©©= B
(
©©B C
u
©©C D
=>
©©E G
u
©©H I
.
©©I J
User
©©J N
==
©©O Q
players
©©R Y
.
©©Y Z
Value
©©Z _
.
©©_ `

userLisman
©©` j
)
©©j k
.
©©k l
FirstOrDefault
©©l z
(
©©z {
)
©©{ |
;
©©| }
account
™™ #
.
™™# $
Record
™™$ *
.
™™* +
Mult_best_score
™™+ :
=
™™; <
players
™™= D
.
™™D E
Value
™™E J
.
™™J K
scoreLisman
™™K V
;
™™V W
account
´´ #
.
´´# $
Record
´´$ *
.
´´* +
Mult_games_played
´´+ <
+=
´´= ?
$num
´´@ A
;
´´A B
if
¨¨ 
(
¨¨ 
players
¨¨ &
.
¨¨& '
Value
¨¨' ,
.
¨¨, -

userLisman
¨¨- 7
==
¨¨8 :

userWinner
¨¨; E
)
¨¨E F
{
≠≠ 
account
ÆÆ  '
.
ÆÆ' (
Record
ÆÆ( .
.
ÆÆ. /
Mult_games_won
ÆÆ/ =
+=
ÆÆ> @
$num
ÆÆA B
;
ÆÆB C
}
ØØ 

gameUpdate
∞∞ &
.
∞∞& '
Members
∞∞' .
.
∞∞. /
Add
∞∞/ 2
(
∞∞2 3
account
∞∞3 :
)
∞∞: ;
;
∞∞; <
}
±± 
try
≤≤ 
{
≥≥ 
dataBase
¥¥ $
.
¥¥$ %
SaveChanges
¥¥% 0
(
¥¥0 1
)
¥¥1 2
;
¥¥2 3
}
∂∂ 
catch
∑∑ 
(
∑∑ )
DbEntityValidationException
∑∑ :
ex
∑∑; =
)
∑∑= >
{
∏∏ 
Logger
ππ "
.
ππ" #
log
ππ# &
.
ππ& '
Warn
ππ' +
(
ππ+ ,
$str
ππ, E
+
ππF G
ex
ππH J
)
ππJ K
;
ππK L
}
∫∫ 
}
ªª 
}
ºº 
}
ΩΩ 
catch
ææ 
(
ææ 
	Exception
ææ 
ex
ææ 
)
ææ  
{
øø 
Logger
¿¿ 
.
¿¿ 
log
¿¿ 
.
¿¿ 
Error
¿¿  
(
¿¿  !
$str
¿¿! ;
+
¿¿< =
ex
¿¿> @
.
¿¿@ A
Message
¿¿A H
)
¿¿H I
;
¿¿I J
}
¡¡ 
}
¬¬ 	
public
ƒƒ 
void
ƒƒ 
UpdateGameMap
ƒƒ !
(
ƒƒ! "
int
ƒƒ" %
idgame
ƒƒ& ,
,
ƒƒ, -
int
ƒƒ. 1
newValue
ƒƒ2 :
,
ƒƒ: ;
int
ƒƒ< ?
	positionX
ƒƒ@ I
,
ƒƒI J
int
ƒƒK N
	positionY
ƒƒO X
)
ƒƒX Y
{
≈≈ 	(
multiplayerGameInformation
∆∆ &
[
∆∆& '
idgame
∆∆' -
]
∆∆- .
.
∆∆. /
gameMap
∆∆/ 6
[
∆∆6 7
	positionX
∆∆7 @
,
∆∆@ A
	positionY
∆∆B K
]
∆∆K L
=
∆∆M N
newValue
∆∆O W
;
∆∆W X
}
«« 	
public
…… 
int
…… !
UpdateSubtractLifes
…… &
(
……& '
int
……' *
idGame
……+ 1
,
……1 2
int
……3 6
colorLisman
……7 B
)
……B C
{
   	
int
ÀÀ 
lifesLisman
ÀÀ 
=
ÀÀ (
multiplayerGameInformation
ÀÀ 8
[
ÀÀ8 9
idGame
ÀÀ9 ?
]
ÀÀ? @
.
ÀÀ@ A
lismanUsers
ÀÀA L
[
ÀÀL M
colorLisman
ÀÀM X
]
ÀÀX Y
.
ÀÀY Z
lifesLisman
ÀÀZ e
;
ÀÀe f
if
ÃÃ 
(
ÃÃ 
lifesLisman
ÃÃ 
>
ÃÃ 
$num
ÃÃ 
)
ÃÃ  
{
ÕÕ 
lifesLisman
ŒŒ 
=
ŒŒ (
multiplayerGameInformation
ŒŒ 8
[
ŒŒ8 9
idGame
ŒŒ9 ?
]
ŒŒ? @
.
ŒŒ@ A
lismanUsers
ŒŒA L
[
ŒŒL M
colorLisman
ŒŒM X
]
ŒŒX Y
.
ŒŒY Z
lifesLisman
ŒŒZ e
-=
ŒŒf h
$num
ŒŒi j
;
ŒŒj k
}
œœ 
return
““ 
lifesLisman
““ 
;
““ 
}
”” 	
public
’’ 
int
’’ 
UpdateScore
’’ 
(
’’ 
int
’’ "
idgame
’’# )
,
’’) *
int
’’+ .
colorLisman
’’/ :
,
’’: ;
int
’’< ?
points
’’@ F
)
’’F G
{
÷÷ 	
return
◊◊ (
multiplayerGameInformation
◊◊ ,
[
◊◊, -
idgame
◊◊- 3
]
◊◊3 4
.
◊◊4 5
lismanUsers
◊◊5 @
[
◊◊@ A
colorLisman
◊◊A L
]
◊◊L M
.
◊◊M N
scoreLisman
◊◊N Y
+=
◊◊Z \
points
◊◊] c
;
◊◊c d
}
ÿÿ 	
private
⁄⁄ 
void
⁄⁄ %
MoveLismanToNewPosition
⁄⁄ ,
(
⁄⁄, -
LismanMovement
⁄⁄- ;
movement
⁄⁄< D
)
⁄⁄D E
{
€€ 	
UpdateGameMap
›› 
(
›› 
movement
›› "
.
››" #
idGame
››# )
,
››) *
EMPTYBOX
››+ 3
,
››3 4
movement
››5 =
.
››= >
initialPositionX
››> N
,
››N O
movement
››P X
.
››X Y
initialPositionY
››Y i
)
››i j
;
››j k
UpdateGameMap
ﬁﬁ 
(
ﬁﬁ 
movement
ﬁﬁ "
.
ﬁﬁ" #
idGame
ﬁﬁ# )
,
ﬁﬁ) *
movement
ﬁﬁ+ 3
.
ﬁﬁ3 4
colorLisman
ﬁﬁ4 ?
,
ﬁﬁ@ A
movement
ﬁﬁB J
.
ﬁﬁJ K
finalPositionX
ﬁﬁK Y
,
ﬁﬁY Z
movement
ﬁﬁ[ c
.
ﬁﬁc d
finalPositionY
ﬁﬁd r
)
ﬁﬁr s
;
ﬁﬁs t
foreach
ﬂﬂ 
(
ﬂﬂ 
KeyValuePair
ﬂﬂ !
<
ﬂﬂ! "
int
ﬂﬂ" %
,
ﬂﬂ% &
InformationPlayer
ﬂﬂ' 8
>
ﬂﬂ8 9
player
ﬂﬂ: @
in
ﬂﬂA C(
multiplayerGameInformation
ﬂﬂD ^
[
ﬂﬂ^ _
movement
ﬂﬂ_ g
.
ﬂﬂg h
idGame
ﬂﬂh n
]
ﬂﬂn o
.
ﬂﬂo p
lismanUsers
ﬂﬂp {
)
ﬂﬂ{ |
{
‡‡ 
if
·· 
(
·· 
player
·· 
.
·· 
Value
·· 
.
··  
isLive
··  &
&&
··' )#
connectionGameService
··* ?
[
··? @
player
··@ F
.
··F G
Value
··G L
.
··L M

userLisman
··M W
]
··W X
!=
··Y [
null
··\ `
)
··` a
{
‚‚ 
try
„„ 
{
‰‰ #
connectionGameService
ÂÂ -
[
ÂÂ- .
player
ÂÂ. 4
.
ÂÂ4 5
Value
ÂÂ5 :
.
ÂÂ: ;

userLisman
ÂÂ; E
]
ÂÂE F
.
ÂÂF G
NotifyLismanMoved
ÂÂG X
(
ÂÂX Y
movement
ÂÂY a
.
ÂÂa b
colorLisman
ÂÂb m
,
ÂÂm n
movement
ÂÂo w
.
ÂÂw x
finalPositionXÂÂx Ü
,ÂÂÜ á
movementÂÂà ê
.ÂÂê ë
finalPositionYÂÂë ü
,ÂÂü †
movementÂÂ° ©
.ÂÂ© ™
goToÂÂ™ Æ
)ÂÂÆ Ø
;ÂÂØ ∞
}
ÊÊ 
catch
ÁÁ 
(
ÁÁ $
CommunicationException
ÁÁ 1
e
ÁÁ2 3
)
ÁÁ3 4
{
ËË 
Console
ÈÈ 
.
ÈÈ  
	WriteLine
ÈÈ  )
(
ÈÈ) *
$str
ÈÈ* P
+
ÈÈQ R
player
ÈÈS Y
.
ÈÈY Z
Value
ÈÈZ _
.
ÈÈ_ `

userLisman
ÈÈ` j
+
ÈÈk l
$str
ÈÈm x
+
ÈÈy z
e
ÈÈ{ |
.
ÈÈ| }
MessageÈÈ} Ñ
)ÈÈÑ Ö
;ÈÈÖ Ü#
connectionGameService
ÍÍ -
[
ÍÍ- .
player
ÍÍ. 4
.
ÍÍ4 5
Value
ÍÍ5 :
.
ÍÍ: ;

userLisman
ÍÍ; E
]
ÍÍE F
=
ÍÍG H
null
ÍÍI M
;
ÍÍM N
}
ÎÎ 
}
ÏÏ 
}
ÌÌ 
}
ÓÓ 	
private
ÔÔ 
void
ÔÔ 
EatPowerPill
ÔÔ !
(
ÔÔ! "
LismanMovement
ÔÔ" 0
movement
ÔÔ1 9
)
ÔÔ9 :
{
 	
UpdateGameMap
ÒÒ 
(
ÒÒ 
movement
ÒÒ "
.
ÒÒ" #
idGame
ÒÒ# )
,
ÒÒ) *
EMPTYBOX
ÒÒ+ 3
,
ÒÒ3 4
movement
ÒÒ5 =
.
ÒÒ= >
initialPositionX
ÒÒ> N
,
ÒÒN O
movement
ÒÒP X
.
ÒÒX Y
initialPositionY
ÒÒY i
)
ÒÒi j
;
ÒÒj k
UpdateGameMap
ÚÚ 
(
ÚÚ 
movement
ÚÚ "
.
ÚÚ" #
idGame
ÚÚ# )
,
ÚÚ) *
movement
ÚÚ+ 3
.
ÚÚ3 4
colorLisman
ÚÚ4 ?
,
ÚÚ? @
movement
ÚÚA I
.
ÚÚI J
finalPositionX
ÚÚJ X
,
ÚÚX Y
movement
ÚÚZ b
.
ÚÚb c
finalPositionY
ÚÚc q
)
ÚÚq r
;
ÚÚr s
int
ÛÛ 
scoreLisman
ÛÛ 
=
ÛÛ 
UpdateScore
ÛÛ )
(
ÛÛ) *
movement
ÛÛ* 2
.
ÛÛ2 3
idGame
ÛÛ3 9
,
ÛÛ9 :
movement
ÛÛ; C
.
ÛÛC D
colorLisman
ÛÛD O
,
ÛÛO P
POINTSPOWERPILL
ÛÛQ `
)
ÛÛ` a
;
ÛÛa b
string
ÙÙ 
userName
ÙÙ 
=
ÙÙ (
multiplayerGameInformation
ÙÙ 8
[
ÙÙ8 9
movement
ÙÙ9 A
.
ÙÙA B
idGame
ÙÙB H
]
ÙÙH I
.
ÙÙI J
lismanUsers
ÙÙJ U
[
ÙÙU V
movement
ÙÙV ^
.
ÙÙ^ _
colorLisman
ÙÙ_ j
]
ÙÙj k
.
ÙÙk l

userLisman
ÙÙl v
;
ÙÙv w#
connectionGameService
ıı !
[
ıı! "
userName
ıı" *
]
ıı* +
.
ıı+ ,
UpdateLismanSpeed
ıı, =
(
ıı= >
SPEEDPOWERFUL
ıı> K
,
ııK L
true
ııM Q
)
ııQ R
;
ııR S
foreach
ˆˆ 
(
ˆˆ 
KeyValuePair
ˆˆ !
<
ˆˆ! "
int
ˆˆ" %
,
ˆˆ% &
InformationPlayer
ˆˆ' 8
>
ˆˆ8 9
player
ˆˆ: @
in
ˆˆA C(
multiplayerGameInformation
ˆˆD ^
[
ˆˆ^ _
movement
ˆˆ_ g
.
ˆˆg h
idGame
ˆˆh n
]
ˆˆn o
.
ˆˆo p
lismanUsers
ˆˆp {
)
ˆˆ{ |
{
˜˜ 
if
¯¯ 
(
¯¯ 
player
¯¯ 
.
¯¯ 
Value
¯¯ 
.
¯¯  
isLive
¯¯  &
)
¯¯& '
{
˘˘ 
try
˙˙ 
{
˚˚ #
connectionGameService
¸¸ -
[
¸¸- .
player
¸¸. 4
.
¸¸4 5
Value
¸¸5 :
.
¸¸: ;

userLisman
¸¸; E
]
¸¸E F
.
¸¸F G(
NotifyDisappearedPowerPill
¸¸G a
(
¸¸a b
movement
¸¸b j
.
¸¸j k
finalPositionX
¸¸k y
,
¸¸y z
movement¸¸{ É
.¸¸É Ñ
finalPositionY¸¸Ñ í
)¸¸í ì
;¸¸ì î#
connectionGameService
˝˝ -
[
˝˝- .
player
˝˝. 4
.
˝˝4 5
Value
˝˝5 :
.
˝˝: ;

userLisman
˝˝; E
]
˝˝E F
.
˝˝F G
NotifyLismanMoved
˝˝G X
(
˝˝X Y
movement
˝˝Y a
.
˝˝a b
colorLisman
˝˝b m
,
˝˝m n
movement
˝˝o w
.
˝˝w x
finalPositionX˝˝x Ü
,˝˝Ü á
movement˝˝à ê
.˝˝ê ë
finalPositionY˝˝ë ü
,˝˝ü †
movement˝˝° ©
.˝˝© ™
goTo˝˝™ Æ
)˝˝Æ Ø
;˝˝Ø ∞#
connectionGameService
˛˛ -
[
˛˛- .
player
˛˛. 4
.
˛˛4 5
Value
˛˛5 :
.
˛˛: ;

userLisman
˛˛; E
]
˛˛E F
.
˛˛F G
NotifyUpdateScore
˛˛G X
(
˛˛X Y
movement
˛˛Y a
.
˛˛a b
colorLisman
˛˛b m
,
˛˛m n
scoreLisman
˛˛o z
)
˛˛z {
;
˛˛{ |
}
ˇˇ 
catch
ÄÄ 
(
ÄÄ $
CommunicationException
ÄÄ 1
e
ÄÄ2 3
)
ÄÄ3 4
{
ÅÅ 
Console
ÇÇ 
.
ÇÇ  
	WriteLine
ÇÇ  )
(
ÇÇ) *
$str
ÇÇ* P
+
ÇÇQ R
player
ÇÇS Y
.
ÇÇY Z
Value
ÇÇZ _
.
ÇÇ_ `

userLisman
ÇÇ` j
+
ÇÇk l
$str
ÇÇm x
+
ÇÇy z
e
ÇÇ{ |
.
ÇÇ| }
MessageÇÇ} Ñ
)ÇÇÑ Ö
;ÇÇÖ Ü
}
ÉÉ 
}
ÑÑ 
}
ÖÖ 
}
áá 	
public
ââ 
int
ââ 
GetValueBox
ââ 
(
ââ 
int
ââ "
idGame
ââ# )
,
ââ) *
int
ââ+ .
finalPositionX
ââ/ =
,
ââ= >
int
ââ? B
finalPositionY
ââC Q
)
ââQ R
{
ää 	
int
ãã 
result
ãã 
=
ãã 
-
ãã 
$num
ãã 
;
ãã 
int
åå 
valuePosition
åå 
=
åå (
multiplayerGameInformation
åå  :
[
åå: ;
idGame
åå; A
]
ååA B
.
ååB C
gameMap
ååC J
[
ååJ K
finalPositionX
ååK Y
,
ååY Z
finalPositionY
åå[ i
]
ååi j
;
ååj k
switch
çç 
(
çç 
valuePosition
çç !
)
çç! "
{
éé 
case
èè 
EMPTYBOX
èè 
:
èè 
result
êê 
=
êê 
$num
êê 
;
êê 
break
ëë 
;
ëë 
case
íí 
	POWERPILL
íí 
:
íí 
result
ìì 
=
ìì 
$num
ìì 
;
ìì 
break
îî 
;
îî 
case
ïï 
LISMANYELLOW
ïï !
:
ïï! "
result
ññ 
=
ññ 
$num
ññ 
;
ññ 
break
óó 
;
óó 
case
òò 
	LISMANRED
òò 
:
òò 
result
ôô 
=
ôô 
$num
ôô 
;
ôô 
break
öö 
;
öö 
case
õõ 

LISMANBLUE
õõ 
:
õõ  
result
úú 
=
úú 
$num
úú 
;
úú 
break
ùù 
;
ùù 
case
ûû 
LISMANGREEN
ûû  
:
ûû  !
result
üü 
=
üü 
$num
üü 
;
üü 
break
†† 
;
†† 
case
°° 
GHOST
°° 
:
°° 
result
¢¢ 
=
¢¢ 
$num
¢¢ 
;
¢¢ 
break
££ 
;
££ 
}
§§ 
return
¶¶ 
result
¶¶ 
;
¶¶ 
}
ßß 	
public
©© 
void
©© 
ReadMapGame
©© 
(
©©  
)
©©  !
{
™™ 	
using
´´ 
(
´´ 
StreamReader
´´ 
sr
´´  "
=
´´# $
new
´´% (
StreamReader
´´) 5
(
´´5 6
parentDirectory
´´6 E
+
´´F G
$str
´´H \
)
´´\ ]
)
´´] ^
{
¨¨ 
for
ÆÆ 
(
ÆÆ 
int
ÆÆ 
i
ÆÆ 
=
ÆÆ 
$num
ÆÆ 
;
ÆÆ 
i
ÆÆ  !
<=
ÆÆ" $
$num
ÆÆ% '
;
ÆÆ' (
i
ÆÆ) *
++
ÆÆ* ,
)
ÆÆ, -
{
ØØ 
for
∞∞ 
(
∞∞ 
int
∞∞ 
j
∞∞ 
=
∞∞  
$num
∞∞! "
;
∞∞" #
j
∞∞$ %
<=
∞∞& (
$num
∞∞) +
;
∞∞+ ,
j
∞∞- .
++
∞∞. 0
)
∞∞0 1
{
±± 
int
≤≤ 
caracter
≤≤ $
=
≤≤% &
sr
≤≤' )
.
≤≤) *
Read
≤≤* .
(
≤≤. /
)
≤≤/ 0
;
≤≤0 1
if
¥¥ 
(
¥¥ 
caracter
¥¥ $
!=
¥¥% '
-
¥¥( )
$num
¥¥) *
)
¥¥* +
{
µµ 
switch
∂∂ "
(
∂∂# $
caracter
∂∂$ ,
)
∂∂, -
{
∑∑ 
case
∏∏  $
$num
∏∏% '
:
∏∏' (
GAMEMAP
ππ$ +
[
ππ+ ,
i
ππ, -
,
ππ- .
j
ππ/ 0
]
ππ0 1
=
ππ2 3
$num
ππ4 5
;
ππ5 6
break
∫∫$ )
;
∫∫) *
case
ªª  $
$num
ªª% '
:
ªª' (
GAMEMAP
ºº$ +
[
ºº+ ,
i
ºº, -
,
ºº- .
j
ºº/ 0
]
ºº0 1
=
ºº2 3
$num
ºº4 5
;
ºº5 6
break
ΩΩ$ )
;
ΩΩ) *
case
ææ  $
$num
ææ% '
:
ææ' (
GAMEMAP
øø$ +
[
øø+ ,
i
øø, -
,
øø- .
j
øø/ 0
]
øø0 1
=
øø2 3
$num
øø4 5
;
øø5 6
break
¿¿$ )
;
¿¿) *
case
¡¡  $
$num
¡¡% '
:
¡¡' (
GAMEMAP
¬¬$ +
[
¬¬+ ,
i
¬¬, -
,
¬¬- .
j
¬¬/ 0
]
¬¬0 1
=
¬¬2 3
$num
¬¬4 5
;
¬¬5 6
break
√√$ )
;
√√) *
case
ƒƒ  $
$num
ƒƒ% '
:
ƒƒ' (
GAMEMAP
≈≈$ +
[
≈≈+ ,
i
≈≈, -
,
≈≈- .
j
≈≈/ 0
]
≈≈0 1
=
≈≈2 3
$num
≈≈4 5
;
≈≈5 6
break
∆∆$ )
;
∆∆) *
case
««  $
$num
««% '
:
««' (
GAMEMAP
»»$ +
[
»»+ ,
i
»», -
,
»»- .
j
»»/ 0
]
»»0 1
=
»»2 3
$num
»»4 5
;
»»5 6
break
……$ )
;
……) *
case
    $
$num
  % '
:
  ' (
GAMEMAP
ÀÀ$ +
[
ÀÀ+ ,
i
ÀÀ, -
,
ÀÀ- .
j
ÀÀ/ 0
]
ÀÀ0 1
=
ÀÀ2 3
$num
ÀÀ4 5
;
ÀÀ5 6
break
ÃÃ$ )
;
ÃÃ) *
case
ÕÕ  $
$num
ÕÕ% '
:
ÕÕ' (
GAMEMAP
ŒŒ$ +
[
ŒŒ+ ,
i
ŒŒ, -
,
ŒŒ- .
j
ŒŒ/ 0
]
ŒŒ0 1
=
ŒŒ2 3
$num
ŒŒ4 5
;
ŒŒ5 6
break
œœ$ )
;
œœ) *
}
—— 
}
”” 
}
’’ 
}
÷÷ 
}
ÿÿ 
}
⁄⁄ 	
public
‹‹ 
void
‹‹ 
RemovePower
‹‹ 
(
‹‹  
String
‹‹  &
user
‹‹' +
)
‹‹+ ,
{
›› 	#
connectionGameService
ﬁﬁ !
[
ﬁﬁ! "
user
ﬁﬁ" &
]
ﬁﬁ& '
.
ﬁﬁ' (
UpdateLismanSpeed
ﬁﬁ( 9
(
ﬁﬁ9 :
SPEEDNORMAL
ﬁﬁ: E
,
ﬁﬁE F
false
ﬁﬁF K
)
ﬁﬁK L
;
ﬁﬁL M
}
ﬂﬂ 	
public
·· 
void
·· 
SaveLastUpdate
·· "
(
··" #
int
··# &
idgame
··' -
)
··- .
{
‚‚ 	
try
„„ 
{
‰‰ 
using
ÂÂ 
(
ÂÂ 
var
ÂÂ 
dataBase
ÂÂ "
=
ÂÂ# $
new
ÂÂ% ("
EntityModelContainer
ÂÂ) =
(
ÂÂ= >
)
ÂÂ> ?
)
ÂÂ? @
{
ÊÊ 
var
ÁÁ 

gameUpdate
ÁÁ "
=
ÁÁ# $
dataBase
ÁÁ% -
.
ÁÁ- .
GameSet
ÁÁ. 5
.
ÁÁ5 6
Where
ÁÁ6 ;
(
ÁÁ; <
u
ÁÁ< =
=>
ÁÁ> @
u
ÁÁA B
.
ÁÁB C
Id
ÁÁC E
==
ÁÁF H
idgame
ÁÁI O
)
ÁÁO P
.
ÁÁP Q
FirstOrDefault
ÁÁQ _
(
ÁÁ_ `
)
ÁÁ` a
;
ÁÁa b
if
ËË 
(
ËË 

gameUpdate
ËË !
.
ËË! "
Id
ËË" $
!=
ËË% '
$num
ËË( )
)
ËË) *
{
ÈÈ 

gameUpdate
ÍÍ "
.
ÍÍ" #
Last_update
ÍÍ# .
=
ÍÍ/ 0
DateTime
ÍÍ1 9
.
ÍÍ9 :
Now
ÍÍ: =
;
ÍÍ= >
try
ÎÎ 
{
ÏÏ 
dataBase
ÌÌ $
.
ÌÌ$ %
SaveChanges
ÌÌ% 0
(
ÌÌ0 1
)
ÌÌ1 2
;
ÌÌ2 3
}
ÔÔ 
catch
 
(
 )
DbEntityValidationException
 :
ex
; =
)
= >
{
ÒÒ 
Logger
ÚÚ "
.
ÚÚ" #
log
ÚÚ# &
.
ÚÚ& '
Warn
ÚÚ' +
(
ÚÚ+ ,
$str
ÚÚ, E
+
ÚÚF G
ex
ÚÚH J
)
ÚÚJ K
;
ÚÚK L
}
ÛÛ 
}
ÙÙ 
}
ıı 
}
ˆˆ 
catch
ˆˆ 
(
ˆˆ 
	Exception
ˆˆ 
ex
ˆˆ 
)
ˆˆ  
{
˜˜ 
Logger
¯¯ 
.
¯¯ 
log
¯¯ 
.
¯¯ 
Error
¯¯  
(
¯¯  !
$str
¯¯! ;
+
¯¯< =
ex
¯¯> @
.
¯¯@ A
Message
¯¯A H
)
¯¯H I
;
¯¯I J
}
˘˘ 
}
˙˙ 	
public
¸¸	 
void
¸¸ 
ExitGame
¸¸ 
(
¸¸ 
int
¸¸ !
idGame
¸¸" (
,
¸¸( )
int
¸¸* -
colorLisman
¸¸. 9
,
¸¸9 :
int
¸¸; >
	positionX
¸¸? H
,
¸¸H I
int
¸¸J M
	positionY
¸¸N W
)
¸¸W X
{
˝˝	 

int
˛˛ 
playersLives
˛˛ 
=
˛˛ 
$num
˛˛  
;
˛˛  !
UpdateGameMap
ˇˇ 
(
ˇˇ 
idGame
ˇˇ "
,
ˇˇ" #
EMPTYBOX
ˇˇ$ ,
,
ˇˇ, -
	positionX
ˇˇ. 7
,
ˇˇ7 8
	positionY
ˇˇ9 B
)
ˇˇB C
;
ˇˇC D
foreach
ÄÄ 
(
ÄÄ 
KeyValuePair
ÄÄ #
<
ÄÄ# $
int
ÄÄ$ '
,
ÄÄ' (
InformationPlayer
ÄÄ) :
>
ÄÄ: ;
player
ÄÄ< B
in
ÄÄC E(
multiplayerGameInformation
ÄÄF `
[
ÄÄ` a
idGame
ÄÄa g
]
ÄÄg h
.
ÄÄh i
lismanUsers
ÄÄi t
)
ÄÄt u
{
ÅÅ 
if
ÇÇ 
(
ÇÇ 
player
ÇÇ 
.
ÇÇ 
Value
ÇÇ "
.
ÇÇ" #
isLive
ÇÇ# )
)
ÇÇ) *
{
ÉÉ 
try
ÑÑ 
{
ÖÖ #
connectionGameService
ÜÜ /
[
ÜÜ/ 0
player
ÜÜ0 6
.
ÜÜ6 7
Value
ÜÜ7 <
.
ÜÜ< =

userLisman
ÜÜ= G
]
ÜÜG H
.
ÜÜH I#
NotifyLismanLeaveGame
ÜÜI ^
(
ÜÜ^ _
colorLisman
ÜÜ_ j
)
ÜÜj k
;
ÜÜk l
playersLives
áá &
++
áá& (
;
áá( )
}
àà 
catch
ââ 
(
ââ $
CommunicationException
ââ 3
e
ââ4 5
)
ââ5 6
{
ää 
Console
ãã !
.
ãã! "
	WriteLine
ãã" +
(
ãã+ ,
$str
ãã, R
+
ããS T
player
ããU [
.
ãã[ \
Value
ãã\ a
.
ããa b

userLisman
ããb l
+
ããm n
$str
ãão z
+
ãã{ |
e
ãã} ~
.
ãã~ 
Messageãã Ü
)ããÜ á
;ããá à
}
åå 
}
éé 
}
èè (
multiplayerGameInformation
êê (
[
êê( )
idGame
êê) /
]
êê/ 0
.
êê0 1
lismanUsers
êê1 <
[
êê< =
colorLisman
êê= H
]
êêH I
.
êêI J
isLive
êêJ P
=
êêQ R
false
êêS X
;
êêX Y
if
ëë 
(
ëë 
playersLives
ëë 
==
ëë 
$num
ëë  
)
ëë  !
{
íí 

FinishGame
ìì 
(
ìì 
idGame
ìì !
)
ìì! "
;
ìì" #
}
îî 
}
ïï
 
public
óó 
void
óó 
Reconntection
óó !
(
óó" #
String
óó# )

userLisman
óó* 4
)
óó4 5
{
òò 	
var
ôô 

connection
ôô 
=
ôô 
OperationContext
ôô -
.
ôô- .
Current
ôô. 5
.
ôô5 6 
GetCallbackChannel
ôô6 H
<
ôôH I)
IMultiplayerManagerCallBack
ôôI d
>
ôôd e
(
ôôe f
)
ôôf g
;
ôôg h
if
öö 
(
öö #
connectionGameService
öö %
.
öö% &
ContainsKey
öö& 1
(
öö1 2

userLisman
öö2 <
)
öö< =
&&
öö> @#
connectionGameService
ööA V
[
ööV W

userLisman
ööW a
]
ööa b
==
ööc e
null
ööf j
)
ööj k
{
õõ #
connectionGameService
úú %
[
úú% &

userLisman
úú& 0
]
úú0 1
=
úú2 3

connection
úú4 >
;
úú> ?
}
ùù 
}
ûû 	
public
°° 
void
°° 
InitializeTest
°° "
(
°°" #
)
°°# $
{
¢¢ 	
List
££ 
<
££ 
String
££ 
>
££ 
playersList
££ $
=
££% &
new
££' *
List
££+ /
<
££/ 0
string
££0 6
>
££6 7
(
££7 8
)
££8 9
;
££9 :
playersList
§§ 
.
§§ 
Add
§§ 
(
§§ 
$str
§§ $
)
§§$ %
;
§§% &
playersList
•• 
.
•• 
Add
•• 
(
•• 
$str
•• "
)
••" #
;
••# $
playersList
¶¶ 
.
¶¶ 
Add
¶¶ 
(
¶¶ 
$str
¶¶ "
)
¶¶" #
;
¶¶# $#
connectionChatService
®® !
.
®®! "
Add
®®" %
(
®®% &
$str
®®& .
,
®®. /
null
®®0 4
)
®®4 5
;
®®5 6#
connectionChatService
©© !
.
©©! "
Add
©©" %
(
©©% &
$str
©©& ,
,
©©, -
null
©©. 2
)
©©2 3
;
©©3 4#
connectionChatService
™™ !
.
™™! "
Add
™™" %
(
™™% &
$str
™™& ,
,
™™, -
null
™™. 2
)
™™2 3
;
™™3 4 
logginsConnections
¨¨ 
.
¨¨ 
Add
¨¨ "
(
¨¨" #
$str
¨¨# )
,
¨¨) *
null
¨¨+ /
)
¨¨/ 0
;
¨¨0 1
listGamesOnline
ÆÆ 
.
ÆÆ 
Add
ÆÆ 
(
ÆÆ  
$num
ÆÆ  !
,
ÆÆ! "
playersList
ÆÆ# .
)
ÆÆ. /
;
ÆÆ/ 0
listGamesOnline
ØØ 
.
ØØ 
Add
ØØ 
(
ØØ  
$num
ØØ  !
,
ØØ! "
playersList
ØØ# .
)
ØØ. /
;
ØØ/ 0
InformationPlayer
±± 
info1
±± #
=
±±$ %
new
±±& )
InformationPlayer
±±* ;
(
±±; <
)
±±< =
;
±±= >
info1
≤≤ 
.
≤≤ 

userLisman
≤≤ 
=
≤≤ 
$str
≤≤ %
;
≤≤% &
info1
≥≥ 
.
≥≥ 
isLive
≥≥ 
=
≥≥ 
true
≥≥ 
;
≥≥  
info1
¥¥ 
.
¥¥ 
lifesLisman
¥¥ 
=
¥¥ 
$num
¥¥  !
;
¥¥! "
info1
µµ 
.
µµ 
scoreLisman
µµ 
=
µµ 
$num
µµ  !
;
µµ! "
InformationPlayer
∂∂ 
info2
∂∂ #
=
∂∂$ %
new
∂∂& )
InformationPlayer
∂∂* ;
(
∂∂; <
)
∂∂< =
;
∂∂= >
info2
∑∑ 
.
∑∑ 

userLisman
∑∑ 
=
∑∑ 
$str
∑∑ '
;
∑∑' (
info2
∏∏ 
.
∏∏ 
isLive
∏∏ 
=
∏∏ 
true
∏∏ 
;
∏∏  
info2
ππ 
.
ππ 
lifesLisman
ππ 
=
ππ 
$num
ππ  !
;
ππ! "
info2
∫∫ 
.
∫∫ 
scoreLisman
∫∫ 
=
∫∫ 
$num
∫∫  !
;
∫∫! "
InformationPlayer
ªª 
info3
ªª #
=
ªª$ %
new
ªª& )
InformationPlayer
ªª* ;
(
ªª; <
)
ªª< =
;
ªª= >
info3
ºº 
.
ºº 

userLisman
ºº 
=
ºº 
$str
ºº &
;
ºº& '
info3
ΩΩ 
.
ΩΩ 
isLive
ΩΩ 
=
ΩΩ 
true
ΩΩ 
;
ΩΩ  
info3
ææ 
.
ææ 
lifesLisman
ææ 
=
ææ 
$num
ææ  !
;
ææ! "
info3
øø 
.
øø 
scoreLisman
øø 
=
øø 
$num
øø  !
;
øø! "
InformationPlayer
¿¿ 
info4
¿¿ #
=
¿¿$ %
new
¿¿& )
InformationPlayer
¿¿* ;
(
¿¿; <
)
¿¿< =
;
¿¿= >
info4
¡¡ 
.
¡¡ 

userLisman
¡¡ 
=
¡¡ 
$str
¡¡ %
;
¡¡% &
info4
¬¬ 
.
¬¬ 
isLive
¬¬ 
=
¬¬ 
true
¬¬ 
;
¬¬  
info4
√√ 
.
√√ 
lifesLisman
√√ 
=
√√ 
$num
√√  !
;
√√! "
info4
ƒƒ 
.
ƒƒ 
scoreLisman
ƒƒ 
=
ƒƒ 
$num
ƒƒ  !
;
ƒƒ! "
ReadMapGame
∆∆ 
(
∆∆ 
)
∆∆ 
;
∆∆ 
Game
»» 
game
»» 
=
»» 
new
»» 
Game
»»  
(
»»  !
)
»»! "
;
»»" #
game
…… 
.
…… 
gameMap
…… 
=
…… 
GAMEMAP
…… "
;
……" #
game
   
.
   
lismanUsers
   
=
   
new
   "

Dictionary
  # -
<
  - .
int
  . 1
,
  1 2
InformationPlayer
  3 D
>
  D E
(
  E F
)
  F G
;
  G H
game
ÀÀ 
.
ÀÀ 
lismanUsers
ÀÀ 
.
ÀÀ 
Add
ÀÀ  
(
ÀÀ  !
$num
ÀÀ! "
,
ÀÀ" #
info1
ÀÀ$ )
)
ÀÀ) *
;
ÀÀ* +
game
ÃÃ 
.
ÃÃ 
lismanUsers
ÃÃ 
.
ÃÃ 
Add
ÃÃ  
(
ÃÃ  !
$num
ÃÃ! "
,
ÃÃ" #
info2
ÃÃ$ )
)
ÃÃ) *
;
ÃÃ* +
game
ÕÕ 
.
ÕÕ 
lismanUsers
ÕÕ 
.
ÕÕ 
Add
ÕÕ  
(
ÕÕ  !
$num
ÕÕ! "
,
ÕÕ" #
info3
ÕÕ$ )
)
ÕÕ) *
;
ÕÕ* +
game
ŒŒ 
.
ŒŒ 
lismanUsers
ŒŒ 
.
ŒŒ 
Add
ŒŒ  
(
ŒŒ  !
$num
ŒŒ! "
,
ŒŒ" #
info4
ŒŒ$ )
)
ŒŒ) *
;
ŒŒ* +(
multiplayerGameInformation
–– &
.
––& '
Add
––' *
(
––* +
$num
––+ ,
,
––, -
game
––- 1
)
––1 2
;
––2 3
Game
““ 
game2
““ 
=
““ 
new
““ 
Game
““ !
(
““! "
)
““" #
;
““# $
game2
”” 
.
”” 
lismanUsers
”” 
=
”” 
new
””  #

Dictionary
””$ .
<
””. /
int
””/ 2
,
””2 3
InformationPlayer
””4 E
>
””E F
(
””F G
)
””G H
;
””H I(
multiplayerGameInformation
‘‘ &
.
‘‘& '
Add
‘‘' *
(
‘‘* +
$num
‘‘+ ,
,
‘‘, -
game2
‘‘. 3
)
‘‘3 4
;
‘‘4 5
}
ÿÿ 	
}
ŸŸ 
}⁄⁄ Ã
§C:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str (
)( )
]) *
[ 
assembly 	
:	 

AssemblyDescription 
( 
$str !
)! "
]" #
[		 
assembly		 	
:			 
!
AssemblyConfiguration		  
(		  !
$str		! #
)		# $
]		$ %
[

 
assembly

 	
:

	 

AssemblyCompany

 
(

 
$str

 
)

 
]

 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str *
)* +
]+ ,
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
["" 
assembly"" 	
:""	 

AssemblyVersion"" 
("" 
$str"" $
)""$ %
]""% &
[## 
assembly## 	
:##	 

AssemblyFileVersion## 
(## 
$str## (
)##( )
]##) *
[$$ 
assembly$$ 	
:$$	 

log4net$$ 
.$$ 
Config$$ 
.$$ 
XmlConfigurator$$ )
($$) *

ConfigFile$$* 4
=$$5 6
$str$$7 G
)$$G H
]$$H I