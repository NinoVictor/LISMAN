®E
òC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\ChatManager.cs
	namespace 	
LismanService
 
{ 
public		 

partial		 
class		 
LismanService		 &
:		' (
IChatManager		) 5
{		6 7
static

 

Dictionary

 
<

 
String

  
,

  ! 
IChatManagerCallBack

" 6
>

6 7!
connectionChatService

8 M
=

N O
new

P S

Dictionary

T ^
<

^ _
String

_ e
,

e f 
IChatManagerCallBack

g {
>

{ |
(

| }
)

} ~
;

~ 
public 
void 
JoinChat 
( 
string #
user$ (
,( )
int* -
idgame. 4
)4 5
{ 	
var 

connection 
= 
OperationContext -
.- .
Current. 5
.5 6
GetCallbackChannel6 H
<H I 
IChatManagerCallBackI ]
>] ^
(^ _
)_ `
;` a
if 
( !
connectionChatService %
.% &
ContainsKey& 1
(1 2
user2 6
)6 7
)7 8
{9 :!
connectionChatService %
[% &
user& *
]* +
=, -

connection. 8
;8 9
} 
else 
{ !
connectionChatService %
.% &
Add& )
() *
user* .
,. /

connection0 :
): ;
;; <
} 
foreach 
( 
var 
userGame !
in" $
listGamesOnline% 4
[4 5
idgame5 ;
]; <
)< =
{> ?!
connectionChatService %
[% &
userGame& .
]. /
./ 0
NotifyNumberPlayers0 C
(C D
listGamesOnlineD S
[S T
idgameT Z
]Z [
.[ \
Count\ a
)a b
;b c
if 
( 
userGame 
!= 
user  $
)$ %
{& '!
connectionChatService )
[) *
userGame* 2
]2 3
.3 4
NotifyJoinedPlayer4 F
(F G
userG K
)K L
;L M
} 
} 
}   	
public"" 
void"" 
	LeaveChat"" 
("" 
string"" $
user""% )
,"") *
int""+ .
idgame""/ 5
)""5 6
{""7 8
try## 
{## 
foreach$$ 
($$ 
var$$ 
userGame$$ %
in$$& (
listGamesOnline$$) 8
[$$8 9
idgame$$9 ?
]$$? @
)$$@ A
{$$B C!
connectionChatService%% )
[%%) *
userGame%%* 2
]%%2 3
.%%3 4
NotifyNumberPlayers%%4 G
(%%G H
listGamesOnline%%H W
[%%W X
idgame%%X ^
]%%^ _
.%%_ `
Count%%` e
)%%e f
;%%f g
}&& 
foreach'' 
('' 
var'' 
userGame'' %
in''& (
listGamesOnline'') 8
[''8 9
idgame''9 ?
]''? @
)''@ A
{''B C!
connectionChatService(( )
[(() *
userGame((* 2
]((2 3
.((3 4
NotifyLeftPlayer((4 D
(((D E
user((E I
)((I J
;((J K
}++ 
},, 
catch,, 
(,,  
KeyNotFoundException,, )
ex,,* ,
),,, -
{,,. /
Logger-- 
.-- 
log-- 
.-- 
Error--  
(--  !
$str--! 7
+--8 9
ex--: <
)--< =
;--= >
}.. 
}00 	
public33 
void33 
SendMessage33 
(33  
Message33  '
message33( /
,33/ 0
int331 4
idgame335 ;
)33; <
{44 	
foreach55 
(55 
var55 
userGame55 !
in55" $
listGamesOnline55% 4
[554 5
idgame555 ;
]55; <
)55< =
{55> ?!
connectionChatService66 )
[66) *
userGame66* 2
]662 3
.663 4
NotifyMessage664 A
(66A B
message66B I
)66I J
;66J K
}77 
}88 	
public:: 
void:: 
	StartGame:: 
(:: 
string:: $
user::% )
,::) *
int::+ .
idgame::/ 5
)::5 6
{;; 	
if<< 
(<< 
!<< &
multiplayerGameInformation<< +
.<<+ ,
ContainsKey<<, 7
(<<7 8
idgame<<8 >
)<<> ?
)<<? @
{== 
Game>> 
informationGame>> $
=>>% &
new>>' *
Game>>+ /
{?? 
gameMap@@ 
=@@ 
GAMEMAP@@ %
,@@% &
lismanUsersAA 
=AA  !
newAA" %

DictionaryAA& 0
<AA0 1
stringAA1 7
,AA7 8
InformationPlayerAA9 J
>AAJ K
(AAK L
)AAL M
}CC 
;CC &
multiplayerGameInformationDD *
.DD* +
AddDD+ .
(DD. /
idgameDD/ 5
,DD5 6
informationGameDD7 F
)DDF G
;DDG H
}EE 
foreachFF 
(FF 
varFF 
userGameFF !
inFF" $
listGamesOnlineFF% 4
[FF4 5
idgameFF5 ;
]FF; <
)FF< =
{FF> ?
ifHH 
(HH 
AssignColorPlayerHH %
(HH% &
idgameHH& ,
,HH, -
userGameHH. 6
)HH6 7
)HH7 8
{II !
connectionChatServiceJJ )
[JJ) *
userGameJJ* 2
]JJ2 3
.JJ3 4
InitGameJJ4 <
(JJ< =
)JJ= >
;JJ> ?
}KK 
}MM 
}NN 	
privatePP 
boolPP 
AssignColorPlayerPP &
(PP& '
intPP' *
idgamePP+ 1
,PP1 2
StringPP3 9
userPP: >
)PP> ?
{QQ 	
InformationPlayerRR 

infoPlayerRR (
=RR) *
newRR+ .
InformationPlayerRR/ @
(RR@ A
)RRA B
;RRB C
intSS 
indexSS 
=SS 
listGamesOnlineSS '
[SS' (
idgameSS( .
]SS. /
.SS/ 0
	FindIndexSS0 9
(SS9 :
uSS: ;
=>SS< >
uSS? @
==SSA C
userSSD H
)SSH I
;SSI J
boolTT 
resultTT 
=TT 
falseTT 
;TT  
switchUU 
(UU 
indexUU 
)UU 
{VV 
caseWW 
$numWW 
:WW 

infoPlayerXX 
.XX 
colorLismanXX *
=XX+ ,
LISMANYELLOWXX- 9
;XX9 :
breakYY 
;YY 
caseZZ 
$numZZ 
:ZZ 

infoPlayer[[ 
.[[ 
colorLisman[[ *
=[[+ ,

LISMANBLUE[[- 7
;[[7 8
break\\ 
;\\ 
case]] 
$num]] 
:]] 

infoPlayer^^ 
.^^ 
colorLisman^^ *
=^^+ ,
	LISMANRED^^- 6
;^^6 7
break__ 
;__ 
case`` 
$num`` 
:`` 

infoPlayeraa 
.aa 
colorLismanaa *
=aa+ ,
LISMANGREENaa- 8
;aa8 9
breakbb 
;bb 
}cc 

infoPlayerdd 
.dd 
lifesLismandd "
=dd# $
$numdd% &
;dd& '&
multiplayerGameInformationee &
[ee& '
idgameee' -
]ee- .
.ee. /
lismanUsersee/ :
.ee: ;
Addee; >
(ee> ?
useree? C
,eeC D

infoPlayereeE O
)eeO P
;eeP Q
ifgg 
(gg &
multiplayerGameInformationgg *
[gg* +
idgamegg+ 1
]gg1 2
.gg2 3
lismanUsersgg3 >
[gg> ?
usergg? C
]ggC D
.ggD E
colorLismanggE P
!=ggQ S
$numggT U
)ggU V
{hh 
resultii 
=ii 
trueii 
;ii 
}jj 
returnll 
resultll 
;ll 
}mm 	
}nn 
}oo ø,
òC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\GameManager.cs
	namespace 	
LismanService
 
{ 
public 

partial 
class 
LismanService &
:' (
IGameManager) 5
{6 7
static 

Dictionary 
< 
int 
, 
List "
<" #
String# )
>) *
>* +
listGamesOnline, ;
=< =
new> A

DictionaryB L
<L M
intM P
,P Q
ListQ U
<U V
StringV \
>\ ]
>] ^
(^ _
)_ `
;` a
public 
int 

CreateGame 
( 
string $
user% )
)) *
{ 	
int 
idgame 
= 
$num 
; 
try 
{ 
using 
( 
var 
dataBase #
=$ %
new& ) 
EntityModelContainer* >
(> ?
)? @
)@ A
{ 
var 
newGame 
=  !
new" %

DataAccess& 0
.0 1
Game1 5
{ 
Creation_date %
=& '
DateTime( 0
.0 1
Now1 4
,4 5
Status 
=  
true! %
,% &
Members 
=  !
new" %
List& *
<* +

DataAccess+ 5
.5 6
Account6 =
>= >
(> ?
)? @
,@ A
Last_update #
=$ %
DateTime& .
.. /
Now/ 2
} 
; 
try 
{ 
dataBase  
.  !
GameSet! (
.( )
Add) ,
(, -
newGame- 4
)4 5
;5 6
dataBase    
.    !
SaveChanges  ! ,
(  , -
)  - .
;  . /
}!! 
catch"" 
("" '
DbEntityValidationException"" 6
ex""7 9
)""9 :
{## 
Logger$$ 
.$$ 
log$$ "
.$$" #
Error$$# (
($$( )
ex$$) +
)$$+ ,
;$$, -
return%% 
-%%  
$num%%  !
;%%! "
}&& 
idgame(( 
=(( 
dataBase(( %
.((% &
GameSet((& -
.((- .
Max((. 1
(((1 2
u((2 3
=>((4 6
u((7 8
.((8 9
Id((9 ;
)((; <
;((< =
})) 
}** 
catch++ 
(++ 
	Exception++ 
ex++ 
)++  
{,, 
Logger-- 
.-- 
log-- 
.-- 
Error--  
(--  !
$str--! 7
+--8 9
ex--: <
.--< =
Message--= D
)--D E
;--E F
}.. 
var11 

listPlayer11 
=11 
new11  
List11! %
<11% &
String11& ,
>11, -
(11- .
)11. /
;11/ 0
listGamesOnline22 
.22 
Add22 
(22  
idgame22  &
,22& '

listPlayer22( 2
)222 3
;223 4
listGamesOnline33 
[33 
idgame33 "
]33" #
.33# $
Add33$ '
(33' (
user33( ,
)33, -
;33- .
return44 
idgame44 
;44 
}66 	
public88 
int88 
JoinGame88 
(88 
string88 "
user88# '
)88' (
{99 	
foreach:: 
(:: 
KeyValuePair:: !
<::! "
int::" %
,::% &
List::' +
<::+ ,
String::, 2
>::2 3
>::3 4
games::5 :
in::; =
listGamesOnline::> M
)::M N
{::O P
if;; 
(;; 
games;; 
.;; 
Value;; 
.;; 
Count;; $
<;;% &
$num;;' (
);;( )
{;;* +
games<< 
.<< 
Value<< 
.<<  
Add<<  #
(<<# $
user<<$ (
)<<( )
;<<) *
return== 
games==  
.==  !
Key==! $
;==$ %
}>> 
}?? 
returnAA 
-AA 
$numAA 
;AA 
}BB 	
publicDD 
intDD 
	LeaveGameDD 
(DD 
stringDD #
userDD$ (
,DD( )
intDD* -
gameDD. 2
)DD2 3
{EE 	
intFF 
isDeleteFF 
=FF 
$numFF 
;FF 
varGG 
listGameUserNamesGG !
=GG" #
listGamesOnlineGG$ 3
[GG3 4
gameGG4 8
]GG8 9
;GG9 :
listGameUserNamesHH !
.HH! "
RemoveHH" (
(HH( )
userHH) -
)HH- .
;HH. /
ifII 
(II 
listGameUserNamesII %
.II% &
CountII& +
==II, .
$numII/ 0
)II0 1
{II2 3
listGamesOnlineJJ #
.JJ# $
RemoveJJ$ *
(JJ* +
gameJJ+ /
)JJ/ 0
;JJ0 1
}KK 
returnLL 
isDeleteLL 
;LL 
}MM 	
}NN 
}OO æ"
ôC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\IChatManager.cs
	namespace		 	
LismanService		
 
{		 
[

 
ServiceContract

 
(

 
CallbackContract

 %
=

& '
typeof

( .
(

. / 
IChatManagerCallBack

/ C
)

C D
)

D E
]

E F
public 

	interface 
IChatManager !
{" #
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
SendMessage 
( 
Message  
message! (
,( )
int* -
Game. 2
)2 3
;3 4
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
JoinChat 
( 
String 
user !
,! "
int# &
idgame' -
)- .
;. /
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
	LeaveChat 
( 
String 
user "
," #
int$ '
idgame( .
). /
;/ 0
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
	StartGame 
( 
String 
user "
," #
int$ '
idgame( .
). /
;/ 0
} 
[ 
ServiceContract 
] 
public 

	interface  
IChatManagerCallBack )
{* +
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyMessage 
( 
Message "
message# *
)* +
;+ ,
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyJoinedPlayer 
(  
String  &
user' +
)+ ,
;, -
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyNumberPlayers  
(  !
int! $
numberPlayers% 2
)2 3
;3 4
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyLeftPlayer 
( 
String $
user% )
)) *
;* +
[   	
OperationContract  	 
(   
IsOneWay   #
=  $ %
true  & *
)  * +
]  + ,
void!! 
InitGame!! 
(!! 
)!! 
;!! 
}"" 
[$$ 
DataContract$$ 
]$$ 
public%% 

partial%% 
class%% 
Message%%  
{%%! "
[&& 	

DataMember&&	 
]&& 
public'' 
int'' 
Id'' 
{'' 
get'' 
;'' 
set''  
;''  !
}''" #
[(( 	

DataMember((	 
](( 
public)) 
string)) 
Text)) 
{)) 
get))  
;))  !
set))" %
;))% &
}))' (
[** 	

DataMember**	 
]** 
public++ 
System++ 
.++ 
DateTime++ 
Creation_date++ ,
{++- .
get++/ 2
;++2 3
set++4 7
;++7 8
}++9 :
[-- 	

DataMember--	 
]-- 
public.. 
virtual.. 
Account.. 
Account.. &
{..' (
get..) ,
;.., -
set... 1
;..1 2
}..3 4
}// 
}00 ‡
ôC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\IGameManager.cs
	namespace		 	
LismanService		
 
{		 
[ 
ServiceContract 
] 
public 

	interface 
IGameManager !
{" #
[ 	
OperationContract	 
] 
int 

CreateGame 
( 
String 
user "
)" #
;# $
[ 	
OperationContract	 
] 
int 
JoinGame 
( 
String 
user  
)  !
;! "
[ 	
OperationContract	 
] 
int 
	LeaveGame 
( 
String 
user !
,! "
int# &
game' +
)+ ,
;, -
} 
} À9
†C:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\IMultiplayerManager.cs
	namespace 	
LismanService
 
{ 
[ 
ServiceContract 
( 
CallbackContract %
=& '
typeof( .
(. /'
IMultiplayerManagerCallBack/ J
)J K
)K L
]L M
public 

	interface 
IMultiplayerManager (
{) *
[		 	
OperationContract			 
(		 
IsOneWay		 #
=		$ %
true		& *
)		* +
]		+ ,
void

 
JoinMultiplayerGame

  
(

  !
String

! '
user

( ,
,

, -
int

. 1
idgame

2 8
)

8 9
;

9 :
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 

MoveLisman 
( 
int 
idGame "
," #
String$ *
user+ /
,/ 0
int1 4
initialPositionX5 E
,E F
intG J
initialPositionYK [
,[ \
int] `
finalPositionXa o
,o p
intq t
finalPositionY	u É
,
É Ñ
String
Ö ã
goTo
å ê
)
ê ë
;
ë í
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
RemovePower 
( 
String 
user  $
)$ %
;% &
} 
[ 
ServiceContract 
] 
public 

	interface '
IMultiplayerManagerCallBack 1
{2 3
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void #
PrintInformationPlayers $
($ %

Dictionary% /
</ 0
String0 6
,6 7
InformationPlayer7 H
>H I
listPlayersJ U
)U V
;V W
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyColorPlayer 
( 
int "
colorPlayer# .
,. /
String0 6
user7 ;
); <
;< =
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyLismanMoved 
( 
int "
colorPlayer# .
,. /
int0 3
	positionX4 =
,= >
int? B
	positionYC L
,L M
StringM S
goToT X
)X Y
;Y Z
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void &
NotifyDisappearedPowerPill '
(' (
int( +
	positionX, 5
,5 6
int7 :
	positionY; D
)D E
;E F
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyUpdateScore 
( 
int "
colorPlayer# .
,. /
int0 3
scorePlayer4 ?
)? @
;@ A
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void 
NotifyUpdateLifes 
( 
int "
colorPlayer# .
,. /
int0 3

lifePlayer4 >
)> ?
;? @
[ 	
OperationContract	 
( 
IsOneWay #
=$ %
true& *
)* +
]+ ,
void   
NotifyPlayerIsDead   
(    
int    #
colorPlayer  $ /
)  / 0
;  0 1
[!! 	
OperationContract!!	 
(!! 
IsOneWay!! #
=!!$ %
true!!& *
)!!* +
]!!+ ,
void"" )
ReturnLismanToInitialPosition"" *
(""* +
int""+ .
colorPlayer""/ :
,"": ;
int""< ?
	positionX""@ I
,""I J
int""K N
	positionY""O X
)""X Y
;""Y Z
[## 	
OperationContract##	 
(## 
IsOneWay## #
=##$ %
true##& *
)##* +
]##+ ,
void%% 
UpdateLismanSpeed%% 
(%% 
int%% "
speed%%# (
,%%( )
bool%%* .
hasPower%%/ 7
)%%7 8
;%%8 9
[&& 	
OperationContract&&	 
(&& 
IsOneWay&& #
=&&$ %
true&&& *
)&&* +
]&&+ ,
void'' 
NotifyEndGame'' 
('' 
String'' !
winner''" (
)''( )
;'') *
})) 
[++ 
DataContract++ 
]++ 
public,, 

class,, 
Game,, 
{-- 
[.. 	

DataMember..	 
].. 
public// 
int// 
[// 
,// 
]// 
gameMap// 
{//  
get//! $
;//$ %
set//& )
;//) *
}//+ ,
[00 	

DataMember00	 
]00 
public11 

Dictionary11 
<11 
String11  
,11  !
InformationPlayer11" 3
>113 4
lismanUsers115 @
{11A B
get11C F
;11F G
set11H K
;11K L
}11M N
}33 
[55 
DataContract55 
]55 
public66 

class66 
InformationPlayer66 "
{77 
[88 	

DataMember88	 
]88 
public99 
int99 
colorLisman99 
{99  
get99! $
;99$ %
set99& )
;99) *
}99+ ,
[:: 	

DataMember::	 
]:: 
public;; 
int;; 
lifesLisman;; 
{;;  
get;;! $
;;;$ %
set;;& )
;;;) *
};;+ ,
[<< 	

DataMember<<	 
]<< 
public== 
int== 
scoreLisman== 
{==  
get==! $
;==$ %
set==& )
;==) *
}==+ ,
[>> 	

DataMember>>	 
]>> 
public?? 
bool?? 
hasPower?? 
{?? 
get?? "
;??" #
set??$ '
;??' (
}??) *
[@@ 	

DataMember@@	 
]@@ 
publicAA 
boolAA 
isLiveAA 
{AA 
getAA  
;AA  !
setAA" %
;AA% &
}AA' (
}BB 
}DD ÷7
öC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\LismanService.cs
	namespace

 	
LismanService


 
{

 
[ 
ServiceBehavior 
( 
InstanceContextMode (
=) *
InstanceContextMode+ >
.> ?

PerSession? I
)I J
]J K
public 

partial 
class 
LismanService &
:' (
IAccountManager) 8
{9 :
public 
int 

AddAccount 
( 
Account %
account& -
)- .
{ 	
try 
{ 
using 
( 
var 
dataBase #
=$ %
new& ) 
EntityModelContainer* >
(> ?
)? @
)@ A
{B C
var 

newAccount "
=# $
new% (

DataAccess) 3
.3 4
Account4 ;
{ 
User 
= 
account &
.& '
User' +
,+ ,
Password  
=! "
account# *
.* +
Password+ 3
,3 4
Registration_date )
=* +
account, 3
.3 4
Registration_date4 E
,E F
Key_confirmation (
=) *
account+ 2
.2 3
Key_confirmation3 C
,C D
Player 
=  
new! $

DataAccess% /
./ 0
Player0 6
{ 

First_name &
=' (
account) 0
.0 1
Player1 7
.7 8

First_name8 B
,B C
	Last_name %
=& '
account( /
./ 0
Player0 6
.6 7
	Last_name7 @
,@ A
Email !
=" #
account$ +
.+ ,
Player, 2
.2 3
Email3 8
} 
, 
Record 
=  
new! $

DataAccess% /
./ 0
Record0 6
{ 
Mult_best_score   +
=  , -
$num  . /
,  / 0
Mult_games_played!! -
=!!. /
$num!!0 1
,!!1 2
Mult_games_won"" *
=""+ ,
$num""- .
,"". /
Story_best_score## ,
=##- .
$num##/ 0
}$$ 
}%% 
;%% 
try&& 
{&& 
dataBase''  
.''  !

AccountSet''! +
.''+ ,
Add'', /
(''/ 0

newAccount''0 :
)'': ;
;''; <
return(( 
dataBase(( '
.((' (
SaveChanges((( 3
(((3 4
)((4 5
;((5 6
}** 
catch** 
(** '
DbEntityValidationException** 6
ex**7 9
)**9 :
{**; <
Logger++ 
.++ 
log++ "
.++" #
Error++# (
(++( )
ex++) +
)+++ ,
;++, -
return,, 
-,,  
$num,,  !
;,,! "
}-- 
}.. 
}// 
catch// 
(// 
	Exception// 
ex// 
)//  
{//! "
Logger00 
.00 
log00 
.00 
Error00  
(00  !
ex00! #
)00# $
;00$ %
return11 
-11 
$num11 
;11 
}22 
}33 	
public55 
Account55 
GetAccountById55 %
(55% &
int55& )
id55* ,
)55, -
{66 	
throw77 
new77 #
NotImplementedException77 -
(77- .
)77. /
;77/ 0
}88 	
public:: 
List:: 
<:: 
Account:: 
>:: 
GetAccounts:: (
(::( )
)::) *
{;; 	
throw<< 
new<< #
NotImplementedException<< -
(<<- .
)<<. /
;<</ 0
}== 	
public?? 
List?? 
<?? 
Record?? 
>?? 

GetRecords?? &
(??& '
)??' (
{@@ 	
tryAA 
{AA 
usingBB 
(BB 
varBB 
dataBaseBB #
=BB$ %
newBB& ) 
EntityModelContainerBB* >
(BB> ?
)BB? @
)BB@ A
{BBB C
returnCC 
dataBaseCC #
.CC# $
	RecordSetCC$ -
.CC- .
SelectCC. 4
(CC4 5
uCC5 6
=>CC7 9
newCC: =
RecordCC> D
{DD 
IdFF 
=FF 
uFF 
.FF 
IdFF !
,FF! "
Mult_best_scoreGG '
=GG( )
uGG* +
.GG+ ,
Mult_best_scoreGG, ;
,GG; <
Mult_games_playedHH )
=HH* +
uHH, -
.HH- .
Mult_games_playedHH. ?
,HH? @
Mult_games_wonII &
=II' (
uII) *
.II* +
Mult_games_wonII+ 9
,II9 :
Story_best_scoreJJ (
=JJ) *
uJJ+ ,
.JJ, -
Story_best_scoreJJ- =
,JJ= >
AccountKK 
=KK  !
newKK" %
AccountKK& -
{LL 
IdMM 
=MM  
uMM! "
.MM" #
IdMM# %
,MM% &
UserNN  
=NN! "
uNN# $
.NN$ %
AccountNN% ,
.NN, -
UserNN- 1
,NN1 2
PasswordOO $
=OO% &
uOO' (
.OO( )
AccountOO) 0
.OO0 1
PasswordOO1 9
,OO9 :
Registration_datePP -
=PP. /
uPP0 1
.PP1 2
AccountPP2 9
.PP9 :
Registration_datePP: K
,PPK L
Key_confirmationQQ ,
=QQ- .
uQQ/ 0
.QQ0 1
AccountQQ1 8
.QQ8 9
Key_confirmationQQ9 I
}RR 
}TT 
)TT 
.TT 
OrderByDescendingTT (
(TT( )
xTT) *
=>TT+ -
xTT. /
.TT/ 0
Story_best_scoreTT0 @
)TT@ A
.TTA B
ToListTTB H
(TTH I
)TTI J
;TTJ K
}UU 
}VV 
catchVV 
(VV 
	ExceptionVV 
exVV 
)VV  
{VV! "
LoggerWW 
.WW 
logWW 
.WW 
ErrorWW  
(WW  !
exWW! #
)WW# $
;WW$ %
returnXX 
nullXX 
;XX 
}YY 
}ZZ 	
public\\ 
void\\ 
test\\ 
(\\ 
string\\ 
message\\  '
)\\' (
{]] 	
throw^^ 
new^^ #
NotImplementedException^^ -
(^^- .
)^^. /
;^^/ 0
}__ 	
}`` 
}aa ’3
úC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\IAccountManager.cs
	namespace 	
LismanService
 
{ 
[ 
ServiceContract 
] 
public 

	interface 
IAccountManager $
{% &
[ 	
OperationContract	 
] 
int 

AddAccount 
( 
Account 
account &
)& '
;' (
[ 	
OperationContract	 
] 
List 
< 
Account 
> 
GetAccounts !
(! "
)" #
;# $
[ 	
OperationContract	 
] 
Account 
GetAccountById 
( 
int "
id# %
)% &
;& '
[ 	
OperationContract	 
] 
List 
< 
Record 
> 

GetRecords 
(  
)  !
;! "
} 
[ 
ServiceContract 
] 
public 

	interface 
ILoginManager "
{# $
[ 	
OperationContract	 
] 
Account 
LoginAccount 
( 
String #
user$ (
,( )
String* 0
password1 9
)9 :
;: ;
[ 	
OperationContract	 
] 
int 
LogoutAccount 
( 
String  
user! %
)% &
;& '
[   	
OperationContract  	 
]   
bool!! 
UserNameExists!! 
(!! 
String!! "
username!!# +
)!!+ ,
;!!, -
["" 	
OperationContract""	 
]"" 
bool## 
EmailExists## 
(## 
String## 
emailAdress##  +
)##+ ,
;##, -
}$$ 
['' 
DataContract'' 
]'' 
public(( 

partial(( 
class(( 
Account((  
{((! "
[)) 	

DataMember))	 
])) 
public** 
int** 
Id** 
{** 
get** 
;** 
set**  
;**  !
}**" #
[++ 	

DataMember++	 
]++ 
public,, 
string,, 
User,, 
{,, 
get,,  
;,,  !
set,," %
;,,% &
},,' (
[-- 	

DataMember--	 
]-- 
public.. 
string.. 
Password.. 
{..  
get..! $
;..$ %
set..& )
;..) *
}..+ ,
[// 	

DataMember//	 
]// 
public00 
string00 
Key_confirmation00 &
{00' (
get00) ,
;00, -
set00. 1
;001 2
}003 4
[11 	

DataMember11	 
]11 
public22 
string22 
Registration_date22 '
{22( )
get22* -
;22- .
set22/ 2
;222 3
}224 5
[33 	

DataMember33	 
]33 
public44 
virtual44 
Player44 
Player44 $
{44% &
get44' *
;44* +
set44, /
;44/ 0
}441 2
[55 	

DataMember55	 
]55 
public66 
virtual66 
Record66 
Record66 $
{66% &
get66' *
;66* +
set66, /
;66/ 0
}661 2
}77 
public88 

partial88 
class88 
Player88 
{88  !
[99 	

DataMember99	 
]99 
public:: 
int:: 
Id:: 
{:: 
get:: 
;:: 
set::  
;::  !
}::" #
[;; 	

DataMember;;	 
];; 
public<< 
string<< 

First_name<<  
{<<! "
get<<# &
;<<& '
set<<( +
;<<+ ,
}<<- .
[== 	

DataMember==	 
]== 
public>> 
string>> 
	Last_name>> 
{>>  !
get>>" %
;>>% &
set>>' *
;>>* +
}>>, -
[?? 	

DataMember??	 
]?? 
public@@ 
string@@ 
Email@@ 
{@@ 
get@@ !
;@@! "
set@@# &
;@@& '
}@@( )
[AA 	

DataMemberAA	 
]AA 
publicBB 
virtualBB 
AccountBB 
AccountBB &
{BB' (
getBB) ,
;BB, -
setBB. 1
;BB1 2
}BB3 4
}CC 
publicEE 

partialEE 
classEE 
RecordEE 
{EE  !
[FF 	

DataMemberFF	 
]FF 
publicGG 
intGG 
IdGG 
{GG 
getGG 
;GG 
setGG  
;GG  !
}GG" #
[HH 	

DataMemberHH	 
]HH 
publicII 
NullableII 
<II 
intII 
>II 
Mult_best_scoreII ,
{II- .
getII/ 2
;II2 3
setII4 7
;II7 8
}II9 :
[JJ 	

DataMemberJJ	 
]JJ 
publicKK 
NullableKK 
<KK 
intKK 
>KK 
Story_best_scoreKK -
{KK. /
getKK0 3
;KK3 4
setKK5 8
;KK8 9
}KK: ;
[LL 	

DataMemberLL	 
]LL 
publicMM 
NullableMM 
<MM 
intMM 
>MM 
Mult_games_playedMM .
{MM/ 0
getMM1 4
;MM4 5
setMM6 9
;MM9 :
}MM; <
[NN 	

DataMemberNN	 
]NN 
publicOO 
NullableOO 
<OO 
intOO 
>OO 
Mult_games_wonOO +
{OO, -
getOO. 1
;OO1 2
setOO3 6
;OO6 7
}OO8 9
[PP 	

DataMemberPP	 
]PP 
publicQQ 
virtualQQ 
AccountQQ 
AccountQQ &
{QQ' (
getQQ) ,
;QQ, -
setQQ. 1
;QQ1 2
}QQ3 4
}RR 
}SS ¶
ìC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\Logger.cs
	namespace 	
LismanService
 
{ 
class 	
Logger
 
{ 
public		 
static		 
readonly		 
log4net		 &
.		& '
ILog		' +
log		, /
=		0 1
log4net		2 9
.		9 :

LogManager		: D
.		D E
	GetLogger		E N
(		N O
System		O U
.		U V

Reflection		V `
.		` a

MethodBase		a k
.		k l
GetCurrentMethod		l |
(		| }
)		} ~
.		~ 
DeclaringType			 å
)
		å ç
;
		ç é
}

 
} æD
ôC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\LoginManager.cs
	namespace 	
LismanService
 
{ 
public 

partial 
class 
LismanService &
:' (
ILoginManager) 6
{7 8
public 
bool 
EmailExists 
(  
string  &
emailAdress' 2
)2 3
{ 	
try 
{ 
using 
( 
var 
dataBase #
=$ %
new& ) 
EntityModelContainer* >
(> ?
)? @
)@ A
{B C
int 
exists 
=  
dataBase! )
.) *
	PlayerSet* 3
.3 4
Where4 9
(9 :
u: ;
=>< >
u? @
.@ A
EmailA F
==G I
emailAdressJ U
)U V
.V W
CountW \
(\ ]
)] ^
;^ _
if 
( 
exists 
>  
$num! "
)" #
{$ %
return 
true #
;# $
} 
} 
} 
catch 
( 
	Exception 
ex !
)! "
{# $
Logger 
. 
log 
. 
Error  
(  !
ex! #
)# $
;$ %
} 
return 
false 
; 
} 	
public 
Account 
LoginAccount #
(# $
string$ *
user+ /
,/ 0
string1 7
password8 @
)@ A
{ 	
try 
{ 
using   
(   
var   
dataBase   #
=  $ %
new  & ) 
EntityModelContainer  * >
(  > ?
)  ? @
)  @ A
{  B C
int!! 
exists!! 
=!!  
dataBase!!! )
.!!) *

AccountSet!!* 4
.!!4 5
Where!!5 :
(!!: ;
u!!; <
=>!!= ?
u!!@ A
.!!A B
User!!B F
==!!G I
user!!J N
&!!O P
u!!Q R
.!!R S
Password!!S [
==!!\ ^
password!!_ g
)!!g h
.!!h i
Count!!i n
(!!n o
)!!o p
;!!p q
if"" 
("" 
exists"" 
>""  
$num""! "
)""" #
{""$ %
var## 

newAccount## &
=##' (
dataBase##) 1
.##1 2

AccountSet##2 <
.##< =
Where##= B
(##B C
u##C D
=>##E G
u##H I
.##I J
User##J N
==##O Q
user##R V
&##W X
u##Y Z
.##Z [
Password##[ c
==##d f
password##g o
)##o p
.##p q
Select##q w
(##w x
u##x y
=>##z |
new	##} Ä
Account
##Å à
{$$ 
Id%% 
=%%  
u%%! "
.%%" #
Id%%# %
,%%% &
User&&  
=&&! "
u&&# $
.&&$ %
User&&% )
,&&) *
Password'' $
=''% &
u''' (
.''( )
Password'') 1
,''1 2
Registration_date(( -
=((. /
u((0 1
.((1 2
Registration_date((2 C
,((C D
Key_confirmation)) ,
=))- .
u))/ 0
.))0 1
Key_confirmation))1 A
}** 
)** 
.** 
FirstOrDefault** )
(**) *
)*** +
;**+ ,
if++ 
(++ 

newAccount++ %
!=++& (
null++) -
)++- .
{++/ 0
if,, 
(,,  
!,,  !!
connectionChatService,,! 6
.,,6 7
ContainsKey,,7 B
(,,B C
user,,C G
),,G H
),,H I
{,,J K!
connectionChatService--  5
.--5 6
Add--6 9
(--9 :
user--: >
,--> ?
null--@ D
)--D E
;--E F
}.. 
Console// #
.//# $
	WriteLine//$ -
(//- .
$str//. K
,//K L

newAccount//M W
.//W X
User//X \
,//\ ]
DateTime//^ f
.//f g
Now//g j
)//j k
;//k l
}11 
return22 

newAccount22 )
;22) *
}33 
else33 
{33 
return44 
null44 #
;44# $
}55 
}66 
}77 
catch77 
(77 
	Exception77 
ex77 !
)77! "
{77# $
Logger88 
.88 
log88 
.88 
Error88  
(88  !
ex88! #
.88# $
Message88$ +
)88+ ,
;88, -
return99 
null99 
;99 
}:: 
};; 	
public== 
int== 
LogoutAccount==  
(==  !
string==! '
user==( ,
)==, -
{>> 	
if?? 
(?? !
connectionChatService?? %
.??% &
ContainsKey??& 1
(??1 2
user??2 6
)??6 7
)??7 8
{??9 :!
connectionChatService@@ %
.@@% &
Remove@@& ,
(@@, -
user@@- 1
)@@1 2
;@@2 3
}AA 
returnBB 
$numBB 
;BB 
}CC 	
publicEE 
boolEE 
UserNameExistsEE "
(EE" #
stringEE# )
usernameEE* 2
)EE2 3
{FF 	
tryGG 
{GG 
usingHH 
(HH 
varHH 
dataBaseHH #
=HH$ %
newHH& ) 
EntityModelContainerHH* >
(HH> ?
)HH? @
)HH@ A
{HHB C
intII 
existsII 
=II  
dataBaseII! )
.II) *

AccountSetII* 4
.II4 5
WhereII5 :
(II: ;
uII; <
=>II= ?
uII@ A
.IIA B
UserIIB F
==IIG I
usernameIIJ R
)IIR S
.IIS T
CountIIT Y
(IIY Z
)IIZ [
;II[ \
ifJJ 
(JJ 
existsJJ 
>JJ  
$numJJ! "
)JJ" #
{JJ$ %
returnKK 
trueKK #
;KK# $
}LL 
}MM 
}NN 
catchNN 
(NN 
	ExceptionNN 
exNN !
)NN! "
{NN# $
LoggerOO 
.OO 
logOO 
.OO 
ErrorOO  
(OO  !
exOO! #
)OO# $
;OO$ %
}PP 
returnQQ 
falseQQ 
;QQ 
}RR 	
publicUU 
AccountUU 
GetAccountByUserUU '
(UU' (
stringUU( .
userUU/ 3
)UU3 4
{VV 	
tryWW 
{WW 
usingXX 
(XX 
varXX 
dataBaseXX #
=XX$ %
newXX& ) 
EntityModelContainerXX* >
(XX> ?
)XX? @
)XX@ A
{XXB C
returnYY 
dataBaseYY #
.YY# $

AccountSetYY$ .
.YY. /
WhereYY/ 4
(YY4 5
uYY5 6
=>YY7 9
uYY: ;
.YY; <
UserYY< @
==YYA C
userYYD H
)YYH I
.YYI J
SelectYYJ P
(YYP Q
uYYQ R
=>YYS U
newYYV Y
AccountYYZ a
{ZZ 
Id[[ 
=[[ 
u[[ 
.[[ 
Id[[ !
,[[! "
User\\ 
=\\ 
u\\  
.\\  !
User\\! %
,\\% &
Password]]  
=]]! "
u]]# $
.]]$ %
Password]]% -
,]]- .
Registration_date^^ )
=^^* +
u^^, -
.^^- .
Registration_date^^. ?
,^^? @
}`` 
)`` 
.`` 
FirstOrDefault`` %
(``% &
)``& '
;``' (
}aa 
}bb 
catchbb 
(bb 
	Exceptionbb 
exbb 
)bb  
{bb! "
Loggercc 
.cc 
logcc 
.cc 
Errorcc  
(cc  !
excc! #
)cc# $
;cc$ %
returndd 
nulldd 
;dd 
}ee 
}ff 	
}gg 
}hh µ–
üC:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\MultiplayerManager.cs
	namespace		 	
LismanService		
 
{

 
public 

partial 
class 
LismanService &
:' (
IMultiplayerManager) <
{ 
static 
int 
[ 
, 
] 
GAMEMAP 
= 
new  #
int$ '
[' (
$num( *
,* +
$num, .
]. /
;/ 0
const 
int 
EMPTYBOX 
= 
$num 
; 
const 
int 
	POWERPILL 
= 
$num 
;  
const 
int 
LISMANYELLOW 
=  
$num! "
;" #
const 
int 
	LISMANRED 
= 
$num 
;  
const 
int 

LISMANBLUE 
= 
$num  
;  !
const 
int 
LISMANGREEN 
= 
$num  !
;! "
const 
int 
GHOST 
= 
$num 
; 
int 
[ 
] #
COORDINATESLISMANYELLOW %
=& '
new( +
int, /
[/ 0
$num0 1
]1 2
{3 4
$num5 6
,6 7
$num8 9
}: ;
;; <
int 
[ 
]  
COORDINATESLISMANRED "
=# $
new% (
int) ,
[, -
$num- .
]. /
{0 1
$num2 4
,4 5
$num6 7
}8 9
;9 :
int 
[ 
] !
COORDINATESLISMANBLUE #
=$ %
new& )
int* -
[- .
$num. /
]/ 0
{1 2
$num3 4
,4 5
$num6 8
}9 :
;: ;
int 
[ 
] "
COORDINATESLISMANGREEN $
=% &
new' *
int+ .
[. /
$num/ 0
]0 1
{2 3
$num4 6
,6 7
$num8 :
}; <
;< =
const 
int 
POINTSPOWERPILL !
=" #
$num$ '
;' (
const 
int 
POINTSEATLISMAN !
=" #
$num$ '
;' (
const 
int 
SPEEDNORMAL 
= 
$num  #
;# $
const 
int 
SPEEDPOWERFUL 
=  !
$num" %
;% &
String"" 
parentDirectory"" 
=""  
	Directory""! *
.""* +
	GetParent""+ 4
(""4 5
	Directory""5 >
.""> ?
GetCurrentDirectory""? R
(""R S
)""S T
)""T U
.""U V
Parent""V \
.""\ ]
FullName""] e
;""e f
static%% 

Dictionary%% 
<%% 
String%%  
,%%  !'
IMultiplayerManagerCallBack%%" =
>%%= >!
connectionGameService%%? T
=%%U V
new%%W Z

Dictionary%%[ e
<%%e f
String%%f l
,%%l m(
IMultiplayerManagerCallBack	%%n â
>
%%â ä
(
%%ä ã
)
%%ã å
;
%%å ç
static&& 

Dictionary&& 
<&& 
int&& 
,&& 
Game&& #
>&&# $&
multiplayerGameInformation&&% ?
=&&@ A
new&&B E

Dictionary&&F P
<&&P Q
int&&Q T
,&&T U
Game&&V Z
>&&Z [
(&&[ \
)&&\ ]
;&&] ^
public)) 
void)) 
JoinMultiplayerGame)) '
())' (
string))( .
user))/ 3
,))3 4
int))5 8
idgame))9 ?
)))? @
{** 	
var,, 

connection,, 
=,, 
OperationContext,, -
.,,- .
Current,,. 5
.,,5 6
GetCallbackChannel,,6 H
<,,H I'
IMultiplayerManagerCallBack,,I d
>,,d e
(,,e f
),,f g
;,,g h
if-- 
(-- !
connectionGameService-- %
.--% &
ContainsKey--& 1
(--1 2
user--2 6
)--6 7
)--7 8
{.. !
connectionGameService// %
[//% &
user//& *
]//* +
=//, -

connection//. 8
;//8 9
}00 
else11 
{22 !
connectionGameService33 %
.33% &
Add33& )
(33) *
user33* .
,33. /

connection330 :
)33: ;
;33; <
}44 !
connectionGameService55 !
[55! "
user55" &
]55& '
.55' (
NotifyColorPlayer55( 9
(559 :&
multiplayerGameInformation55: T
[55T U
idgame55U [
]55[ \
.55\ ]
lismanUsers55] h
[55h i
user55i m
]55m n
.55n o
colorLisman55o z
,55z {
user	55| Ä
)
55Ä Å
;
55Å Ç!
connectionGameService66 !
[66! "
user66" &
]66& '
.66' (#
PrintInformationPlayers66( ?
(66? @&
multiplayerGameInformation66@ Z
[66Z [
idgame66[ a
]66a b
.66b c
lismanUsers66c n
)66n o
;66o p
SaveLastUpdate88 
(88 
idgame88 !
)88! "
;88" #
}99 	
public<< 
void<< 

MoveLisman<< 
(<< 
int<< "
idgame<<# )
,<<) *
String<<+ 1
user<<2 6
,<<6 7
int<<8 ;
initialPositionX<<< L
,<<L M
int<<N Q
initialPositionY<<R b
,<<b c
int<<d g
finalPositionX<<h v
,<<v w
int<<x {
finalPositionY	<<| ä
,
<<ä ã
String
<<å í
goTo
<<ì ó
)
<<ó ò
{== 	
int>> 
valueBox>> 
=>> 
GetValueBox>> &
(>>& '
idgame>>' -
,>>- .
finalPositionX>>/ =
,>>= >
finalPositionY>>? M
)>>M N
;>>N O
String?? 
	userEnemy?? 
=?? 
null?? #
;??# $
switchAA 
(AA 
valueBoxAA 
)AA 
{BB 
caseCC 
EMPTYBOXCC 
:CC #
MoveLismanToNewPositionDD +
(DD+ ,
idgameDD, 2
,DD2 3
userDD4 8
,DD8 9
initialPositionXDD9 I
,DDI J
initialPositionYDDJ Z
,DDZ [
finalPositionXDD\ j
,DDj k
finalPositionYDDl z
,DDz {
goToDD{ 
)	DD Ä
;
DDÄ Å
breakEE 
;EE 
caseFF 
	POWERPILLFF 
:FF 
EatPowerPillGG  
(GG  !
idgameGG! '
,GG' (
userGG) -
,GG- .
initialPositionXGG/ ?
,GG? @
initialPositionYGGA Q
,GGQ R
finalPositionXGGS a
,GGa b
finalPositionYGGc q
,GGq r
goToGGr v
)GGv w
;GGw x
breakHH 
;HH 
caseII 
LISMANYELLOWII !
:II! "
	userEnemyJJ 
=JJ  
GetUserByColorLismanJJ  4
(JJ4 5
idgameJJ5 ;
,JJ; <
LISMANYELLOWJJ= I
)JJI J
;JJJ K
EatLismanEnemyKK "
(KK" #
idgameKK# )
,KK) *
userKK+ /
,KK/ 0
	userEnemyKK1 :
,KK: ;
initialPositionXKK< L
,KKL M
initialPositionYKKN ^
,KK^ _
finalPositionXKK` n
,KKn o
finalPositionYKKp ~
,KK~ 
goTo	KK É
)
KKÉ Ñ
;
KKÑ Ö
breakLL 
;LL 
caseMM 
	LISMANREDMM 
:MM 
	userEnemyNN 
=NN  
GetUserByColorLismanNN  4
(NN4 5
idgameNN5 ;
,NN; <
	LISMANREDNN= F
)NNF G
;NNG H
EatLismanEnemyOO "
(OO" #
idgameOO# )
,OO) *
userOO+ /
,OO/ 0
	userEnemyOO1 :
,OO: ;
initialPositionXOO< L
,OOL M
initialPositionYOON ^
,OO^ _
finalPositionXOO` n
,OOn o
finalPositionYOOp ~
,OO~ 
goTo	OO É
)
OOÉ Ñ
;
OOÑ Ö
breakPP 
;PP 
caseQQ 

LISMANBLUEQQ 
:QQ  
	userEnemyRR 
=RR  
GetUserByColorLismanRR  4
(RR4 5
idgameRR5 ;
,RR; <

LISMANBLUERR= G
)RRG H
;RRH I
EatLismanEnemySS "
(SS" #
idgameSS# )
,SS) *
userSS+ /
,SS/ 0
	userEnemySS1 :
,SS: ;
initialPositionXSS< L
,SSL M
initialPositionYSSN ^
,SS^ _
finalPositionXSS` n
,SSn o
finalPositionYSSp ~
,SS~ 
goTo	SS É
)
SSÉ Ñ
;
SSÑ Ö
breakTT 
;TT 
caseUU 
LISMANGREENUU  
:UU  !
	userEnemyVV 
=VV  
GetUserByColorLismanVV  4
(VV4 5
idgameVV5 ;
,VV; <
LISMANGREENVV= H
)VVH I
;VVI J
EatLismanEnemyWW "
(WW" #
idgameWW# )
,WW) *
userWW+ /
,WW/ 0
	userEnemyWW1 :
,WW: ;
initialPositionXWW< L
,WWL M
initialPositionYWWN ^
,WW^ _
finalPositionXWW` n
,WWn o
finalPositionYWWp ~
,WW~ 
goTo	WW É
)
WWÉ Ñ
;
WWÑ Ö
breakXX 
;XX 
}ZZ 
}\\ 	
private]] 
String]]  
GetUserByColorLisman]] +
(]]+ ,
int]], /
idgame]]0 6
,]]6 7
int]]7 :
colorLisman]]; F
)]]F G
{^^ 	
String__ 
user__ 
=__ 
null__ 
;__ 
foreach`` 
(`` 
KeyValuePair`` !
<``! "
String``" (
,``( )
InformationPlayer``* ;
>``; <
userGame``= E
in``F H&
multiplayerGameInformation``I c
[``c d
idgame``d j
]``j k
.``k l
lismanUsers``l w
)``w x
{aa 
ifbb 
(bb 
colorLismanbb 
==bb  "
userGamebb# +
.bb+ ,
Valuebb, 1
.bb1 2
colorLismanbb2 =
)bb= >
{bb> ?
usercc 
=cc 
userGamecc #
.cc# $
Keycc$ '
;cc' (
}dd 
}ee 
returnff 
userff 
;ff 
}gg 	
privatekk 
voidkk 
EatLismanEnemykk #
(kk# $
intkk$ '
idgamekk( .
,kk. /
Stringkk0 6
lismanAlivekk7 B
,kkB C
StringkkD J

lismanDeadkkK U
,kkU V
intkkW Z
initialPositionXkk[ k
,kkk l
intll 
initialPositionYll  
,ll  !
intll" %
finalPositionXll& 4
,ll4 5
intll6 9
finalPositionYll: H
,llH I
StringllI O
goTollP T
)llT U
{mm 	
intoo 
colorLismanAliveoo  
=oo! "&
multiplayerGameInformationoo# =
[oo= >
idgameoo> D
]ooD E
.ooE F
lismanUsersooF Q
[ooQ R
lismanAliveooR ]
]oo] ^
.oo^ _
colorLismanoo_ j
;ooj k
intpp 
colorLismanDeadpp 
=pp  !&
multiplayerGameInformationpp" <
[pp< =
idgamepp= C
]ppC D
.ppD E
lismanUsersppE P
[ppP Q

lismanDeadppQ [
]pp[ \
.pp\ ]
colorLismanpp] h
;pph i
intrr 
scoreLismanAliverr  
=rr! "
UpdateScorerr# .
(rr. /
idgamerr/ 5
,rr5 6
lismanAliverr7 B
,rrB C
POINTSEATLISMANrrD S
)rrS T
;rrT U
intss 
lifesLismanDeadss 
=ss  !&
multiplayerGameInformationss" <
[ss< =
idgamess= C
]ssC D
.ssD E
lismanUsersssE P
[ssP Q

lismanDeadssQ [
]ss[ \
.ss\ ]
lifesLismanss] h
;ssh i
booltt 
isDeadLismanDeadtt !
=tt" #
falsett$ )
;tt) *
intuu 
[uu 
]uu %
positionInitialLismanDeaduu +
=uu, -
newuu. 1
intuu2 5
[uu5 6
$numuu6 7
]uu7 8
;uu8 9
UpdateGameMapww 
(ww 
idgameww  
,ww  !
EMPTYBOXww" *
,ww* +
initialPositionXww, <
,ww< =
initialPositionYww> N
)wwN O
;wwO P
UpdateGameMapxx 
(xx 
idgamexx  
,xx  !
colorLismanAlivexx" 2
,xx2 3
finalPositionXxx4 B
,xxB C
finalPositionYxxD R
)xxR S
;xxS T
ifzz 
(zz &
multiplayerGameInformationzz *
[zz* +
idgamezz+ 1
]zz1 2
.zz2 3
lismanUserszz3 >
[zz> ?

lismanDeadzz? I
]zzI J
.zzJ K
lifesLismanzzK V
==zzW Y
$numzzZ [
)zz[ \
{{{ 
isDeadLismanDead||  
=||! "
true||# '
;||' (
}}} 
else~~ 
{ 
switch
ÄÄ 
(
ÄÄ 
colorLismanDead
ÄÄ '
)
ÄÄ' (
{
ÅÅ 
case
ÇÇ 
LISMANYELLOW
ÇÇ %
:
ÇÇ% &'
positionInitialLismanDead
ÉÉ 1
[
ÉÉ1 2
$num
ÉÉ2 3
]
ÉÉ3 4
=
ÉÉ5 6%
COORDINATESLISMANYELLOW
ÉÉ7 N
[
ÉÉN O
$num
ÉÉO P
]
ÉÉP Q
;
ÉÉQ R'
positionInitialLismanDead
ÑÑ 1
[
ÑÑ1 2
$num
ÑÑ2 3
]
ÑÑ3 4
=
ÑÑ5 6%
COORDINATESLISMANYELLOW
ÑÑ7 N
[
ÑÑN O
$num
ÑÑO P
]
ÑÑP Q
;
ÑÑQ R
break
ÖÖ 
;
ÖÖ 
case
ÜÜ 
	LISMANRED
ÜÜ "
:
ÜÜ" #'
positionInitialLismanDead
áá 1
[
áá1 2
$num
áá2 3
]
áá3 4
=
áá5 6"
COORDINATESLISMANRED
áá7 K
[
ááK L
$num
ááL M
]
ááM N
;
ááN O'
positionInitialLismanDead
àà 1
[
àà1 2
$num
àà2 3
]
àà3 4
=
àà5 6"
COORDINATESLISMANRED
àà7 K
[
ààK L
$num
ààL M
]
ààM N
;
ààN O
break
ââ 
;
ââ 
case
ää 

LISMANBLUE
ää #
:
ää# $'
positionInitialLismanDead
ãã 1
[
ãã1 2
$num
ãã2 3
]
ãã3 4
=
ãã5 6#
COORDINATESLISMANBLUE
ãã7 L
[
ããL M
$num
ããM N
]
ããN O
;
ããO P'
positionInitialLismanDead
åå 1
[
åå1 2
$num
åå2 3
]
åå3 4
=
åå5 6#
COORDINATESLISMANBLUE
åå7 L
[
ååL M
$num
ååM N
]
ååN O
;
ååO P
break
çç 
;
çç 
case
éé 
LISMANGREEN
éé $
:
éé$ %'
positionInitialLismanDead
èè 1
[
èè1 2
$num
èè2 3
]
èè3 4
=
èè5 6$
COORDINATESLISMANGREEN
èè7 M
[
èèM N
$num
èèN O
]
èèO P
;
èèP Q'
positionInitialLismanDead
êê 1
[
êê1 2
$num
êê2 3
]
êê3 4
=
êê5 6$
COORDINATESLISMANGREEN
êê7 M
[
êêM N
$num
êêN O
]
êêO P
;
êêP Q
break
ëë 
;
ëë 
}
íí 
UpdateGameMap
îî 
(
îî 
idgame
îî $
,
îî$ %
colorLismanDead
îî& 5
,
îî5 6'
positionInitialLismanDead
îî7 P
[
îîP Q
$num
îîQ R
]
îîR S
,
îîS T'
positionInitialLismanDead
îîU n
[
îîn o
$num
îîo p
]
îîp q
)
îîq r
;
îîr s
}
ïï 
lifesLismanDead
ññ 
=
ññ !
UpdateSubtractLifes
ññ 1
(
ññ1 2
idgame
ññ2 8
,
ññ8 9

lismanDead
ññ: D
)
ññD E
;
ññE F
if
òò 
(
òò 
isDeadLismanDead
òò  
)
òò  !
{
ôô 
foreach
öö 
(
öö 
var
öö 
userGame
öö %
in
öö& (
listGamesOnline
öö) 8
[
öö8 9
idgame
öö9 ?
]
öö? @
)
öö@ A
{
õõ 
try
úú 
{
ùù #
connectionGameService
ûû -
[
ûû- .
userGame
ûû. 6
]
ûû6 7
.
ûû7 8 
NotifyPlayerIsDead
ûû8 J
(
ûûJ K
colorLismanDead
ûûK Z
)
ûûZ [
;
ûû[ \#
connectionGameService
üü -
[
üü- .
userGame
üü. 6
]
üü6 7
.
üü7 8
NotifyLismanMoved
üü8 I
(
üüI J
colorLismanAlive
üüJ Z
,
üüZ [
finalPositionX
üü\ j
,
üüj k
finalPositionY
üül z
,
üüz {
goTo
üü{ 
)üü Ä
;üüÄ Å#
connectionGameService
†† -
[
††- .
userGame
††. 6
]
††6 7
.
††7 8
NotifyUpdateScore
††8 I
(
††I J
colorLismanAlive
††J Z
,
††Z [
scoreLismanAlive
††\ l
)
††l m
;
††m n#
connectionGameService
°° -
[
°°- .
userGame
°°. 6
]
°°6 7
.
°°7 8
NotifyUpdateLifes
°°8 I
(
°°I J
colorLismanDead
°°J Y
,
°°Y Z
lifesLismanDead
°°[ j
)
°°j k
;
°°k l
}
¢¢ 
catch
££ 
(
££ $
CommunicationException
££ 1
e
££2 3
)
££3 4
{
§§ 
Console
•• 
.
••  
	WriteLine
••  )
(
••) *
$str
••* P
+
••Q R
userGame
••S [
+
••\ ]
$str
••^ i
+
••j k
e
••l m
.
••m n
Message
••n u
)
••u v
;
••v w
}
¶¶ 
}
®® 
listGamesOnline
™™ 
[
™™  
idgame
™™  &
]
™™& '
.
™™' (
	RemoveAll
™™( 1
(
™™1 2
u
™™2 3
=>
™™4 6
u
™™7 8
==
™™9 ;

lismanDead
™™< F
)
™™F G
;
™™G H
if
´´ 
(
´´ 
listGamesOnline
´´ "
[
´´" #
idgame
´´# )
]
´´) *
.
´´* +
Count
´´+ 0
==
´´1 3
$num
´´4 5
)
´´5 6
{
¨¨ #
connectionGameService
≠≠ )
[
≠≠) *
lismanAlive
≠≠* 5
]
≠≠5 6
.
≠≠6 7
NotifyEndGame
≠≠7 D
(
≠≠D E
lismanAlive
≠≠E P
)
≠≠P Q
;
≠≠Q R
EndGame
ÆÆ 
(
ÆÆ 
idgame
ÆÆ "
,
ÆÆ" #
lismanAlive
ÆÆ$ /
)
ÆÆ/ 0
;
ÆÆ0 1
}
ØØ 
}
∞∞ 
else
±± 
{
≤≤ #
connectionGameService
≥≥ %
[
≥≥% &

lismanDead
≥≥& 0
]
≥≥0 1
.
≥≥1 2+
ReturnLismanToInitialPosition
≥≥2 O
(
≥≥O P
colorLismanDead
≥≥P _
,
≥≥_ `'
positionInitialLismanDead
≥≥a z
[
≥≥z {
$num
≥≥{ |
]
≥≥| }
,
≥≥} ~(
positionInitialLismanDead≥≥ ò
[≥≥ò ô
$num≥≥ô ö
]≥≥ö õ
)≥≥õ ú
;≥≥ú ù
foreach
¥¥ 
(
¥¥ 
var
¥¥ 
userGame
¥¥ %
in
¥¥& (
listGamesOnline
¥¥) 8
[
¥¥8 9
idgame
¥¥9 ?
]
¥¥? @
)
¥¥@ A
{
µµ 
try
∂∂ 
{
∑∑ #
connectionGameService
∏∏ -
[
∏∏- .
userGame
∏∏. 6
]
∏∏6 7
.
∏∏7 8
NotifyLismanMoved
∏∏8 I
(
∏∏I J
colorLismanAlive
∏∏J Z
,
∏∏Z [
finalPositionX
∏∏\ j
,
∏∏j k
finalPositionY
∏∏l z
,
∏∏z {
goTo
∏∏{ 
)∏∏ Ä
;∏∏Ä Å#
connectionGameService
ππ -
[
ππ- .
userGame
ππ. 6
]
ππ6 7
.
ππ7 8
NotifyLismanMoved
ππ8 I
(
ππI J
colorLismanDead
ππJ Y
,
ππY Z'
positionInitialLismanDead
ππ[ t
[
ππt u
$num
ππu v
]
ππv w
,
ππw x(
positionInitialLismanDeadππy í
[ππí ì
$numππì î
]ππî ï
,ππï ñ
goToππñ ö
)ππö õ
;ππõ ú#
connectionGameService
ªª -
[
ªª- .
userGame
ªª. 6
]
ªª6 7
.
ªª7 8
NotifyUpdateScore
ªª8 I
(
ªªI J
colorLismanAlive
ªªJ Z
,
ªªZ [
scoreLismanAlive
ªª\ l
)
ªªl m
;
ªªm n#
connectionGameService
ºº -
[
ºº- .
userGame
ºº. 6
]
ºº6 7
.
ºº7 8
NotifyUpdateLifes
ºº8 I
(
ººI J
colorLismanDead
ººJ Y
,
ººY Z
lifesLismanDead
ºº[ j
)
ººj k
;
ººk l
}
ΩΩ 
catch
ææ 
(
ææ $
CommunicationException
ææ 1
e
ææ2 3
)
ææ3 4
{
øø 
Console
¿¿ 
.
¿¿  
	WriteLine
¿¿  )
(
¿¿) *
$str
¿¿* P
+
¿¿Q R
userGame
¿¿S [
+
¿¿\ ]
$str
¿¿^ i
+
¿¿j k
e
¿¿l m
.
¿¿m n
Message
¿¿n u
)
¿¿u v
;
¿¿v w
}
¡¡ 
}
√√ 
}
ƒƒ 
}
∆∆ 	
private
»» 
void
»» 
EndGame
»» 
(
»» 
int
»»  
idgame
»»! '
,
»»' (
String
»») /

userWinner
»»0 :
)
»»: ;
{
…… 	
try
   
{
ÀÀ 
using
ÃÃ 
(
ÃÃ 
var
ÃÃ 
dataBase
ÃÃ #
=
ÃÃ$ %
new
ÃÃ& )"
EntityModelContainer
ÃÃ* >
(
ÃÃ> ?
)
ÃÃ? @
)
ÃÃ@ A
{
ÕÕ 
var
ŒŒ 

gameUpdate
ŒŒ "
=
ŒŒ# $
dataBase
ŒŒ% -
.
ŒŒ- .
GameSet
ŒŒ. 5
.
ŒŒ5 6
Where
ŒŒ6 ;
(
ŒŒ; <
u
ŒŒ< =
=>
ŒŒ> @
u
ŒŒA B
.
ŒŒB C
Id
ŒŒC E
==
ŒŒF H
idgame
ŒŒI O
)
ŒŒO P
.
ŒŒP Q
FirstOrDefault
ŒŒQ _
(
ŒŒ_ `
)
ŒŒ` a
;
ŒŒa b
if
œœ 
(
œœ 

gameUpdate
œœ "
.
œœ" #
Id
œœ# %
!=
œœ& (
$num
œœ) *
)
œœ* +
{
–– 

gameUpdate
—— "
.
——" #
Last_update
——# .
=
——/ 0
DateTime
——1 9
.
——9 :
Now
——: =
;
——= >

gameUpdate
““ "
.
““" #
Status
““# )
=
““* +
false
““, 1
;
““1 2

gameUpdate
”” "
.
””" #
	Game_over
””# ,
=
””- .
DateTime
””/ 7
.
””7 8
Now
””8 ;
;
””; <
foreach
‘‘ 
(
‘‘  !
KeyValuePair
‘‘! -
<
‘‘- .
String
‘‘. 4
,
‘‘4 5
InformationPlayer
‘‘6 G
>
‘‘G H
players
‘‘I P
in
‘‘Q S(
multiplayerGameInformation
‘‘T n
[
‘‘n o
idgame
‘‘o u
]
‘‘u v
.
‘‘v w
lismanUsers‘‘w Ç
)‘‘Ç É
{
’’ 
var
÷÷ 
account
÷÷ &
=
÷÷' (
dataBase
÷÷) 1
.
÷÷1 2

AccountSet
÷÷2 <
.
÷÷< =
Where
÷÷= B
(
÷÷B C
u
÷÷C D
=>
÷÷E G
u
÷÷H I
.
÷÷I J
User
÷÷J N
==
÷÷O Q
players
÷÷R Y
.
÷÷Y Z
Key
÷÷Z ]
)
÷÷] ^
.
÷÷^ _
FirstOrDefault
÷÷_ m
(
÷÷m n
)
÷÷n o
;
÷÷o p
account
◊◊ #
.
◊◊# $
Record
◊◊$ *
.
◊◊* +
Mult_best_score
◊◊+ :
=
◊◊; <
players
◊◊= D
.
◊◊D E
Value
◊◊E J
.
◊◊J K
scoreLisman
◊◊K V
;
◊◊V W
account
ÿÿ #
.
ÿÿ# $
Record
ÿÿ$ *
.
ÿÿ* +
Mult_games_played
ÿÿ+ <
+=
ÿÿ= ?
$num
ÿÿ@ A
;
ÿÿA B
if
ŸŸ 
(
ŸŸ 
players
ŸŸ &
.
ŸŸ& '
Key
ŸŸ' *
==
ŸŸ+ -

userWinner
ŸŸ. 8
)
ŸŸ8 9
{
⁄⁄ 
account
€€  '
.
€€' (
Record
€€( .
.
€€. /
Mult_games_won
€€/ =
+=
€€> @
$num
€€A B
;
€€B C
}
‹‹ 

gameUpdate
›› &
.
››& '
Members
››' .
.
››. /
Add
››/ 2
(
››2 3
account
››3 :
)
››: ;
;
››; <
}
ﬁﬁ 
try
ﬂﬂ 
{
‡‡ 
dataBase
·· $
.
··$ %
SaveChanges
··% 0
(
··0 1
)
··1 2
;
··2 3
}
„„ 
catch
‰‰ 
(
‰‰ )
DbEntityValidationException
‰‰ :
ex
‰‰; =
)
‰‰= >
{
ÂÂ 
Logger
ÊÊ "
.
ÊÊ" #
log
ÊÊ# &
.
ÊÊ& '
Warn
ÊÊ' +
(
ÊÊ+ ,
$str
ÊÊ, E
+
ÊÊF G
ex
ÊÊH J
)
ÊÊJ K
;
ÊÊK L
}
ÁÁ 
}
ËË 
}
ÈÈ 
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ 
	Exception
ÎÎ 
ex
ÎÎ 
)
ÎÎ  
{
ÏÏ 
Logger
ÌÌ 
.
ÌÌ 
log
ÌÌ 
.
ÌÌ 
Error
ÌÌ  
(
ÌÌ  !
$str
ÌÌ! ;
+
ÌÌ< =
ex
ÌÌ> @
.
ÌÌ@ A
Message
ÌÌA H
)
ÌÌH I
;
ÌÌI J
}
ÓÓ 
}
ÔÔ 	
private
ÒÒ 
void
ÒÒ 
UpdateGameMap
ÒÒ "
(
ÒÒ" #
int
ÒÒ# &
idgame
ÒÒ' -
,
ÒÒ- .
int
ÒÒ/ 2
newValue
ÒÒ3 ;
,
ÒÒ; <
int
ÒÒ= @
	positionX
ÒÒA J
,
ÒÒJ K
int
ÒÒL O
	positionY
ÒÒP Y
)
ÒÒY Z
{
ÚÚ 	(
multiplayerGameInformation
ÛÛ &
[
ÛÛ& '
idgame
ÛÛ' -
]
ÛÛ- .
.
ÛÛ. /
gameMap
ÛÛ/ 6
[
ÛÛ6 7
	positionX
ÛÛ7 @
,
ÛÛ@ A
	positionY
ÛÛB K
]
ÛÛK L
=
ÛÛM N
newValue
ÛÛO W
;
ÛÛW X
}
ÙÙ 	
private
ˆˆ 
int
ˆˆ !
UpdateSubtractLifes
ˆˆ '
(
ˆˆ' (
int
ˆˆ( +
idgame
ˆˆ, 2
,
ˆˆ2 3
String
ˆˆ4 :
user
ˆˆ; ?
)
ˆˆ? @
{
˜˜ 	
return
¯¯ (
multiplayerGameInformation
¯¯ -
[
¯¯- .
idgame
¯¯. 4
]
¯¯4 5
.
¯¯5 6
lismanUsers
¯¯6 A
[
¯¯A B
user
¯¯B F
]
¯¯F G
.
¯¯G H
lifesLisman
¯¯H S
-=
¯¯T V
$num
¯¯W X
;
¯¯X Y
}
˘˘ 	
private
˚˚ 
int
˚˚ 
UpdateScore
˚˚ 
(
˚˚  
int
˚˚  #
idgame
˚˚$ *
,
˚˚* +
String
˚˚, 2
user
˚˚3 7
,
˚˚7 8
int
˚˚9 <
points
˚˚= C
)
˚˚C D
{
¸¸ 	
return
˝˝ (
multiplayerGameInformation
˝˝ ,
[
˝˝, -
idgame
˝˝- 3
]
˝˝3 4
.
˝˝4 5
lismanUsers
˝˝5 @
[
˝˝@ A
user
˝˝A E
]
˝˝E F
.
˝˝F G
scoreLisman
˝˝G R
+=
˝˝S U
points
˝˝V \
;
˝˝\ ]
}
˛˛ 	
private
ÄÄ 
void
ÄÄ %
MoveLismanToNewPosition
ÄÄ ,
(
ÄÄ, -
int
ÄÄ- 0
idgame
ÄÄ1 7
,
ÄÄ7 8
String
ÄÄ9 ?
user
ÄÄ@ D
,
ÄÄD E
int
ÄÄF I
initialPositionX
ÄÄJ Z
,
ÄÄZ [
int
ÄÄ\ _
initialPositionY
ÄÄ` p
,
ÄÄp q
int
ÄÄr u
finalPositionXÄÄv Ñ
,ÄÄÑ Ö
intÄÄÜ â
finalPositionYÄÄä ò
,ÄÄò ô
StringÄÄô ü
goToÄÄ† §
)ÄÄ§ •
{
ÅÅ 	
int
ÇÇ 
colorLisman
ÇÇ 
=
ÇÇ (
multiplayerGameInformation
ÇÇ 8
[
ÇÇ8 9
idgame
ÇÇ9 ?
]
ÇÇ? @
.
ÇÇ@ A
lismanUsers
ÇÇA L
[
ÇÇL M
user
ÇÇM Q
]
ÇÇQ R
.
ÇÇR S
colorLisman
ÇÇS ^
;
ÇÇ^ _
UpdateGameMap
ÉÉ 
(
ÉÉ 
idgame
ÉÉ  
,
ÉÉ  !
EMPTYBOX
ÉÉ" *
,
ÉÉ* +
initialPositionX
ÉÉ, <
,
ÉÉ< =
initialPositionY
ÉÉ> N
)
ÉÉN O
;
ÉÉO P
UpdateGameMap
ÑÑ 
(
ÑÑ 
idgame
ÑÑ  
,
ÑÑ  !
colorLisman
ÑÑ" -
,
ÑÑ. /
finalPositionX
ÑÑ0 >
,
ÑÑ> ?
finalPositionY
ÑÑ@ N
)
ÑÑN O
;
ÑÑO P
foreach
ÖÖ 
(
ÖÖ 
var
ÖÖ 
userGame
ÖÖ !
in
ÖÖ" $
listGamesOnline
ÖÖ% 4
[
ÖÖ4 5
idgame
ÖÖ5 ;
]
ÖÖ; <
)
ÖÖ< =
{
ÜÜ 
try
áá 
{
àà #
connectionGameService
ââ )
[
ââ) *
userGame
ââ* 2
]
ââ2 3
.
ââ3 4
NotifyLismanMoved
ââ4 E
(
ââE F
colorLisman
ââF Q
,
ââQ R
finalPositionX
ââS a
,
ââa b
finalPositionY
ââc q
,
ââq r
goTo
ââs w
)
ââw x
;
ââx y
}
ää 
catch
ãã 
(
ãã $
CommunicationException
ãã -
e
ãã. /
)
ãã/ 0
{
åå 
Console
çç 
.
çç 
	WriteLine
çç %
(
çç% &
$str
çç& L
+
ççM N
userGame
ççO W
+
ççX Y
$str
ççZ e
+
ççf g
e
ççh i
.
ççi j
Message
ççj q
)
ççq r
;
ççr s
}
éé 
}
êê 
}
ëë 	
private
íí 
void
íí 
EatPowerPill
íí !
(
íí! "
int
íí" %
idgame
íí& ,
,
íí, -
String
íí. 4
user
íí5 9
,
íí9 :
int
íí; >
initialPositionX
íí? O
,
ííO P
int
ííQ T
initialPositionY
ííU e
,
ííe f
int
ííg j
finalPositionX
íík y
,
ííy z
int
íí{ ~
finalPositionYíí ç
,ííé è
Stringííè ï
goToííñ ö
)ííö õ
{
ìì 	
int
îî 
colorLisman
îî 
=
îî (
multiplayerGameInformation
îî 8
[
îî8 9
idgame
îî9 ?
]
îî? @
.
îî@ A
lismanUsers
îîA L
[
îîL M
user
îîM Q
]
îîQ R
.
îîR S
colorLisman
îîS ^
;
îî^ _
UpdateGameMap
ïï 
(
ïï 
idgame
ïï  
,
ïï  !
EMPTYBOX
ïï" *
,
ïï* +
initialPositionX
ïï, <
,
ïï< =
initialPositionY
ïï> N
)
ïïN O
;
ïïO P
UpdateGameMap
ññ 
(
ññ 
idgame
ññ  
,
ññ  !
colorLisman
ññ" -
,
ññ- .
finalPositionX
ññ/ =
,
ññ= >
finalPositionY
ññ? M
)
ññM N
;
ññN O
int
óó 
scoreLisman
óó 
=
óó 
UpdateScore
óó )
(
óó) *
idgame
óó* 0
,
óó0 1
user
óó2 6
,
óó6 7
POINTSPOWERPILL
óó8 G
)
óóG H
;
óóH I#
connectionGameService
òò !
[
òò! "
user
òò" &
]
òò& '
.
òò' (
UpdateLismanSpeed
òò( 9
(
òò9 :
SPEEDPOWERFUL
òò: G
,
òòG H
true
òòI M
)
òòM N
;
òòN O
foreach
ôô 
(
ôô 
var
ôô 
userGame
ôô !
in
ôô" $
listGamesOnline
ôô% 4
[
ôô4 5
idgame
ôô5 ;
]
ôô; <
)
ôô< =
{
öö 
try
õõ 
{
úú #
connectionGameService
ùù )
[
ùù) *
userGame
ùù* 2
]
ùù2 3
.
ùù3 4(
NotifyDisappearedPowerPill
ùù4 N
(
ùùN O
finalPositionX
ùùO ]
,
ùù] ^
finalPositionY
ùù_ m
)
ùùm n
;
ùùn o#
connectionGameService
ûû )
[
ûû) *
userGame
ûû* 2
]
ûû2 3
.
ûû3 4
NotifyLismanMoved
ûû4 E
(
ûûE F
colorLisman
ûûF Q
,
ûûQ R
finalPositionX
ûûS a
,
ûûa b
finalPositionY
ûûc q
,
ûûq r
goTo
ûûr v
)
ûûv w
;
ûûw x#
connectionGameService
üü )
[
üü) *
userGame
üü* 2
]
üü2 3
.
üü3 4
NotifyUpdateScore
üü4 E
(
üüE F
colorLisman
üüF Q
,
üüQ R
scoreLisman
üüS ^
)
üü^ _
;
üü_ `
}
†† 
catch
°° 
(
°° $
CommunicationException
°° -
e
°°. /
)
°°/ 0
{
¢¢ 
Console
££ 
.
££ 
	WriteLine
££ %
(
££% &
$str
££& L
+
££M N
userGame
££O W
+
££X Y
$str
££Z e
+
££f g
e
££h i
.
££i j
Message
££j q
)
££q r
;
££r s
}
§§ 
}
¶¶ 
}
®® 	
private
™™ 
int
™™ 
GetValueBox
™™ 
(
™™  
int
™™  #
idGame
™™$ *
,
™™* +
int
™™+ .
finalPositionX
™™/ =
,
™™= >
int
™™? B
finalPositionY
™™C Q
)
™™Q R
{
´´ 	
int
¨¨ 
result
¨¨ 
=
¨¨ 
-
¨¨ 
$num
¨¨ 
;
¨¨ 
int
≠≠ 
valuePosition
≠≠ 
=
≠≠ (
multiplayerGameInformation
≠≠  :
[
≠≠: ;
idGame
≠≠; A
]
≠≠A B
.
≠≠B C
gameMap
≠≠C J
[
≠≠J K
finalPositionX
≠≠K Y
,
≠≠Y Z
finalPositionY
≠≠[ i
]
≠≠i j
;
≠≠j k
switch
ÆÆ 
(
ÆÆ 
valuePosition
ÆÆ !
)
ÆÆ! "
{
ØØ 
case
∞∞ 
EMPTYBOX
∞∞ 
:
∞∞ 
result
±± 
=
±± 
$num
±± 
;
±± 
break
≤≤ 
;
≤≤ 
case
≥≥ 
	POWERPILL
≥≥ 
:
≥≥ 
result
¥¥ 
=
¥¥ 
$num
¥¥ 
;
¥¥ 
break
µµ 
;
µµ 
case
∂∂ 
LISMANYELLOW
∂∂ !
:
∂∂! "
result
∑∑ 
=
∑∑ 
$num
∑∑ 
;
∑∑ 
break
∏∏ 
;
∏∏ 
case
ππ 
	LISMANRED
ππ 
:
ππ 
result
∫∫ 
=
∫∫ 
$num
∫∫ 
;
∫∫ 
break
ªª 
;
ªª 
case
ºº 

LISMANBLUE
ºº 
:
ºº  
result
ΩΩ 
=
ΩΩ 
$num
ΩΩ 
;
ΩΩ 
break
ææ 
;
ææ 
case
øø 
LISMANGREEN
øø  
:
øø  !
result
¿¿ 
=
¿¿ 
$num
¿¿ 
;
¿¿ 
break
¡¡ 
;
¡¡ 
case
¬¬ 
GHOST
¬¬ 
:
¬¬ 
result
√√ 
=
√√ 
$num
√√ 
;
√√ 
break
ƒƒ 
;
ƒƒ 
}
≈≈ 
return
«« 
result
«« 
;
«« 
}
»» 	
public
   
void
   
ReadMapGame
   
(
    
)
    !
{
ÀÀ 	
using
ÃÃ 
(
ÃÃ 
StreamReader
ÃÃ 
sr
ÃÃ  "
=
ÃÃ# $
new
ÃÃ% (
StreamReader
ÃÃ) 5
(
ÃÃ5 6
parentDirectory
ÃÃ6 E
+
ÃÃF G
$str
ÃÃH \
)
ÃÃ\ ]
)
ÃÃ] ^
{
ÕÕ 
for
œœ 
(
œœ 
int
œœ 
i
œœ 
=
œœ 
$num
œœ 
;
œœ 
i
œœ  !
<=
œœ" $
$num
œœ% '
;
œœ' (
i
œœ) *
++
œœ* ,
)
œœ, -
{
–– 
for
—— 
(
—— 
int
—— 
j
—— 
=
——  
$num
——! "
;
——" #
j
——$ %
<=
——& (
$num
——) +
;
——+ ,
j
——- .
++
——. 0
)
——0 1
{
““ 
int
”” 
caracter
”” $
=
””% &
sr
””' )
.
””) *
Read
””* .
(
””. /
)
””/ 0
;
””0 1
if
’’ 
(
’’ 
caracter
’’ $
!=
’’% '
-
’’( )
$num
’’) *
)
’’* +
{
÷÷ 
switch
◊◊ "
(
◊◊# $
caracter
◊◊$ ,
)
◊◊, -
{
ÿÿ 
case
ŸŸ  $
$num
ŸŸ% '
:
ŸŸ' (
GAMEMAP
⁄⁄$ +
[
⁄⁄+ ,
i
⁄⁄, -
,
⁄⁄- .
j
⁄⁄/ 0
]
⁄⁄0 1
=
⁄⁄2 3
$num
⁄⁄4 5
;
⁄⁄5 6
break
€€$ )
;
€€) *
case
‹‹  $
$num
‹‹% '
:
‹‹' (
GAMEMAP
››$ +
[
››+ ,
i
››, -
,
››- .
j
››/ 0
]
››0 1
=
››2 3
$num
››4 5
;
››5 6
break
ﬁﬁ$ )
;
ﬁﬁ) *
case
ﬂﬂ  $
$num
ﬂﬂ% '
:
ﬂﬂ' (
GAMEMAP
‡‡$ +
[
‡‡+ ,
i
‡‡, -
,
‡‡- .
j
‡‡/ 0
]
‡‡0 1
=
‡‡2 3
$num
‡‡4 5
;
‡‡5 6
break
··$ )
;
··) *
case
‚‚  $
$num
‚‚% '
:
‚‚' (
GAMEMAP
„„$ +
[
„„+ ,
i
„„, -
,
„„- .
j
„„/ 0
]
„„0 1
=
„„2 3
$num
„„4 5
;
„„5 6
break
‰‰$ )
;
‰‰) *
case
ÂÂ  $
$num
ÂÂ% '
:
ÂÂ' (
GAMEMAP
ÊÊ$ +
[
ÊÊ+ ,
i
ÊÊ, -
,
ÊÊ- .
j
ÊÊ/ 0
]
ÊÊ0 1
=
ÊÊ2 3
$num
ÊÊ4 5
;
ÊÊ5 6
break
ÁÁ$ )
;
ÁÁ) *
case
ËË  $
$num
ËË% '
:
ËË' (
GAMEMAP
ÈÈ$ +
[
ÈÈ+ ,
i
ÈÈ, -
,
ÈÈ- .
j
ÈÈ/ 0
]
ÈÈ0 1
=
ÈÈ2 3
$num
ÈÈ4 5
;
ÈÈ5 6
break
ÍÍ$ )
;
ÍÍ) *
case
ÎÎ  $
$num
ÎÎ% '
:
ÎÎ' (
GAMEMAP
ÏÏ$ +
[
ÏÏ+ ,
i
ÏÏ, -
,
ÏÏ- .
j
ÏÏ/ 0
]
ÏÏ0 1
=
ÏÏ2 3
$num
ÏÏ4 5
;
ÏÏ5 6
break
ÌÌ$ )
;
ÌÌ) *
case
ÓÓ  $
$num
ÓÓ% '
:
ÓÓ' (
GAMEMAP
ÔÔ$ +
[
ÔÔ+ ,
i
ÔÔ, -
,
ÔÔ- .
j
ÔÔ/ 0
]
ÔÔ0 1
=
ÔÔ2 3
$num
ÔÔ4 5
;
ÔÔ5 6
break
$ )
;
) *
}
ÚÚ 
}
ÙÙ 
}
ˆˆ 
}
˜˜ 
}
˘˘ 
}
˚˚ 	
public
˝˝ 
void
˝˝ 
RemovePower
˝˝ 
(
˝˝  
String
˝˝  &
user
˝˝' +
)
˝˝+ ,
{
˛˛ 	#
connectionGameService
ˇˇ !
[
ˇˇ! "
user
ˇˇ" &
]
ˇˇ& '
.
ˇˇ' (
UpdateLismanSpeed
ˇˇ( 9
(
ˇˇ9 :
SPEEDNORMAL
ˇˇ: E
,
ˇˇE F
false
ˇˇF K
)
ˇˇK L
;
ˇˇL M
}
ÄÄ 	
public
ÇÇ 
void
ÇÇ 
SaveLastUpdate
ÇÇ "
(
ÇÇ" #
int
ÇÇ# &
idgame
ÇÇ' -
)
ÇÇ- .
{
ÉÉ 	
try
ÑÑ 
{
ÖÖ 
using
ÜÜ 
(
ÜÜ 
var
ÜÜ 
dataBase
ÜÜ "
=
ÜÜ# $
new
ÜÜ% ("
EntityModelContainer
ÜÜ) =
(
ÜÜ= >
)
ÜÜ> ?
)
ÜÜ? @
{
áá 
var
àà 

gameUpdate
àà "
=
àà# $
dataBase
àà% -
.
àà- .
GameSet
àà. 5
.
àà5 6
Where
àà6 ;
(
àà; <
u
àà< =
=>
àà> @
u
ààA B
.
ààB C
Id
ààC E
==
ààF H
idgame
ààI O
)
ààO P
.
ààP Q
FirstOrDefault
ààQ _
(
àà_ `
)
àà` a
;
ààa b
if
ââ 
(
ââ 

gameUpdate
ââ !
.
ââ! "
Id
ââ" $
!=
ââ% '
$num
ââ( )
)
ââ) *
{
ää 

gameUpdate
ãã "
.
ãã" #
Last_update
ãã# .
=
ãã/ 0
DateTime
ãã1 9
.
ãã9 :
Now
ãã: =
;
ãã= >
try
åå 
{
çç 
dataBase
éé $
.
éé$ %
SaveChanges
éé% 0
(
éé0 1
)
éé1 2
;
éé2 3
}
êê 
catch
ëë 
(
ëë )
DbEntityValidationException
ëë :
ex
ëë; =
)
ëë= >
{
íí 
Logger
ìì "
.
ìì" #
log
ìì# &
.
ìì& '
Warn
ìì' +
(
ìì+ ,
$str
ìì, E
+
ììF G
ex
ììH J
)
ììJ K
;
ììK L
}
îî 
}
ïï 
}
ññ 
}
óó 
catch
óó 
(
óó 
	Exception
óó 
ex
óó 
)
óó  
{
òò 
Logger
ôô 
.
ôô 
log
ôô 
.
ôô 
Error
ôô  
(
ôô  !
$str
ôô! ;
+
ôô< =
ex
ôô> @
.
ôô@ A
Message
ôôA H
)
ôôH I
;
ôôI J
}
öö 
}
õõ 	
}
úú 
}ùù Ã
§C:\Users\Vik-t\Documents\Software Engineering\5to Semestre\Tecnolog√≠as para la Construcci√≥n\Proyecto\LISMAN\LismanService\LismanService\Properties\AssemblyInfo.cs
[ 
assembly 	
:	 

AssemblyTitle 
( 
$str (
)( )
]) *
[		 
assembly		 	
:			 

AssemblyDescription		 
(		 
$str		 !
)		! "
]		" #
[

 
assembly

 	
:

	 
!
AssemblyConfiguration

  
(

  !
$str

! #
)

# $
]

$ %
[ 
assembly 	
:	 

AssemblyCompany 
( 
$str 
) 
] 
[ 
assembly 	
:	 

AssemblyProduct 
( 
$str *
)* +
]+ ,
[ 
assembly 	
:	 

AssemblyCopyright 
( 
$str 0
)0 1
]1 2
[ 
assembly 	
:	 

AssemblyTrademark 
( 
$str 
)  
]  !
[ 
assembly 	
:	 

AssemblyCulture 
( 
$str 
) 
] 
[ 
assembly 	
:	 


ComVisible 
( 
false 
) 
] 
[ 
assembly 	
:	 

Guid 
( 
$str 6
)6 7
]7 8
[## 
assembly## 	
:##	 

AssemblyVersion## 
(## 
$str## $
)##$ %
]##% &
[$$ 
assembly$$ 	
:$$	 

AssemblyFileVersion$$ 
($$ 
$str$$ (
)$$( )
]$$) *
[%% 
assembly%% 	
:%%	 

log4net%% 
.%% 
Config%% 
.%% 
XmlConfigurator%% )
(%%) *

ConfigFile%%* 4
=%%5 6
$str%%7 G
)%%G H
]%%H I